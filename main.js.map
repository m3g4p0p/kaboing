{
  "version": 3,
  "sources": ["../node_modules/kaplay/src/math.ts", "../node_modules/kaplay/src/utils.ts", "../node_modules/kaplay/src/gamepad.json", "../node_modules/kaplay/src/app.ts", "../node_modules/kaplay/src/gfx.ts", "../node_modules/kaplay/src/assets.ts", "../node_modules/kaplay/src/constants.ts", "../node_modules/kaplay/src/math/navigation.ts", "../node_modules/kaplay/src/math/navigationmesh.ts", "../node_modules/kaplay/src/easings.ts", "../node_modules/kaplay/src/texPacker.ts", "../node_modules/kaplay/src/fonts.ts", "../node_modules/kaplay/src/components/draw/circle.ts", "../node_modules/kaplay/src/components/draw/color.ts", "../node_modules/kaplay/src/components/draw/drawon.ts", "../node_modules/kaplay/src/components/draw/fadeIn.ts", "../node_modules/kaplay/src/components/draw/mask.ts", "../node_modules/kaplay/src/components/draw/opacity.ts", "../node_modules/kaplay/src/components/draw/outline.ts", "../node_modules/kaplay/src/components/draw/particles.ts", "../node_modules/kaplay/src/components/draw/polygon.ts", "../node_modules/kaplay/src/components/draw/raycast.ts", "../node_modules/kaplay/src/components/draw/rect.ts", "../node_modules/kaplay/src/components/draw/shader.ts", "../node_modules/kaplay/src/components/draw/sprite.ts", "../node_modules/kaplay/src/components/draw/text.ts", "../node_modules/kaplay/src/components/draw/uvquad.ts", "../node_modules/kaplay/src/components/level/agent.ts", "../node_modules/kaplay/src/components/level/navigation.ts", "../node_modules/kaplay/src/components/level/patrol.ts", "../node_modules/kaplay/src/components/level/sentry.ts", "../node_modules/kaplay/src/components/level/tile.ts", "../node_modules/kaplay/src/components/misc/health.ts", "../node_modules/kaplay/src/components/misc/lifespan.ts", "../node_modules/kaplay/src/components/misc/named.ts", "../node_modules/kaplay/src/components/misc/state.ts", "../node_modules/kaplay/src/components/misc/stay.ts", "../node_modules/kaplay/src/components/misc/timer.ts", "../node_modules/kaplay/src/components/physics/area.ts", "../node_modules/kaplay/src/components/physics/body.ts", "../node_modules/kaplay/src/components/physics/doubleJump.ts", "../node_modules/kaplay/src/components/transform/anchor.ts", "../node_modules/kaplay/src/components/transform/fixed.ts", "../node_modules/kaplay/src/components/transform/follow.ts", "../node_modules/kaplay/src/components/transform/layer.ts", "../node_modules/kaplay/src/components/transform/move.ts", "../node_modules/kaplay/src/components/transform/offscreen.ts", "../node_modules/kaplay/src/components/transform/pos.ts", "../node_modules/kaplay/src/components/transform/rotate.ts", "../node_modules/kaplay/src/components/transform/scale.ts", "../node_modules/kaplay/src/components/transform/z.ts", "../node_modules/kaplay/src/kaboom.ts", "../src/util.js", "../src/setup.js", "../src/components.js", "../src/spawn.js", "../src/main.js"],
  "sourcesContent": ["import type { GameObj, LerpValue, RNGValue } from \"./types\";\n\n/**\n * Possible arguments for a Vec2.\n *\n * @group Math\n */\nexport type Vec2Args =\n    | [number, number]\n    | [number]\n    | [Vec2]\n    | [number | Vec2]\n    | [];\n\nexport function deg2rad(deg: number): number {\n    return deg * Math.PI / 180;\n}\n\nexport function rad2deg(rad: number): number {\n    return rad * 180 / Math.PI;\n}\n\nexport function clamp(\n    val: number,\n    min: number,\n    max: number,\n): number {\n    if (min > max) {\n        return clamp(val, max, min);\n    }\n    return Math.min(Math.max(val, min), max);\n}\n\nexport function lerp<V extends LerpValue>(\n    a: V,\n    b: V,\n    t: number,\n): V {\n    if (typeof a === \"number\" && typeof b === \"number\") {\n        return a + (b - a) * t as V;\n    } else if (a instanceof Vec2 && b instanceof Vec2) {\n        return a.lerp(b, t) as V;\n    } else if (a instanceof Color && b instanceof Color) {\n        return a.lerp(b, t) as V;\n    }\n    throw new Error(\n        `Bad value for lerp(): ${a}, ${b}. Only number, Vec2 and Color is supported.`,\n    );\n}\n\nexport function map(\n    v: number,\n    l1: number,\n    h1: number,\n    l2: number,\n    h2: number,\n): number {\n    return l2 + (v - l1) / (h1 - l1) * (h2 - l2);\n}\n\nexport function mapc(\n    v: number,\n    l1: number,\n    h1: number,\n    l2: number,\n    h2: number,\n): number {\n    return clamp(map(v, l1, h1, l2, h2), l2, h2);\n}\n\n/**\n * A 2D vector.\n *\n * @group Math\n */\nexport class Vec2 {\n    /** The x coordinate */\n    x: number = 0;\n    /** The y coordinate */\n    y: number = 0;\n\n    constructor(x: number = 0, y: number = x) {\n        this.x = x;\n        this.y = y;\n    }\n\n    /** Create a new Vec2 from an angle in degrees */\n    static fromAngle(deg: number) {\n        const angle = deg2rad(deg);\n        return new Vec2(Math.cos(angle), Math.sin(angle));\n    }\n\n    static LEFT = new Vec2(-1, 0);\n    static RIGHT = new Vec2(1, 0);\n    static UP = new Vec2(0, -1);\n    static DOWN = new Vec2(0, 1);\n\n    /** Clone the vector */\n    clone(): Vec2 {\n        return new Vec2(this.x, this.y);\n    }\n\n    /** Returns the addition with another vector. */\n    add(...args: Vec2Args): Vec2 {\n        const p2 = vec2(...args);\n        return new Vec2(this.x + p2.x, this.y + p2.y);\n    }\n\n    /** Returns the subtraction with another vector. */\n    sub(...args: Vec2Args): Vec2 {\n        const p2 = vec2(...args);\n        return new Vec2(this.x - p2.x, this.y - p2.y);\n    }\n\n    /** Scale by another vector. or a single number */\n    scale(...args: Vec2Args): Vec2 {\n        const s = vec2(...args);\n        return new Vec2(this.x * s.x, this.y * s.y);\n    }\n\n    /** Get distance between another vector */\n    dist(...args: Vec2Args): number {\n        const p2 = vec2(...args);\n        return this.sub(p2).len();\n    }\n\n    /** Get squared distance between another vector */\n    sdist(...args: Vec2Args): number {\n        const p2 = vec2(...args);\n        return this.sub(p2).slen();\n    }\n\n    len(): number {\n        return Math.sqrt(this.dot(this));\n    }\n\n    /**\n     * Get squared length of the vector\n     *\n     * @since v3000.0\n     */\n    slen(): number {\n        return this.dot(this);\n    }\n\n    /**\n     * Get the unit vector (length of 1).\n     */\n    unit(): Vec2 {\n        const len = this.len();\n        return len === 0 ? new Vec2(0) : this.scale(1 / len);\n    }\n\n    /**\n     * Get the perpendicular vector.\n     */\n    normal(): Vec2 {\n        return new Vec2(this.y, -this.x);\n    }\n\n    /**\n     * Get the reflection of a vector with a normal.\n     *\n     * @since v3000.0\n     */\n    reflect(normal: Vec2) {\n        return this.sub(normal.scale(2 * this.dot(normal)));\n    }\n\n    /**\n     * Get the projection of a vector onto another vector.\n     *\n     * @since v3000.0\n     */\n    project(on: Vec2) {\n        return on.scale(on.dot(this) / on.len());\n    }\n\n    /**\n     * Get the rejection of a vector onto another vector.\n     *\n     * @since v3000.0\n     */\n    reject(on: Vec2) {\n        return this.sub(this.project(on));\n    }\n\n    /**\n     * Get the dot product with another vector.\n     */\n    dot(p2: Vec2): number {\n        return this.x * p2.x + this.y * p2.y;\n    }\n\n    /**\n     * Get the cross product with another vector.\n     *\n     * @since v3000.0\n     */\n    cross(p2: Vec2): number {\n        return this.x * p2.y - this.y * p2.x;\n    }\n\n    /**\n     * Get the angle of the vector in degrees.\n     */\n    angle(...args: Vec2Args): number {\n        const p2 = vec2(...args);\n        return rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x));\n    }\n\n    /**\n     * Get the angle between this vector and another vector.\n     *\n     * @since v3000.0\n     */\n    angleBetween(...args: Vec2Args): number {\n        const p2 = vec2(...args);\n        return rad2deg(Math.atan2(this.cross(p2), this.dot(p2)));\n    }\n\n    /**\n     * Linear interpolate to a destination vector (for positions).\n     */\n    lerp(dest: Vec2, t: number): Vec2 {\n        return new Vec2(lerp(this.x, dest.x, t), lerp(this.y, dest.y, t));\n    }\n\n    /**\n     * Spherical linear interpolate to a destination vector (for rotations).\n     *\n     * @since v3000.0\n     */\n    slerp(dest: Vec2, t: number): Vec2 {\n        const cos = this.dot(dest);\n        const sin = this.cross(dest);\n        const angle = Math.atan2(sin, cos);\n        return this\n            .scale(Math.sin((1 - t) * angle))\n            .add(dest.scale(Math.sin(t * angle)))\n            .scale(1 / sin);\n    }\n\n    /**\n     * If the vector (x, y) is zero.\n     *\n     * @since v3000.0\n     */\n    isZero(): boolean {\n        return this.x === 0 && this.y === 0;\n    }\n\n    /**\n     * To n precision floating point.\n     */\n    toFixed(n: number): Vec2 {\n        return new Vec2(Number(this.x.toFixed(n)), Number(this.y.toFixed(n)));\n    }\n\n    /**\n     * Multiply by a Mat4.\n     *\n     * @since v3000.0\n     */\n    transform(m: Mat4): Vec2 {\n        return m.multVec2(this);\n    }\n\n    eq(other: Vec2): boolean {\n        return this.x === other.x && this.y === other.y;\n    }\n\n    bbox(): Rect {\n        return new Rect(this, 0, 0);\n    }\n\n    toString(): string {\n        return `vec2(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`;\n    }\n}\n\nexport function vec2(...args: Vec2Args): Vec2 {\n    if (args.length === 1) {\n        if (args[0] instanceof Vec2) {\n            return new Vec2(args[0].x, args[0].y);\n        } else if (Array.isArray(args[0]) && args[0].length === 2) {\n            return new Vec2(...args[0]);\n        }\n    }\n    // @ts-ignore\n    return new Vec2(...args);\n}\n\n/**\n * 0-255 RGBA color.\n *\n * @group Math\n */\nexport class Color {\n    /** Red (0-255. */\n    r: number = 255;\n    /** Green (0-255). */\n    g: number = 255;\n    /** Blue (0-255). */\n    b: number = 255;\n\n    constructor(r: number, g: number, b: number) {\n        this.r = clamp(r, 0, 255);\n        this.g = clamp(g, 0, 255);\n        this.b = clamp(b, 0, 255);\n    }\n\n    static fromArray(arr: number[]) {\n        return new Color(arr[0], arr[1], arr[2]);\n    }\n\n    /**\n     * Create color from hex string or literal.\n     *\n     * @example\n     * ```js\n     * Color.fromHex(0xfcef8d)\n     * Color.fromHex(\"#5ba675\")\n     * Color.fromHex(\"d46eb3\")\n     * ```\n     *\n     * @since v3000.0\n     */\n    static fromHex(hex: string | number) {\n        if (typeof hex === \"number\") {\n            return new Color(\n                (hex >> 16) & 0xff,\n                (hex >> 8) & 0xff,\n                (hex >> 0) & 0xff,\n            );\n        } else if (typeof hex === \"string\") {\n            const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(\n                hex,\n            );\n            return new Color(\n                parseInt(result[1], 16),\n                parseInt(result[2], 16),\n                parseInt(result[3], 16),\n            );\n        } else {\n            throw new Error(\"Invalid hex color format\");\n        }\n    }\n\n    // TODO: use range of [0, 360] [0, 100] [0, 100]?\n    static fromHSL(h: number, s: number, l: number) {\n        if (s == 0) {\n            return new Color(255 * l, 255 * l, 255 * l);\n        }\n\n        const hue2rgb = (p, q, t) => {\n            if (t < 0) t += 1;\n            if (t > 1) t -= 1;\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\n            if (t < 1 / 2) return q;\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n            return p;\n        };\n\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n        const r = hue2rgb(p, q, h + 1 / 3);\n        const g = hue2rgb(p, q, h);\n        const b = hue2rgb(p, q, h - 1 / 3);\n\n        return new Color(\n            Math.round(r * 255),\n            Math.round(g * 255),\n            Math.round(b * 255),\n        );\n    }\n\n    static RED = new Color(255, 0, 0);\n    static GREEN = new Color(0, 255, 0);\n    static BLUE = new Color(0, 0, 255);\n    static YELLOW = new Color(255, 255, 0);\n    static MAGENTA = new Color(255, 0, 255);\n    static CYAN = new Color(0, 255, 255);\n    static WHITE = new Color(255, 255, 255);\n    static BLACK = new Color(0, 0, 0);\n\n    clone(): Color {\n        return new Color(this.r, this.g, this.b);\n    }\n\n    /** Lighten the color (adds RGB by n). */\n    lighten(a: number): Color {\n        return new Color(this.r + a, this.g + a, this.b + a);\n    }\n\n    /** Darkens the color (subtracts RGB by n). */\n    darken(a: number): Color {\n        return this.lighten(-a);\n    }\n\n    invert(): Color {\n        return new Color(255 - this.r, 255 - this.g, 255 - this.b);\n    }\n\n    mult(other: Color): Color {\n        return new Color(\n            this.r * other.r / 255,\n            this.g * other.g / 255,\n            this.b * other.b / 255,\n        );\n    }\n\n    /**\n     * Linear interpolate to a destination color.\n     *\n     * @since v3000.0\n     */\n    lerp(dest: Color, t: number): Color {\n        return new Color(\n            lerp(this.r, dest.r, t),\n            lerp(this.g, dest.g, t),\n            lerp(this.b, dest.b, t),\n        );\n    }\n\n    /**\n     * Convert color into HSL format.\n     *\n     * @since v3001.0\n     */\n    toHSL(): [number, number, number] {\n        const r = this.r / 255;\n        const g = this.g / 255;\n        const b = this.b / 255;\n        const max = Math.max(r, g, b), min = Math.min(r, g, b);\n        let h = (max + min) / 2;\n        let s = h;\n        const l = h;\n        if (max == min) {\n            h = s = 0;\n        } else {\n            const d = max - min;\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n            switch (max) {\n                case r:\n                    h = (g - b) / d + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / d + 2;\n                    break;\n                case b:\n                    h = (r - g) / d + 4;\n                    break;\n            }\n            h /= 6;\n        }\n        return [h, s, l];\n    }\n\n    eq(other: Color): boolean {\n        return this.r === other.r\n            && this.g === other.g\n            && this.b === other.b;\n    }\n\n    toString(): string {\n        return `rgb(${this.r}, ${this.g}, ${this.b})`;\n    }\n\n    /**\n     * Return the hex string of color.\n     *\n     * @since v3000.0\n     */\n    toHex(): string {\n        return \"#\"\n            + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16)\n                .slice(1);\n    }\n\n    /**\n     * Return the color converted to an array.\n     *\n     * @since v3001.0\n     */\n    toArray(): Array<number> {\n        return [this.r, this.g, this.b];\n    }\n}\n\nexport function rgb(...args): Color {\n    if (args.length === 0) {\n        return new Color(255, 255, 255);\n    } else if (args.length === 1) {\n        if (args[0] instanceof Color) {\n            return args[0].clone();\n        } else if (typeof args[0] === \"string\") {\n            return Color.fromHex(args[0]);\n        } else if (Array.isArray(args[0]) && args[0].length === 3) {\n            return Color.fromArray(args[0]);\n        }\n    }\n    // @ts-ignore\n    return new Color(...args);\n}\n\nexport const hsl2rgb = (h, s, l) => Color.fromHSL(h, s, l);\n\n/**\n * @group Math\n */\nexport class Quad {\n    x: number = 0;\n    y: number = 0;\n    w: number = 1;\n    h: number = 1;\n    constructor(x: number, y: number, w: number, h: number) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    scale(other: Quad): Quad {\n        return new Quad(\n            this.x + this.w * other.x,\n            this.y + this.h * other.y,\n            this.w * other.w,\n            this.h * other.h,\n        );\n    }\n    pos() {\n        return new Vec2(this.x, this.y);\n    }\n    clone(): Quad {\n        return new Quad(this.x, this.y, this.w, this.h);\n    }\n    eq(other: Quad): boolean {\n        return this.x === other.x\n            && this.y === other.y\n            && this.w === other.w\n            && this.h === other.h;\n    }\n    toString(): string {\n        return `quad(${this.x}, ${this.y}, ${this.w}, ${this.h})`;\n    }\n}\n\nexport function quad(x: number, y: number, w: number, h: number): Quad {\n    return new Quad(x, y, w, h);\n}\n\n// Internal class\nclass Mat2 {\n    // 2x2 matrix\n    a: number;\n    b: number;\n    c: number;\n    d: number;\n\n    constructor(a: number, b: number, c: number, d: number) {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n    }\n\n    mul(other: Mat2) {\n        return new Mat2(\n            this.a * other.a + this.b * other.c,\n            this.a * other.b + this.b * other.d,\n            this.c * other.a + this.d * other.c,\n            this.c * other.b + this.d * other.d,\n        );\n    }\n\n    transform(point: Vec2): Vec2 {\n        return vec2(\n            this.a * point.x + this.b * point.y,\n            this.c * point.x + this.d * point.y,\n        );\n    }\n\n    get inverse() {\n        const det = this.det;\n        return new Mat2(\n            this.d / det,\n            -this.b / det,\n            -this.c / det,\n            this.a / det,\n        );\n    }\n\n    get transpose() {\n        return new Mat2(\n            this.a,\n            this.c,\n            this.b,\n            this.d,\n        );\n    }\n\n    get eigenvalues() {\n        const m = this.trace / 2;\n        const d = this.det;\n        const e1 = m + Math.sqrt(m * m - d);\n        const e2 = m - Math.sqrt(m * m - d);\n        return [e1, e2];\n    }\n\n    eigenvectors(e1: number, e2: number) {\n        if (this.c != 0) {\n            return [[e1 - this.d, this.c], [e2 - this.d, this.c]];\n        } else if (this.b != 0) {\n            return [[this.b, e1 - this.a], [this.b, e2 - this.a]];\n        } else {\n            if (Math.abs(this.transform(vec2(1, 0)).x - e1) < Number.EPSILON) {\n                return [[1, 0], [0, 1]];\n            } else {\n                return [[0, 1], [1, 0]];\n            }\n        }\n    }\n\n    get det() {\n        return this.a * this.d - this.b * this.c;\n    }\n\n    get trace() {\n        return this.a + this.d;\n    }\n\n    static rotation(radians: number) {\n        const c = Math.cos(radians);\n        const s = Math.sin(radians);\n        return new Mat2(\n            c,\n            s,\n            -s,\n            c,\n        );\n    }\n\n    static scale(x: number, y: number) {\n        return new Mat2(x, 0, 0, y);\n    }\n}\n\n// Internal class\nclass Mat23 {\n    // 2x3 matrix, since the last column is always (0, 0, 1)\n    a: number;\n    b: number; // 0\n    c: number;\n    d: number; // 0\n    e: number;\n    f: number; // 1\n    constructor(\n        a: number = 1,\n        b: number = 0,\n        c: number = 0,\n        d: number = 1,\n        e: number = 0,\n        f: number = 0,\n    ) {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.e = e;\n        this.f = f;\n    }\n    static fromMat2(m: Mat2) {\n        return new Mat23(\n            m.a,\n            m.b,\n            m.c,\n            m.d,\n            0,\n            0,\n        );\n    }\n    toMat2() {\n        return new Mat2(\n            this.a,\n            this.b,\n            this.c,\n            this.d,\n        );\n    }\n    static fromTranslation(t: Vec2) {\n        return new Mat23(\n            1,\n            0,\n            0,\n            1,\n            t.x,\n            t.y,\n        );\n    }\n    static fromRotation(radians: number) {\n        const c = Math.cos(radians);\n        const s = Math.sin(radians);\n        return new Mat23(\n            c,\n            s,\n            -s,\n            c,\n            0,\n            0,\n        );\n    }\n    static fromScale(s: Vec2): Mat23 {\n        return new Mat23(\n            s.x,\n            0,\n            0,\n            s.y,\n            0,\n            0,\n        );\n    }\n    mul(other: Mat23): Mat23 {\n        return new Mat23(\n            other.a * this.a + other.b * this.c,\n            other.a * this.b + other.b * this.d,\n            other.c * this.a + other.d * this.c,\n            other.c * this.b + other.d * this.d,\n            other.e * this.a + other.f * this.c + this.e,\n            other.e * this.b + other.f * this.d + this.f,\n        );\n    }\n    translate(t: Vec2): Mat23 {\n        this.e += t.x * this.a + t.y * this.c;\n        this.f += t.y * this.b + t.x * this.d;\n        return this;\n    }\n    rotate(radians: number): Mat23 {\n        const c = Math.cos(radians);\n        const s = Math.sin(radians);\n        const oldA = this.a;\n        const oldB = this.b;\n        this.a = c * this.a + s * this.c;\n        this.b = c * this.b + s * this.d;\n        this.c = c * this.c - s * oldA;\n        this.d = c * this.d - s * oldB;\n        return this;\n    }\n    scale(s: Vec2): Mat23 {\n        this.a *= s.x;\n        this.b *= s.x;\n        this.c *= s.y;\n        this.d *= s.y;\n        return this;\n    }\n    transform(p: Vec2) {\n        return vec2(\n            this.a * p.x + this.c * p.y + this.e,\n            this.b * p.x + this.d * p.y + this.f,\n        );\n    }\n\n    get det() {\n        return this.a * this.d - this.b * this.c;\n    }\n\n    get inverse() {\n        const det = this.det;\n        return new Mat23(\n            this.d / det,\n            -this.b / det,\n            -this.c / det,\n            this.a / det,\n            (this.c * this.f - this.d * this.e) / det,\n            (this.b * this.e - this.a * this.f) / det,\n        );\n    }\n}\n\n// Internal class\nclass Mat3 {\n    // m11 m12 m13\n    // m21 m22 m23\n    // m31 m32 m33\n    m11: number;\n    m12: number;\n    m13: number;\n    m21: number;\n    m22: number;\n    m23: number;\n    m31: number;\n    m32: number;\n    m33: number;\n\n    constructor(\n        m11: number,\n        m12: number,\n        m13: number,\n        m21: number,\n        m22: number,\n        m23: number,\n        m31: number,\n        m32: number,\n        m33: number,\n    ) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m13 = m13;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.m23 = m23;\n        this.m31 = m31;\n        this.m32 = m32;\n        this.m33 = m33;\n    }\n\n    static fromMat2(m: Mat2) {\n        return new Mat3(\n            m.a,\n            m.b,\n            0,\n            m.c,\n            m.d,\n            0,\n            0,\n            0,\n            1,\n        );\n    }\n\n    toMat2() {\n        return new Mat2(\n            this.m11,\n            this.m12,\n            this.m21,\n            this.m22,\n        );\n    }\n\n    mul(other: Mat3): Mat3 {\n        return new Mat3(\n            this.m11 * other.m11 + this.m12 * other.m21 + this.m13 * other.m31,\n            this.m11 * other.m12 + this.m12 * other.m22 + this.m13 * other.m32,\n            this.m11 * other.m13 + this.m12 * other.m23 + this.m13 * other.m33,\n            this.m21 * other.m11 + this.m22 * other.m21 + this.m23 * other.m31,\n            this.m21 * other.m12 + this.m22 * other.m22 + this.m23 * other.m32,\n            this.m21 * other.m13 + this.m22 * other.m23 + this.m23 * other.m33,\n            this.m31 * other.m11 + this.m32 * other.m21 + this.m33 * other.m31,\n            this.m31 * other.m12 + this.m32 * other.m22 + this.m33 * other.m32,\n            this.m31 * other.m13 + this.m32 * other.m23 + this.m33 * other.m33,\n        );\n    }\n\n    get det(): number {\n        return this.m11 * this.m22 * this.m33 + this.m12 * this.m23 * this.m31\n            + this.m13 * this.m21 * this.m32 - this.m13 * this.m22 * this.m31\n            - this.m12 * this.m21 * this.m33 - this.m11 * this.m23 * this.m32;\n    }\n\n    rotate(radians) {\n        const c = Math.cos(radians);\n        const s = Math.sin(radians);\n        const oldA = this.m11;\n        const oldB = this.m12;\n        this.m11 = c * this.m11 + s * this.m21;\n        this.m12 = c * this.m12 + s * this.m22;\n        this.m21 = c * this.m21 - s * oldA;\n        this.m22 = c * this.m22 - s * oldB;\n        return this;\n    }\n    scale(x, y) {\n        this.m11 *= x;\n        this.m12 *= x;\n        this.m21 *= y;\n        this.m22 *= y;\n        return this;\n    }\n\n    get inverse(): Mat3 {\n        const det = this.det;\n        return new Mat3(\n            (this.m22 * this.m33 - this.m23 * this.m32) / det,\n            (this.m13 * this.m32 - this.m12 * this.m33) / det,\n            (this.m12 * this.m23 - this.m13 * this.m22) / det,\n            (this.m23 * this.m31 - this.m21 * this.m33) / det,\n            (this.m11 * this.m33 - this.m13 * this.m31) / det,\n            (this.m13 * this.m21 - this.m11 * this.m23) / det,\n            (this.m21 * this.m32 - this.m22 * this.m31) / det,\n            (this.m12 * this.m31 - this.m11 * this.m32) / det,\n            (this.m11 * this.m22 - this.m12 * this.m21) / det,\n        );\n    }\n\n    get transpose(): Mat3 {\n        return new Mat3(\n            this.m11,\n            this.m21,\n            this.m31,\n            this.m12,\n            this.m22,\n            this.m32,\n            this.m13,\n            this.m23,\n            this.m33,\n        );\n    }\n}\n\n/**\n * @group Math\n */\nexport class Mat4 {\n    m: number[] = [\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n    ];\n\n    constructor(m?: number[]) {\n        if (m) {\n            this.m = m;\n        }\n    }\n\n    static translate(p: Vec2): Mat4 {\n        return new Mat4([\n            1,\n            0,\n            0,\n            0,\n            0,\n            1,\n            0,\n            0,\n            0,\n            0,\n            1,\n            0,\n            p.x,\n            p.y,\n            0,\n            1,\n        ]);\n    }\n\n    static scale(s: Vec2): Mat4 {\n        return new Mat4([\n            s.x,\n            0,\n            0,\n            0,\n            0,\n            s.y,\n            0,\n            0,\n            0,\n            0,\n            1,\n            0,\n            0,\n            0,\n            0,\n            1,\n        ]);\n    }\n\n    static rotateX(a: number): Mat4 {\n        a = deg2rad(-a);\n        const c = Math.cos(a);\n        const s = Math.sin(a);\n        return new Mat4([\n            1,\n            0,\n            0,\n            0,\n            0,\n            c,\n            -s,\n            0,\n            0,\n            s,\n            c,\n            0,\n            0,\n            0,\n            0,\n            1,\n        ]);\n    }\n\n    static rotateY(a: number): Mat4 {\n        a = deg2rad(-a);\n        const c = Math.cos(a);\n        const s = Math.sin(a);\n        return new Mat4([\n            c,\n            0,\n            s,\n            0,\n            0,\n            1,\n            0,\n            0,\n            -s,\n            0,\n            c,\n            0,\n            0,\n            0,\n            0,\n            1,\n        ]);\n    }\n\n    static rotateZ(a: number): Mat4 {\n        a = deg2rad(-a);\n        const c = Math.cos(a);\n        const s = Math.sin(a);\n        return new Mat4([\n            c,\n            -s,\n            0,\n            0,\n            s,\n            c,\n            0,\n            0,\n            0,\n            0,\n            1,\n            0,\n            0,\n            0,\n            0,\n            1,\n        ]);\n    }\n\n    translate(p: Vec2) {\n        this.m[12] += this.m[0] * p.x + this.m[4] * p.y;\n        this.m[13] += this.m[1] * p.x + this.m[5] * p.y;\n        this.m[14] += this.m[2] * p.x + this.m[6] * p.y;\n        this.m[15] += this.m[3] * p.x + this.m[7] * p.y;\n        return this;\n    }\n\n    scale(p: Vec2) {\n        this.m[0] *= p.x;\n        this.m[4] *= p.y;\n        this.m[1] *= p.x;\n        this.m[5] *= p.y;\n        this.m[2] *= p.x;\n        this.m[6] *= p.y;\n        this.m[3] *= p.x;\n        this.m[7] *= p.y;\n        return this;\n    }\n\n    rotate(a: number): Mat4 {\n        a = deg2rad(-a);\n        const c = Math.cos(a);\n        const s = Math.sin(a);\n        const m0 = this.m[0];\n        const m1 = this.m[1];\n        const m4 = this.m[4];\n        const m5 = this.m[5];\n        this.m[0] = m0 * c + m1 * s;\n        this.m[1] = -m0 * s + m1 * c;\n        this.m[4] = m4 * c + m5 * s;\n        this.m[5] = -m4 * s + m5 * c;\n        return this;\n    }\n\n    // TODO: in-place variant\n    mult(other: Mat4): Mat4 {\n        const out = [];\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                out[i * 4 + j] = this.m[0 * 4 + j] * other.m[i * 4 + 0]\n                    + this.m[1 * 4 + j] * other.m[i * 4 + 1]\n                    + this.m[2 * 4 + j] * other.m[i * 4 + 2]\n                    + this.m[3 * 4 + j] * other.m[i * 4 + 3];\n            }\n        }\n        return new Mat4(out);\n    }\n\n    multVec2(p: Vec2): Vec2 {\n        return new Vec2(\n            p.x * this.m[0] + p.y * this.m[4] + this.m[12],\n            p.x * this.m[1] + p.y * this.m[5] + this.m[13],\n        );\n    }\n\n    getTranslation() {\n        return new Vec2(this.m[12], this.m[13]);\n    }\n\n    getScale() {\n        if (this.m[0] != 0 || this.m[1] != 0) {\n            const det = this.m[0] * this.m[5] - this.m[1] * this.m[4];\n            const r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1]);\n            return new Vec2(r, det / r);\n        } else if (this.m[4] != 0 || this.m[5] != 0) {\n            const det = this.m[0] * this.m[5] - this.m[1] * this.m[4];\n            const s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5]);\n            return new Vec2(det / s, s);\n        } else {\n            return new Vec2(0, 0);\n        }\n    }\n\n    getRotation() {\n        if (this.m[0] != 0 || this.m[1] != 0) {\n            const r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1]);\n            return rad2deg(\n                this.m[1] > 0\n                    ? Math.acos(this.m[0] / r)\n                    : -Math.acos(this.m[0] / r),\n            );\n        } else if (this.m[4] != 0 || this.m[5] != 0) {\n            const s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5]);\n            return rad2deg(\n                Math.PI / 2 - (this.m[5] > 0\n                    ? Math.acos(-this.m[4] / s)\n                    : -Math.acos(this.m[4] / s)),\n            );\n        } else {\n            return 0;\n        }\n    }\n\n    getSkew() {\n        if (this.m[0] != 0 || this.m[1] != 0) {\n            const r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1]);\n            return new Vec2(\n                Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5])\n                    / (r * r),\n                0,\n            );\n        } else if (this.m[4] != 0 || this.m[5] != 0) {\n            const s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5]);\n            return new Vec2(\n                0,\n                Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5])\n                    / (s * s),\n            );\n        } else {\n            return new Vec2(0, 0);\n        }\n    }\n\n    invert(): Mat4 {\n        const out = [];\n\n        const f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11];\n        const f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11];\n        const f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10];\n        const f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11];\n        const f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10];\n        const f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9];\n        const f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7];\n        const f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n        const f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6];\n        const f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7];\n        const f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6];\n        const f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n        const f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5];\n        const f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7];\n        const f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7];\n        const f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6];\n        const f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7];\n        const f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6];\n        const f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5];\n\n        out[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02;\n        out[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04);\n        out[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05;\n        out[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05);\n\n        out[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02);\n        out[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04;\n        out[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05);\n        out[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05;\n\n        out[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08;\n        out[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10);\n        out[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12;\n        out[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12);\n\n        out[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15);\n        out[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17;\n        out[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18);\n        out[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18;\n\n        const det = this.m[0] * out[0]\n            + this.m[1] * out[4]\n            + this.m[2] * out[8]\n            + this.m[3] * out[12];\n\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                out[i * 4 + j] *= 1.0 / det;\n            }\n        }\n\n        return new Mat4(out);\n    }\n\n    clone(): Mat4 {\n        return new Mat4([...this.m]);\n    }\n\n    toString(): string {\n        return this.m.toString();\n    }\n}\n\nexport function wave(\n    lo: number,\n    hi: number,\n    t: number,\n    f = (t) => -Math.cos(t),\n): number {\n    return lo + (f(t) + 1) / 2 * (hi - lo);\n}\n\n// basic ANSI C LCG\nconst A = 1103515245;\nconst C = 12345;\nconst M = 2147483648;\n\n/**\n * @group Math\n */\nexport class RNG {\n    seed: number;\n    constructor(seed: number) {\n        this.seed = seed;\n    }\n    gen(): number {\n        this.seed = (A * this.seed + C) % M;\n        return this.seed / M;\n    }\n    genNumber(a: number, b: number): number {\n        return a + this.gen() * (b - a);\n    }\n    genVec2(a: Vec2, b?: Vec2): Vec2 {\n        return new Vec2(\n            this.genNumber(a.x, b.x),\n            this.genNumber(a.y, b.y),\n        );\n    }\n    genColor(a: Color, b: Color): Color {\n        return new Color(\n            this.genNumber(a.r, b.r),\n            this.genNumber(a.g, b.g),\n            this.genNumber(a.b, b.b),\n        );\n    }\n    genAny<T = RNGValue>(...args: T[]): T {\n        if (args.length === 0) {\n            return this.gen() as T;\n        } else if (args.length === 1) {\n            if (typeof args[0] === \"number\") {\n                return this.genNumber(0, args[0]) as T;\n            } else if (args[0] instanceof Vec2) {\n                return this.genVec2(vec2(0, 0), args[0]) as T;\n            } else if (args[0] instanceof Color) {\n                return this.genColor(rgb(0, 0, 0), args[0]) as T;\n            }\n        } else if (args.length === 2) {\n            if (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n                return this.genNumber(args[0], args[1]) as T;\n            } else if (args[0] instanceof Vec2 && args[1] instanceof Vec2) {\n                return this.genVec2(args[0], args[1]) as T;\n            } else if (args[0] instanceof Color && args[1] instanceof Color) {\n                return this.genColor(args[0], args[1]) as T;\n            }\n        }\n    }\n}\n\n// TODO: let user pass seed\nconst defRNG = new RNG(Date.now());\n\nexport function randSeed(seed?: number): number {\n    if (seed != null) {\n        defRNG.seed = seed;\n    }\n    return defRNG.seed;\n}\n\nexport function rand(...args) {\n    // @ts-ignore\n    return defRNG.genAny(...args);\n}\n\n// TODO: randi() to return 0 / 1?\nexport function randi(...args: number[]) {\n    return Math.floor(rand(...args));\n}\n\nexport function chance(p: number): boolean {\n    return rand() <= p;\n}\n\nexport function shuffle<T>(list: T[]): T[] {\n    for (let i = list.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [list[i], list[j]] = [list[j], list[i]];\n    }\n    return list;\n}\n\nexport function chooseMultiple<T>(list: T[], count: number): T[] {\n    return list.length <= count\n        ? list.slice()\n        : shuffle(list.slice()).slice(0, count);\n}\n\nexport function choose<T>(list: T[]): T {\n    return list[randi(list.length)];\n}\n\n// TODO: better name\nexport function testRectRect2(r1: Rect, r2: Rect): boolean {\n    return r1.pos.x + r1.width >= r2.pos.x\n        && r1.pos.x <= r2.pos.x + r2.width\n        && r1.pos.y + r1.height >= r2.pos.y\n        && r1.pos.y <= r2.pos.y + r2.height;\n}\n\nexport function testRectRect(r1: Rect, r2: Rect): boolean {\n    return r1.pos.x + r1.width > r2.pos.x\n        && r1.pos.x < r2.pos.x + r2.width\n        && r1.pos.y + r1.height > r2.pos.y\n        && r1.pos.y < r2.pos.y + r2.height;\n}\n\n// TODO: better name\nexport function testLineLineT(l1: Line, l2: Line): number | null {\n    if (\n        (l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y)\n        || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)\n    ) {\n        return null;\n    }\n\n    const denom = (l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x)\n        - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y);\n\n    // parallel\n    if (denom === 0) {\n        return null;\n    }\n\n    const ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y)\n        - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n    const ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y)\n        - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\n    // is the intersection on the segments\n    if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n        return null;\n    }\n\n    return ua;\n}\n\nexport function testLineLine(l1: Line, l2: Line): Vec2 | null {\n    const t = testLineLineT(l1, l2);\n    if (!t) return null;\n    return vec2(\n        l1.p1.x + t * (l1.p2.x - l1.p1.x),\n        l1.p1.y + t * (l1.p2.y - l1.p1.y),\n    );\n}\n\nexport function testRectLine(r: Rect, l: Line): boolean {\n    /*if (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n        return true\n    }\n    const pts = r.points()\n    return !!testLineLine(l, new Line(pts[0], pts[1]))\n        || !!testLineLine(l, new Line(pts[1], pts[2]))\n        || !!testLineLine(l, new Line(pts[2], pts[3]))\n        || !!testLineLine(l, new Line(pts[3], pts[0]))*/\n    const dir = l.p2.sub(l.p1);\n    let tmin = Number.NEGATIVE_INFINITY, tmax = Number.POSITIVE_INFINITY;\n\n    if (dir.x != 0.0) {\n        const tx1 = (r.pos.x - l.p1.x) / dir.x;\n        const tx2 = (r.pos.x + r.width - l.p1.x) / dir.x;\n\n        tmin = Math.max(tmin, Math.min(tx1, tx2));\n        tmax = Math.min(tmax, Math.max(tx1, tx2));\n    }\n\n    if (dir.y != 0.0) {\n        const ty1 = (r.pos.y - l.p1.y) / dir.y;\n        const ty2 = (r.pos.y + r.height - l.p1.y) / dir.y;\n\n        tmin = Math.max(tmin, Math.min(ty1, ty2));\n        tmax = Math.min(tmax, Math.max(ty1, ty2));\n    }\n\n    return tmax >= tmin && tmax >= 0 && tmin <= 1;\n}\n\nexport function testRectPoint2(r: Rect, pt: Vec2): boolean {\n    return pt.x >= r.pos.x\n        && pt.x <= r.pos.x + r.width\n        && pt.y >= r.pos.y\n        && pt.y <= r.pos.y + r.height;\n}\n\nexport function testRectPoint(r: Rect, pt: Vec2): boolean {\n    return pt.x > r.pos.x\n        && pt.x < r.pos.x + r.width\n        && pt.y > r.pos.y\n        && pt.y < r.pos.y + r.height;\n}\n\nexport function testRectCircle(r: Rect, c: Circle): boolean {\n    const nx = Math.max(r.pos.x, Math.min(c.center.x, r.pos.x + r.width));\n    const ny = Math.max(r.pos.y, Math.min(c.center.y, r.pos.y + r.height));\n    const nearestPoint = vec2(nx, ny);\n    return nearestPoint.sdist(c.center) <= c.radius * c.radius;\n}\n\nexport function testRectPolygon(r: Rect, p: Polygon): boolean {\n    return testPolygonPolygon(p, new Polygon(r.points()));\n}\n\nexport function testLinePoint(l: Line, pt: Vec2): boolean {\n    const v1 = pt.sub(l.p1);\n    const v2 = l.p2.sub(l.p1);\n\n    // Check if sine is 0, in that case lines are parallel.\n    // If not parallel, the point cannot lie on the line.\n    if (Math.abs(v1.cross(v2)) > Number.EPSILON) {\n        return false;\n    }\n\n    // Scalar projection of v1 on v2\n    const t = v1.dot(v2) / v2.dot(v2);\n    // Since t is percentual distance of pt from line.p1 on the line,\n    // it should be between 0% and 100%\n    return t >= 0 && t <= 1;\n}\n\nexport function testLineCircle(l: Line, circle: Circle): boolean {\n    const v = l.p2.sub(l.p1);\n    const a = v.dot(v);\n    const centerToOrigin = l.p1.sub(circle.center);\n    const b = 2 * v.dot(centerToOrigin);\n    const c = centerToOrigin.dot(centerToOrigin)\n        - circle.radius * circle.radius;\n    // Calculate the discriminant of ax^2 + bx + c\n    const dis = b * b - 4 * a * c;\n\n    // No root\n    if ((a <= Number.EPSILON) || (dis < 0)) {\n        return false;\n    } // One possible root\n    else if (dis == 0) {\n        const t = -b / (2 * a);\n        if (t >= 0 && t <= 1) {\n            return true;\n        }\n    } // Two possible roots\n    else {\n        const t1 = (-b + Math.sqrt(dis)) / (2 * a);\n        const t2 = (-b - Math.sqrt(dis)) / (2 * a);\n        if ((t1 >= 0 && t1 <= 1) || (t2 >= 0 && t2 <= 1)) {\n            return true;\n        }\n    }\n\n    // Check if line is completely within the circle\n    // We only need to check one point, since the line didn't cross the circle\n    return testCirclePoint(circle, l.p1);\n}\n\nexport function testLinePolygon(l: Line, p: Polygon): boolean {\n    // test if line is inside\n    if (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n        return true;\n    }\n\n    // test each line\n    for (let i = 0; i < p.pts.length; i++) {\n        const p1 = p.pts[i];\n        const p2 = p.pts[(i + 1) % p.pts.length];\n        if (testLineLine(l, new Line(p1, p2))) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function testCirclePoint(c: Circle, p: Vec2): boolean {\n    return c.center.sdist(p) < c.radius * c.radius;\n}\n\nexport function testCircleCircle(c1: Circle, c2: Circle): boolean {\n    return c1.center.sdist(c2.center)\n        < (c1.radius + c2.radius) * (c1.radius + c2.radius);\n}\n\nexport function testCirclePolygon(c: Circle, p: Polygon): boolean {\n    // For each edge check for intersection\n    let prev = p.pts[p.pts.length - 1];\n    for (const cur of p.pts) {\n        if (testLineCircle(new Line(prev, cur), c)) {\n            return true;\n        }\n        prev = cur;\n    }\n\n    // Check if the polygon is completely within the circle\n    // We only need to check one point, since the polygon didn't cross the circle\n    if (testCirclePoint(c, p.pts[0])) {\n        return true;\n    }\n\n    // Check if the circle is completely within the polygon\n    return testPolygonPoint(p, c.center);\n}\n\nexport function testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n    for (let i = 0; i < p1.pts.length; i++) {\n        if (\n            testLinePolygon(\n                new Line(p1.pts[i], p1.pts[(i + 1) % p1.pts.length]),\n                p2,\n            )\n        ) {\n            return true;\n        }\n    }\n    // Check if any of the points of the polygon lie in the other polygon\n    if (\n        p1.pts.some(p => testPolygonPoint(p2, p))\n        || p2.pts.some(p => testPolygonPoint(p1, p))\n    ) {\n        return true;\n    }\n    return false;\n}\n\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\nexport function testPolygonPoint(poly: Polygon, pt: Vec2): boolean {\n    let c = false;\n    const p = poly.pts;\n\n    for (let i = 0, j = p.length - 1; i < p.length; j = i++) {\n        if (\n            ((p[i].y > pt.y) != (p[j].y > pt.y))\n            && (pt.x\n                < (p[j].x - p[i].x) * (pt.y - p[i].y) / (p[j].y - p[i].y)\n                    + p[i].x)\n        ) {\n            c = !c;\n        }\n    }\n\n    return c;\n}\n\nexport function testEllipsePoint(ellipse: Ellipse, pt: Vec2): boolean {\n    // Transform the point into the ellipse's unrotated coordinate system at the origin\n    pt = pt.sub(ellipse.center);\n    const angle = deg2rad(ellipse.angle);\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const vx = pt.x * c + pt.y * s;\n    const vy = -pt.x * s + pt.y * c;\n    return vx * vx / (ellipse.radiusX * ellipse.radiusX)\n            + vy * vy / (ellipse.radiusY * ellipse.radiusY) < 1;\n}\n\nexport function testEllipseCircle(ellipse: Ellipse, circle: Circle): boolean {\n    // This is an approximation, because the parallel curve of an ellipse is an octic algebraic curve, not just a larger ellipse.\n    // Transform the circle's center into the ellipse's unrotated coordinate system at the origin\n    const center = circle.center.sub(ellipse.center);\n    const angle = deg2rad(ellipse.angle);\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const cx = center.x * c + center.y * s;\n    const cy = -center.x * s + center.y * c;\n    // Test with an approximate Minkowski sum of the ellipse and the circle\n    return testEllipsePoint(\n        new Ellipse(\n            vec2(),\n            ellipse.radiusX + circle.radius,\n            ellipse.radiusY + circle.radius,\n            0,\n        ),\n        vec2(cx, cy),\n    );\n}\n\nexport function testEllipseLine(ellipse: Ellipse, line: Line): boolean {\n    // Transform the line to the coordinate system where the ellipse is a unit circle\n    const T = ellipse.toMat2().inverse;\n    line = new Line(\n        T.transform(line.p1.sub(ellipse.center)),\n        T.transform(line.p2.sub(ellipse.center)),\n    );\n    return testLineCircle(line, new Circle(vec2(), 1));\n}\n\nexport function testEllipseEllipse(\n    ellipse1: Ellipse,\n    ellipse2: Ellipse,\n): boolean {\n    // First check if one of the ellipses isn't secretly a circle\n    if (ellipse1.radiusX === ellipse1.radiusY) {\n        return testEllipseCircle(\n            ellipse2,\n            new Circle(ellipse1.center, ellipse1.radiusX),\n        );\n    } else if (ellipse2.radiusX === ellipse2.radiusY) {\n        return testEllipseCircle(\n            ellipse1,\n            new Circle(ellipse2.center, ellipse2.radiusX),\n        );\n    }\n    // No luck, we need to solve the equation\n    /*\n    Etayo, Fernando, Laureano Gonzalez-Vega, and Natalia del Rio. \"A new approach to characterizing the relative position of two ellipses depending on one parameter.\" Computer aided geometric design 23, no. 4 (2006): 324-350.\n    */\n    const A1 = new Mat3(\n        1 / ellipse1.radiusX ** 2,\n        0,\n        0,\n        0,\n        1 / ellipse1.radiusY ** 2,\n        0,\n        0,\n        0,\n        -1,\n    );\n    const A2 = new Mat3(\n        1 / ellipse2.radiusX ** 2,\n        0,\n        0,\n        0,\n        1 / ellipse2.radiusY ** 2,\n        0,\n        0,\n        0,\n        -1,\n    );\n\n    const x1 = ellipse1.center.x;\n    const y1 = ellipse1.center.y;\n    const x2 = ellipse2.center.x;\n    const y2 = ellipse2.center.y;\n    const theta1 = deg2rad(ellipse1.angle);\n    const theta2 = deg2rad(ellipse2.angle);\n\n    const M1 = new Mat3(\n        Math.cos(theta1),\n        -Math.sin(theta1),\n        x1,\n        Math.sin(theta1),\n        Math.cos(theta1),\n        y1,\n        0,\n        0,\n        1,\n    );\n    const M2 = new Mat3(\n        Math.cos(theta2),\n        -Math.sin(theta2),\n        x2,\n        Math.sin(theta2),\n        Math.cos(theta2),\n        y2,\n        0,\n        0,\n        1,\n    );\n    const M1inv = M1.inverse;\n    const M2inv = M2.inverse;\n\n    const A = M1inv.transpose.mul(A1).mul(M1inv);\n    const B = M2inv.transpose.mul(A2).mul(M2inv);\n\n    const a11 = A.m11;\n    const a12 = A.m12;\n    const a13 = A.m13;\n    const a21 = A.m21;\n    const a22 = A.m22;\n    const a23 = A.m23;\n    const a31 = A.m31;\n    const a32 = A.m32;\n    const a33 = A.m33;\n\n    const b11 = B.m11;\n    const b12 = B.m12;\n    const b13 = B.m13;\n    const b21 = B.m21;\n    const b22 = B.m22;\n    const b23 = B.m23;\n    const b31 = B.m31;\n    const b32 = B.m32;\n    const b33 = B.m33;\n\n    const factor = a11 * a22 * a33 - a11 * a23 * a32 - a12 * a21 * a33\n        + a12 * a23 * a31 + a13 * a21 * a32 - a13 * a22 * a31;\n    const a =\n        (a11 * a22 * b33 - a11 * a23 * b32 - a11 * a32 * b23 + a11 * a33 * b22\n            - a12 * a21 * b33 + a12 * a23 * b31 + a12 * a31 * b23\n            - a12 * a33 * b21 + a13 * a21 * b32 - a13 * a22 * b31\n            - a13 * a31 * b22 + a13 * a32 * b21 + a21 * a32 * b13\n            - a21 * a33 * b12 - a22 * a31 * b13 + a22 * a33 * b11\n            + a23 * a31 * b12 - a23 * a32 * b11) / factor;\n    const b =\n        (a11 * b22 * b33 - a11 * b23 * b32 - a12 * b21 * b33 + a12 * b23 * b31\n            + a13 * b21 * b32 - a13 * b22 * b31 - a21 * b12 * b33\n            + a21 * b13 * b32 + a22 * b11 * b33 - a22 * b13 * b31\n            - a23 * b11 * b32 + a23 * b12 * b31 + a31 * b12 * b23\n            - a31 * b13 * b22 - a32 * b11 * b23 + a32 * b13 * b21\n            + a33 * b11 * b22 - a33 * b12 * b21) / factor;\n    const c =\n        (b11 * b22 * b33 - b11 * b23 * b32 - b12 * b21 * b33 + b12 * b23 * b31\n            + b13 * b21 * b32 - b13 * b22 * b31) / factor;\n\n    if (a >= 0) {\n        const condition1 = -3 * b + a ** 2;\n        const condition2 = 3 * a * c + b * a ** 2 - 4 * b ** 2;\n        const condition3 = -27 * c ** 2 + 18 * c * a * b + a ** 2 * b ** 2\n            - 4 * a ** 3 * c - 4 * b ** 3;\n        if (condition1 > 0 && condition2 < 0 && condition3 > 0) {\n            return false;\n        } else {\n            return true;\n        }\n    } else {\n        const condition1 = -3 * b + a ** 2;\n        const condition2 = -27 * c ** 2 + 18 * c * a * b + a ** 2 * b ** 2\n            - 4 * a ** 3 * c - 4 * b ** 3;\n        if (condition1 > 0 && condition2 > 0) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n}\n\nexport function testEllipseRect(ellipse: Ellipse, rect: Rect): boolean {\n    return testEllipsePolygon(ellipse, new Polygon(rect.points()));\n}\n\nexport function testEllipsePolygon(ellipse: Ellipse, poly: Polygon): boolean {\n    // Transform the polygon to the coordinate system where the ellipse is a unit circle\n    const T = ellipse.toMat2().inverse;\n    poly = new Polygon(poly.pts.map(p => T.transform(p.sub(ellipse.center))));\n    return testCirclePolygon(new Circle(vec2(), 1), poly);\n}\n\nexport function testPointPoint(p1: Vec2, p2: Vec2): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n/**\n * @group Math\n */\nexport type ShapeType = Point | Circle | Line | Rect | Polygon | Ellipse;\n\nexport function testPointShape(point: Point, shape: ShapeType): boolean {\n    if (shape instanceof Vec2) {\n        return testPointPoint(shape as Vec2, point.pt);\n    } else if (shape instanceof Circle) {\n        return testCirclePoint(shape as Circle, point.pt);\n    } else if (shape instanceof Line) {\n        return testLinePoint(shape as Line, point.pt);\n    } else if (shape instanceof Rect) {\n        return testRectPoint(shape as Rect, point.pt);\n    } else if (shape instanceof Polygon) {\n        return testPolygonPoint(shape as Polygon, point.pt);\n    } else if (shape instanceof Ellipse) {\n        return testEllipsePoint(shape as Ellipse, point.pt);\n    } else {\n        return false;\n    }\n}\n\nexport function testLineShape(line: Line, shape: ShapeType | Vec2): boolean {\n    if (shape instanceof Vec2) {\n        return testLinePoint(line, shape as Vec2);\n    } else if (shape instanceof Circle) {\n        return testLineCircle(line, shape as Circle);\n    } else if (shape instanceof Line) {\n        return testLineLine(line, shape as Line) != null;\n    } else if (shape instanceof Rect) {\n        return testRectLine(shape as Rect, line);\n    } else if (shape instanceof Polygon) {\n        return testLinePolygon(line, shape as Polygon);\n    } else if (shape instanceof Ellipse) {\n        return testEllipseLine(shape as Ellipse, line);\n    } else {\n        return false;\n    }\n}\n\nexport function testCircleShape(\n    circle: Circle,\n    shape: ShapeType | Vec2,\n): boolean {\n    if (shape instanceof Vec2) {\n        return testCirclePoint(circle, shape as Vec2);\n    } else if (shape instanceof Circle) {\n        return testCircleCircle(circle, shape as Circle);\n    } else if (shape instanceof Line) {\n        return testLineCircle(shape as Line, circle);\n    } else if (shape instanceof Rect) {\n        return testRectCircle(shape as Rect, circle);\n    } else if (shape instanceof Polygon) {\n        return testCirclePolygon(circle, shape as Polygon);\n    } else if (shape instanceof Ellipse) {\n        return testEllipseCircle(shape as Ellipse, circle);\n    } else {\n        return false;\n    }\n}\n\nexport function testRectShape(rect: Rect, shape: ShapeType | Vec2): boolean {\n    if (shape instanceof Vec2) {\n        return testRectPoint(rect, shape as Vec2);\n    } else if (shape instanceof Circle) {\n        return testRectCircle(rect, shape as Circle);\n    } else if (shape instanceof Line) {\n        return testRectLine(rect, shape as Line);\n    } else if (shape instanceof Rect) {\n        return testRectRect(rect, shape as Rect);\n    } else if (shape instanceof Polygon) {\n        return testRectPolygon(rect, shape as Polygon);\n    } else if (shape instanceof Ellipse) {\n        return testEllipseRect(shape as Ellipse, rect);\n    } else {\n        return false;\n    }\n}\n\nexport function testPolygonShape(\n    polygon: Polygon,\n    shape: ShapeType | Vec2,\n): boolean {\n    if (shape instanceof Vec2) {\n        return testPolygonPoint(polygon, shape as Vec2);\n    } else if (shape instanceof Circle) {\n        return testCirclePolygon(shape as Circle, polygon);\n    } else if (shape instanceof Line) {\n        return testLinePolygon(shape as Line, polygon);\n    } else if (shape instanceof Rect) {\n        return testRectPolygon(shape as Rect, polygon);\n    } else if (shape instanceof Polygon) {\n        return testPolygonPolygon(shape as Polygon, polygon);\n    } else if (shape instanceof Ellipse) {\n        return testEllipsePolygon(shape as Ellipse, polygon);\n    } else {\n        return false;\n    }\n}\n\nexport function testEllipseShape(ellipse: Ellipse, shape: ShapeType): boolean {\n    if (shape instanceof Vec2) {\n        return testEllipsePoint(ellipse, shape as Vec2);\n    } else if (shape instanceof Circle) {\n        return testEllipseCircle(ellipse, shape as Circle);\n    } else if (shape instanceof Line) {\n        return testEllipseLine(ellipse, shape as Line);\n    } else if (shape instanceof Rect) {\n        return testEllipseRect(ellipse, shape as Rect);\n    } else if (shape instanceof Polygon) {\n        return testEllipsePolygon(ellipse, shape as Polygon);\n    } else if (shape instanceof Ellipse) {\n        return testEllipseEllipse(shape as Ellipse, ellipse);\n    } else {\n        return false;\n    }\n}\n\nexport function testShapeShape(shape1: ShapeType, shape2: ShapeType): boolean {\n    if (shape1 instanceof Vec2) {\n        return testPointShape(new Point(shape1), shape2);\n    } else if (shape1 instanceof Circle) {\n        return testCircleShape(shape1 as Circle, shape2);\n    } else if (shape1 instanceof Line) {\n        return testLineShape(shape1 as Line, shape2);\n    } else if (shape1 instanceof Rect) {\n        return testRectShape(shape1 as Rect, shape2);\n    } else if (shape1 instanceof Polygon) {\n        return testPolygonShape(shape1 as Polygon, shape2);\n    } else if (shape1 instanceof Ellipse) {\n        return testEllipseShape(shape1 as Ellipse, shape2);\n    } else {\n        return false;\n    }\n}\n\n/**\n * @group Math\n */\nexport type RaycastHit = {\n    fraction: number;\n    normal: Vec2;\n    point: Vec2;\n    gridPos?: Vec2;\n    object?: GameObj;\n};\n\n/**\n * @group Math\n */\nexport type RaycastResult = RaycastHit | null;\n\nfunction raycastLine(origin: Vec2, direction: Vec2, line: Line): RaycastResult {\n    const a = origin;\n    const c = line.p1;\n    const d = line.p2;\n    const ab = direction;\n    const cd = d.sub(c);\n    const abxcd = ab.cross(cd);\n    // If parallel, no intersection\n    if (Math.abs(abxcd) < Number.EPSILON) {\n        return null;\n    }\n    const ac = c.sub(a);\n    const s = ac.cross(cd) / abxcd;\n    // Outside the ray\n    if (s <= 0 || s >= 1) {\n        return null;\n    }\n    // Outside the line\n    const t = ac.cross(ab) / abxcd;\n    if (t <= 0 || t >= 1) {\n        return null;\n    }\n\n    const normal = cd.normal().unit();\n    if (direction.dot(normal) > 0) {\n        normal.x *= -1;\n        normal.y *= -1;\n    }\n\n    return {\n        point: a.add(ab.scale(s)),\n        normal: normal,\n        fraction: s,\n    };\n}\n\nfunction raycastRect(origin: Vec2, direction: Vec2, rect: Rect) {\n    let tmin = Number.NEGATIVE_INFINITY, tmax = Number.POSITIVE_INFINITY;\n    let normal;\n\n    if (origin.x != 0.0) {\n        const tx1 = (rect.pos.x - origin.x) / direction.x;\n        const tx2 = (rect.pos.x + rect.width - origin.x) / direction.x;\n\n        normal = vec2(-Math.sign(direction.x), 0);\n\n        tmin = Math.max(tmin, Math.min(tx1, tx2));\n        tmax = Math.min(tmax, Math.max(tx1, tx2));\n    }\n\n    if (origin.y != 0.0) {\n        const ty1 = (rect.pos.y - origin.y) / direction.y;\n        const ty2 = (rect.pos.y + rect.height - origin.y) / direction.y;\n\n        if (Math.min(ty1, ty2) > tmin) {\n            normal = vec2(0, -Math.sign(direction.y));\n        }\n\n        tmin = Math.max(tmin, Math.min(ty1, ty2));\n        tmax = Math.min(tmax, Math.max(ty1, ty2));\n    }\n\n    if (tmax >= tmin && tmin >= 0 && tmin <= 1) {\n        const point = origin.add(direction.scale(tmin));\n        return {\n            point: point,\n            normal: normal,\n            fraction: tmin,\n        };\n    } else {\n        return null;\n    }\n}\n\nfunction raycastCircle(\n    origin: Vec2,\n    direction: Vec2,\n    circle: Circle,\n): RaycastResult {\n    const a = origin;\n    const c = circle.center;\n    const ab = direction;\n    const A = ab.dot(ab);\n    const centerToOrigin = a.sub(c);\n    const B = 2 * ab.dot(centerToOrigin);\n    const C = centerToOrigin.dot(centerToOrigin)\n        - circle.radius * circle.radius;\n    // Calculate the discriminant of ax^2 + bx + c\n    const disc = B * B - 4 * A * C;\n    // No root\n    if ((A <= Number.EPSILON) || (disc < 0)) {\n        return null;\n    } // One possible root\n    else if (disc == 0) {\n        const t = -B / (2 * A);\n        if (t >= 0 && t <= 1) {\n            const point = a.add(ab.scale(t));\n            return {\n                point: point,\n                normal: point.sub(c),\n                fraction: t,\n            };\n        }\n    } // Two possible roots\n    else {\n        const t1 = (-B + Math.sqrt(disc)) / (2 * A);\n        const t2 = (-B - Math.sqrt(disc)) / (2 * A);\n        let t = null;\n        if (t1 >= 0 && t1 <= 1) {\n            t = t1;\n        }\n        if (t2 >= 0 && t2 <= 1) {\n            t = Math.min(t2, t ?? t2);\n        }\n        if (t != null) {\n            const point = a.add(ab.scale(t));\n            return {\n                point: point,\n                normal: point.sub(c).unit(),\n                fraction: t,\n            };\n        }\n    }\n\n    return null;\n}\n\nfunction raycastPolygon(\n    origin: Vec2,\n    direction: Vec2,\n    polygon: Polygon,\n): RaycastResult {\n    const points = polygon.pts;\n    let minHit = null;\n\n    let prev = points[points.length - 1];\n    for (let i = 0; i < points.length; i++) {\n        const cur = points[i];\n        const hit = raycastLine(origin, direction, new Line(prev, cur));\n        if (hit && (!minHit || minHit.fraction > hit.fraction)) {\n            minHit = hit;\n        }\n        prev = cur;\n    }\n\n    return minHit;\n}\n\nfunction raycastEllipse(\n    origin: Vec2,\n    direction: Vec2,\n    ellipse: Ellipse,\n): RaycastResult {\n    // Transforms from unit circle to rotated ellipse\n    const T = ellipse.toMat2();\n    // Transforms from rotated ellipse to unit circle\n    const TI = T.inverse;\n    // Transform both origin and direction into the unit circle coordinate system\n    const Torigin = TI.transform(origin.sub(ellipse.center));\n    const Tdirection = TI.transform(direction);\n    // Raycast as if we have a circle\n    const result = raycastCircle(Torigin, Tdirection, new Circle(vec2(), 1));\n    if (result) {\n        const R = Mat2.rotation(deg2rad(-ellipse.angle));\n        const S = Mat2.scale(ellipse.radiusX, ellipse.radiusY);\n        // Scale the point so we have a point on the unrotated ellipse\n        const p = S.transform(result.point);\n        // transform the result point to the coordinate system of the rotated ellipse\n        const point = T.transform(result.point).add(ellipse.center);\n        const fraction = point.dist(origin) / direction.len();\n        return {\n            point: point,\n            // Calculate the normal at the unrotated ellipse, then rotate the normal to the rotated ellipse\n            normal: R.transform(\n                vec2(ellipse.radiusY ** 2 * p.x, ellipse.radiusX ** 2 * p.y),\n            ),\n            fraction,\n        };\n    }\n    return result;\n}\n\nexport function raycastGrid(\n    origin: Vec2,\n    direction: Vec2,\n    gridPosHit: (gridPos: Vec2) => boolean | RaycastResult,\n    maxDistance: number = 64,\n): RaycastResult | null {\n    const pos = origin;\n    const len = direction.len();\n    const dir = direction.scale(1 / len);\n    let t = 0;\n    const gridPos = vec2(Math.floor(origin.x), Math.floor(origin.y));\n    const step = vec2(dir.x > 0 ? 1 : -1, dir.y > 0 ? 1 : -1);\n    const tDelta = vec2(Math.abs(1 / dir.x), Math.abs(1 / dir.y));\n    const dist = vec2(\n        (step.x > 0) ? (gridPos.x + 1 - origin.x) : (origin.x - gridPos.x),\n        (step.y > 0) ? (gridPos.y + 1 - origin.y) : (origin.y - gridPos.y),\n    );\n    const tMax = vec2(\n        (tDelta.x < Infinity) ? tDelta.x * dist.x : Infinity,\n        (tDelta.y < Infinity) ? tDelta.y * dist.y : Infinity,\n    );\n    let steppedIndex = -1;\n    while (t <= maxDistance) {\n        const hit = gridPosHit(gridPos);\n        if (hit === true) {\n            return {\n                point: pos.add(dir.scale(t)),\n                normal: vec2(\n                    steppedIndex === 0 ? -step.x : 0,\n                    steppedIndex === 1 ? -step.y : 0,\n                ),\n                fraction: t / len, // Since dir is normalized, t is len times too large\n                gridPos,\n            };\n        } else if (hit) {\n            return hit;\n        }\n        if (tMax.x < tMax.y) {\n            gridPos.x += step.x;\n            t = tMax.x;\n            tMax.x += tDelta.x;\n            steppedIndex = 0;\n        } else {\n            gridPos.y += step.y;\n            t = tMax.y;\n            tMax.y += tDelta.y;\n            steppedIndex = 1;\n        }\n    }\n\n    return null;\n}\n\nexport class Point {\n    pt: Vec2;\n    constructor(pt: Vec2) {\n        this.pt = pt.clone();\n    }\n    transform(m: Mat4): Point {\n        return new Point(m.multVec2(this.pt));\n    }\n    bbox(): Rect {\n        return new Rect(this.pt, 0, 0);\n    }\n    area(): number {\n        return 0;\n    }\n    clone(): Point {\n        return new Point(this.pt);\n    }\n    collides(shape: ShapeType): boolean {\n        return testPointShape(this, shape);\n    }\n    contains(point: Vec2): boolean {\n        return this.pt.eq(point);\n    }\n    raycast(origin: Vec2, direction: Vec2): RaycastResult {\n        return null;\n    }\n    random(): Vec2 {\n        return this.pt.clone();\n    }\n}\n\n/**\n * @group Math\n */\nexport class Line {\n    p1: Vec2;\n    p2: Vec2;\n    constructor(p1: Vec2, p2: Vec2) {\n        this.p1 = p1.clone();\n        this.p2 = p2.clone();\n    }\n    transform(m: Mat4): Line {\n        return new Line(m.multVec2(this.p1), m.multVec2(this.p2));\n    }\n    bbox(): Rect {\n        return Rect.fromPoints(this.p1, this.p2);\n    }\n    area(): number {\n        return this.p1.dist(this.p2);\n    }\n    clone(): Line {\n        return new Line(this.p1, this.p2);\n    }\n    collides(shape: ShapeType | Vec2): boolean {\n        return testLineShape(this, shape);\n    }\n    contains(point: Vec2): boolean {\n        return this.collides(point);\n    }\n    raycast(origin: Vec2, direction: Vec2): RaycastResult {\n        return raycastLine(origin, direction, this);\n    }\n    random(): Vec2 {\n        return this.p1.add(this.p2.sub(this.p1).scale(rand(1)));\n    }\n}\n\n// TODO: use x: number y: number (x, y, width, height)\n/**\n * @group Math\n */\nexport class Rect {\n    pos: Vec2;\n    width: number;\n    height: number;\n    constructor(pos: Vec2, width: number, height: number) {\n        this.pos = pos.clone();\n        this.width = width;\n        this.height = height;\n    }\n    static fromPoints(p1: Vec2, p2: Vec2): Rect {\n        return new Rect(p1.clone(), p2.x - p1.x, p2.y - p1.y);\n    }\n    center(): Vec2 {\n        return new Vec2(\n            this.pos.x + this.width / 2,\n            this.pos.y + this.height / 2,\n        );\n    }\n    points(): [Vec2, Vec2, Vec2, Vec2] {\n        return [\n            this.pos,\n            this.pos.add(this.width, 0),\n            this.pos.add(this.width, this.height),\n            this.pos.add(0, this.height),\n        ];\n    }\n    transform(m: Mat4): Polygon {\n        return new Polygon(this.points().map((pt) => m.multVec2(pt)));\n    }\n    bbox(): Rect {\n        return this.clone();\n    }\n    area(): number {\n        return this.width * this.height;\n    }\n    clone(): Rect {\n        return new Rect(this.pos.clone(), this.width, this.height);\n    }\n    distToPoint(p: Vec2): number {\n        return Math.sqrt(this.sdistToPoint(p));\n    }\n    sdistToPoint(p: Vec2): number {\n        const min = this.pos;\n        const max = this.pos.add(this.width, this.height);\n        const dx = Math.max(min.x - p.x, 0, p.x - max.x);\n        const dy = Math.max(min.y - p.y, 0, p.y - max.y);\n        return dx * dx + dy * dy;\n    }\n    collides(shape: ShapeType | Vec2): boolean {\n        return testRectShape(this, shape);\n    }\n    contains(point: Vec2): boolean {\n        return this.collides(point);\n    }\n    raycast(origin: Vec2, direction: Vec2): RaycastResult {\n        return raycastRect(origin, direction, this);\n    }\n    random(): Vec2 {\n        return this.pos.add(rand(this.width), rand(this.height));\n    }\n}\n\n/**\n * @group Math\n */\nexport class Circle {\n    center: Vec2;\n    radius: number;\n    constructor(center: Vec2, radius: number) {\n        this.center = center.clone();\n        this.radius = radius;\n    }\n    transform(tr: Mat4): Ellipse {\n        return new Ellipse(this.center, this.radius, this.radius).transform(tr);\n    }\n    bbox(): Rect {\n        return Rect.fromPoints(\n            this.center.sub(vec2(this.radius)),\n            this.center.add(vec2(this.radius)),\n        );\n    }\n    area(): number {\n        return this.radius * this.radius * Math.PI;\n    }\n    clone(): Circle {\n        return new Circle(this.center, this.radius);\n    }\n    collides(shape: ShapeType | Vec2): boolean {\n        return testCircleShape(this, shape);\n    }\n    contains(point: Vec2): boolean {\n        return this.collides(point);\n    }\n    raycast(origin: Vec2, direction: Vec2): RaycastResult {\n        return raycastCircle(origin, direction, this);\n    }\n    random(): Vec2 {\n        // TODO: Not uniform!!\n        return this.center.add(\n            Vec2.fromAngle(rand(360).scale(rand(this.radius))),\n        );\n    }\n}\n\n/**\n * @group Math\n */\nexport class Ellipse {\n    center: Vec2;\n    radiusX: number;\n    radiusY: number;\n    angle: number;\n    constructor(center: Vec2, rx: number, ry: number, degrees: number = 0) {\n        this.center = center.clone();\n        this.radiusX = rx;\n        this.radiusY = ry;\n        this.angle = degrees;\n    }\n    static fromMat2(tr: Mat2): Ellipse {\n        const inv = tr.inverse;\n        const M = inv.transpose.mul(inv);\n        const [e1, e2] = M.eigenvalues;\n        const [v1, v2] = M.eigenvectors(e1, e2);\n\n        const [a, b] = [1 / Math.sqrt(e1), 1 / Math.sqrt(e2)];\n\n        // Make sure we use the semi-major axis for the rotation\n        if (a > b) {\n            return new Ellipse(\n                vec2(),\n                a,\n                b,\n                rad2deg(Math.atan2(-v1[1], v1[0])),\n            );\n        } else {\n            return new Ellipse(\n                vec2(),\n                b,\n                a,\n                rad2deg(Math.atan2(-v2[1], v2[0])),\n            );\n        }\n    }\n    toMat2(): Mat2 {\n        const a = deg2rad(this.angle);\n        const c = Math.cos(a);\n        const s = Math.sin(a);\n        return new Mat2(\n            c * this.radiusX,\n            s * this.radiusY,\n            -s * this.radiusX,\n            c * this.radiusY,\n        );\n    }\n    transform(tr: Mat4): Ellipse {\n        if (this.angle == 0 && tr.getRotation() == 0) {\n            // No rotation, so we can just take the scale and translation\n            return new Ellipse(\n                tr.multVec2(this.center),\n                tr.m[0] * this.radiusX,\n                tr.m[5] * this.radiusY,\n            );\n        } else {\n            // Rotation. We can't just add angles, as the scale can squeeze the\n            // ellipse and thus change the angle.\n            // Get the transformation which maps the unit circle onto the ellipse\n            let T = this.toMat2();\n            // Transform the transformation matrix with the rotation+scale matrix\n            const angle = tr.getRotation();\n            const scale = tr.getScale();\n            const M = Mat3.fromMat2(T).scale(scale.x, scale.y).rotate(angle);\n            T = M.toMat2();\n            // Return the ellipse made from the transformed unit circle\n            const ellipse = Ellipse.fromMat2(T);\n            ellipse.center = tr.multVec2(this.center);\n            return ellipse;\n        }\n    }\n    bbox(): Rect {\n        if (this.angle == 0) {\n            // No rotation, so the semi-major and semi-minor axis give the extends\n            return Rect.fromPoints(\n                this.center.sub(vec2(this.radiusX, this.radiusY)),\n                this.center.add(vec2(this.radiusX, this.radiusY)),\n            );\n        } else {\n            // Rotation. We need to find the maximum x and y distance from the\n            // center of the rotated ellipse\n            const angle = deg2rad(this.angle);\n            const c = Math.cos(angle);\n            const s = Math.sin(angle);\n            const ux = this.radiusX * c;\n            const uy = this.radiusX * s;\n            const vx = this.radiusY * s;\n            const vy = this.radiusY * c;\n\n            const halfwidth = Math.sqrt(ux * ux + vx * vx);\n            const halfheight = Math.sqrt(uy * uy + vy * vy);\n\n            return Rect.fromPoints(\n                this.center.sub(vec2(halfwidth, halfheight)),\n                this.center.add(vec2(halfwidth, halfheight)),\n            );\n        }\n    }\n    area(): number {\n        return this.radiusX * this.radiusY * Math.PI;\n    }\n    clone(): Ellipse {\n        return new Ellipse(this.center, this.radiusX, this.radiusY, this.angle);\n    }\n    collides(shape: ShapeType): boolean {\n        return testEllipseShape(this, shape);\n    }\n    contains(point: Vec2): boolean {\n        // Both methods work, but the second one is faster\n        /*let T = this.toTransform()\n        point = point.sub(this.center)\n        point = T.inverse.transform(point)\n        return testCirclePoint(new Circle(vec2(), 1), point)*/\n        point = point.sub(this.center);\n        const angle = deg2rad(this.angle);\n        const c = Math.cos(angle);\n        const s = Math.sin(angle);\n        const vx = point.x * c + point.y * s;\n        const vy = -point.x * s + point.y * c;\n        return vx * vx / (this.radiusX * this.radiusX)\n                + vy * vy / (this.radiusY * this.radiusY) < 1;\n    }\n    raycast(origin: Vec2, direction: Vec2): RaycastResult {\n        return raycastEllipse(origin, direction, this);\n    }\n    random(): Vec2 {\n        return this.center;\n    }\n}\n\n/**\n * @group Math\n */\nexport class Polygon {\n    pts: Vec2[];\n    constructor(pts: Vec2[]) {\n        if (pts.length < 3) {\n            throw new Error(\"Polygons should have at least 3 vertices\");\n        }\n        this.pts = pts;\n    }\n    transform(m: Mat4): Polygon {\n        return new Polygon(this.pts.map((pt) => m.multVec2(pt)));\n    }\n    bbox(): Rect {\n        const p1 = vec2(Number.MAX_VALUE);\n        const p2 = vec2(-Number.MAX_VALUE);\n        for (const pt of this.pts) {\n            p1.x = Math.min(p1.x, pt.x);\n            p2.x = Math.max(p2.x, pt.x);\n            p1.y = Math.min(p1.y, pt.y);\n            p2.y = Math.max(p2.y, pt.y);\n        }\n        return Rect.fromPoints(p1, p2);\n    }\n    area(): number {\n        let total = 0;\n        const l = this.pts.length;\n        for (let i = 0; i < l; i++) {\n            const p1 = this.pts[i];\n            const p2 = this.pts[(i + 1) % l];\n            total += p1.x * p2.y * 0.5;\n            total -= p2.x * p1.y * 0.5;\n        }\n        return Math.abs(total);\n    }\n    clone(): Polygon {\n        return new Polygon(this.pts.map((pt) => pt.clone()));\n    }\n    collides(shape: ShapeType | Vec2): boolean {\n        return testPolygonShape(this, shape);\n    }\n    contains(point: Vec2): boolean {\n        return this.collides(point);\n    }\n    raycast(origin: Vec2, direction: Vec2): RaycastResult {\n        return raycastPolygon(origin, direction, this);\n    }\n    random(): Vec2 {\n        return vec2();\n    }\n}\n\nexport function evaluateQuadratic(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    t: number,\n) {\n    const t2 = t * t;\n    const mt = 1 - t;\n    const mt2 = mt * mt;\n    return pt1.scale(mt2).add(pt2.scale(2 * mt * t)).add(\n        pt3.scale(t2),\n    );\n}\n\nexport function evaluateQuadraticFirstDerivative(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    t: number,\n) {\n    const mt = 1 - t;\n    return pt2.sub(pt1).scale(2 * mt).add(pt3.sub(pt2).scale(2 * t));\n}\n\nexport function evaluateQuadraticSecondDerivative(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    t: number,\n) {\n    return pt3.sub(pt2.scale(2)).add(pt1).scale(2);\n}\n\nexport function evaluateBezier(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    pt4: Vec2,\n    t: number,\n) {\n    const t2 = t * t;\n    const t3 = t2 * t;\n    const mt = 1 - t;\n    const mt2 = mt * mt;\n    const mt3 = mt2 * mt;\n    return pt1.scale(mt3).add(pt2.scale(3 * mt2 * t)).add(\n        pt3.scale(3 * mt * t2),\n    ).add(pt4.scale(t3));\n}\n\nexport function evaluateBezierFirstDerivative(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    pt4: Vec2,\n    t: number,\n) {\n    const t2 = t * t;\n    const mt = 1 - t;\n    const mt2 = mt * mt;\n    return pt2.sub(pt1).scale(3 * mt2).add(pt3.sub(pt2).scale(6 * mt * t)).add(\n        pt4.sub(pt3).scale(3 * t2),\n    );\n}\n\nexport function evaluateBezierSecondDerivative(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    pt4: Vec2,\n    t: number,\n) {\n    const mt = 1 - t;\n    return pt3.sub(pt2.scale(2)).add(pt1).scale(6 * mt).add(\n        pt4.sub(pt3.scale(2)).add(pt2).scale(6 * t),\n    );\n}\n\nexport function evaluateCatmullRom(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    pt4: Vec2,\n    t: number,\n) {\n    const A = 0.5 * (((-t + 2) * t - 1) * t);\n    const B = 0.5 * (((3 * t - 5) * t) * t + 2);\n    const C = 0.5 * (((-3 * t + 4) * t + 1) * t);\n    const D = 0.5 * (((t - 1) * t) * t);\n    return pt1.scale(A).add(pt2.scale(B)).add(pt3.scale(C)).add(pt4.scale(D));\n}\n\nexport function evaluateCatmullRomFirstDerivative(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    pt4: Vec2,\n    t: number,\n) {\n    const A = 0.5 * ((-3 * t + 4) * t - 1);\n    const B = 0.5 * ((9 * t - 10) * t);\n    const C = 0.5 * ((-9 * t + 8) * t + 1);\n    const D = 0.5 * ((3 * t - 2) * t);\n    return pt1.scale(A).add(pt2.scale(B)).add(pt3.scale(C)).add(pt4.scale(D));\n}\n\nexport function normalizedCurve(curve: (t: number) => Vec2) {\n    const curveLength = curveLengthApproximation(curve);\n    const length = curveLength(1);\n    return (s: number) => {\n        const l = s * length;\n        const t = curveLength(l, true);\n        return curve(t);\n    };\n}\n\nexport function curveLengthApproximation(\n    curve: (t: number) => Vec2,\n    entries: number = 10,\n    detail: number = 10,\n) {\n    const llut = [0];\n    const tlut = [0];\n    const dt = 1 / (entries - 1);\n    const ddt = dt / detail;\n    let length = 0;\n    let pp = curve(0);\n    let t = 0;\n    for (let e = 1; e < entries; e++) {\n        for (let d = 0; d < detail; d++) {\n            t += ddt;\n            const p = curve(t);\n            const l = p.dist(pp);\n            length += l;\n            pp = p;\n        }\n        llut[e] = length;\n        tlut[e] = t;\n    }\n    tlut[entries - 1] = 1;\n    return (t: number, inverse: boolean = false) => {\n        if (inverse) {\n            const l = t;\n            if (l <= 0) return 0;\n            if (l >= length) return 1;\n            let index = 0;\n            while (llut[index + 1] < l) index++;\n            const t1 = tlut[index];\n            const t2 = tlut[index + 1];\n            const l1 = llut[index];\n            const l2 = llut[index + 1];\n            const a = (l - l1) / (l2 - l1);\n            return t1 + (t2 - t1) * a;\n        } else {\n            if (t <= 0) return 0;\n            if (t >= 1) return llut[entries - 1];\n            let index = 0;\n            while (tlut[index + 1] < t) index++;\n            const t1 = tlut[index];\n            const t2 = tlut[index + 1];\n            const l1 = llut[index];\n            const l2 = llut[index + 1];\n            const a = (t - t1) / (t2 - t1);\n            return l1 + (l2 - l1) * a;\n        }\n    };\n}\n\n// True if t is between 0 and 1\nfunction inZeroOneDomain(t: number) {\n    return 0 <= t && t <= 1;\n}\n\n// True if a and b are almost equal\nfunction approximately(a: number, b: number) {\n    return Math.abs(a - b) <= Number.EPSILON;\n}\n\n// Calculates the cube root \u221B of the given number\nfunction cubeRoot(v: number) {\n    if (v < 0) {\n        return -Math.pow(-v, 1 / 3);\n    } else {\n        return Math.pow(v, 1 / 3);\n    }\n}\n\n// Get all cubic roots of the given 1 dimensional bezier\nfunction getCubicRoots(pa: number, pb: number, pc: number, pd: number) {\n    let a = 3 * pa - 6 * pb + 3 * pc;\n    let b = -3 * pa + 3 * pb;\n    let c = pa;\n    let d = -pa + 3 * pb - 3 * pc + pd;\n\n    if (approximately(d, 0)) {\n        if (approximately(a, 0)) {\n            if (approximately(b, 0)) {\n                return [];\n            }\n            return [-c / b].filter(inZeroOneDomain);\n        }\n        const q = Math.sqrt(b * b - 4 * a * c);\n        const a2 = 2 * a;\n        return [(q - b) / a2, (-b - q) / a2].filter(inZeroOneDomain);\n    }\n\n    a /= d;\n    b /= d;\n    c /= d;\n\n    const p = (3 * b - a * a) / 3;\n    const p3 = p / 3;\n    const q = (2 * a * a * a - 9 * a * b + 27 * c) / 27;\n    const q2 = q / 2;\n    const discriminant = q2 * q2 + p3 * p3 * p3;\n\n    if (discriminant < 0) {\n        const mp3 = -p / 3;\n        const mp33 = mp3 * mp3 * mp3;\n        const r = Math.sqrt(mp33);\n        const t = -q / (2 * r);\n        const cosphi = t < -1 ? -1 : t > 1 ? 1 : t;\n        const phi = Math.acos(cosphi);\n        const crtr = cubeRoot(r);\n        const t1 = 2 * crtr;\n        const root1 = t1 * Math.cos(phi / 3) - a / 3;\n        const root2 = t1 * Math.cos((phi + 2 * Math.PI) / 3) - a / 3;\n        const root3 = t1 * Math.cos((phi + 4 * Math.PI) / 3) - a / 3;\n        return [root1, root2, root3].filter(inZeroOneDomain);\n    }\n\n    if (discriminant === 0) {\n        const u1 = q2 < 0 ? cubeRoot(-q2) : -cubeRoot(q2);\n        const root1 = 2 * u1 - a / 3;\n        const root2 = -u1 - a / 3;\n        return [root1, root2].filter(inZeroOneDomain);\n    }\n\n    const sd = Math.sqrt(discriminant);\n    const u1 = cubeRoot(sd - q2);\n    const v1 = cubeRoot(sd + q2);\n    const root1 = u1 - v1 - a / 3;\n    return [root1].filter(inZeroOneDomain);\n}\n\n// Returns y for the given x on the cubic bezier by first calculating the t for the given x, then calculating y from t\nfunction cubicBezierYforX(a: Vec2, b: Vec2, c: Vec2, d: Vec2, x: number) {\n    // Get t for x\n    const t = getCubicRoots(a.x - x, b.x - x, c.x - x, d.x - x);\n    if (t.length > 0) {\n        // Get y for t\n        return evaluateBezier(a, b, c, d, t[0]).y;\n    }\n    return NaN;\n}\n\nexport function easingLinear(keys: Vec2[]) {\n    if (!keys || keys.length == 0) {\n        throw new Error(\n            \"Need at least one point for easingLinear.\",\n        );\n    }\n    const len = keys.length;\n    return (x: number) => {\n        // Before start\n        if (x <= 0 || keys.length == 1 || x <= keys[0].x) {\n            return keys[0].y;\n        }\n        for (let i = 0; i < len; i++) {\n            if (keys[i].x >= x) {\n                // Linear map\n                return map(\n                    x,\n                    keys[i - 1].x,\n                    keys[i].x,\n                    keys[i - 1].y,\n                    keys[i].y,\n                );\n            }\n        }\n        // After end\n        return keys[keys.length - 1].y;\n    };\n}\n\nexport function easingCubicBezier(p1: Vec2, p2: Vec2) {\n    return (x: number) => {\n        return cubicBezierYforX(vec2(0, 0), p1, p2, vec2(1, 1), x);\n    };\n}\n\nexport type StepPosition =\n    | \"jump-start\"\n    | \"jump-end\"\n    | \"jump-none\"\n    | \"jump-both\";\n\nexport function easingSteps(\n    steps: number,\n    position: StepPosition = \"jump-end\",\n) {\n    const xdist = 1 / steps;\n    const jumpStart = position == \"jump-start\" || position == \"jump-both\";\n    const jumpEnd = position == \"jump-end\" || position == \"jump-both\";\n    const ydist = 1 / (steps + (jumpEnd ? 1 : 0));\n    const startY = jumpStart ? ydist : 0;\n    return (x: number) => {\n        const step = Math.floor(x / xdist);\n        return startY + step * ydist;\n    };\n}\n\nexport function sat(p1: Polygon, p2: Polygon): Vec2 | null {\n    let overlap = Number.MAX_VALUE;\n    let displacement = vec2(0);\n    for (const poly of [p1, p2]) {\n        for (let i = 0; i < poly.pts.length; i++) {\n            const a = poly.pts[i];\n            const b = poly.pts[(i + 1) % poly.pts.length];\n            const axisProj = b.sub(a).normal().unit();\n            let min1 = Number.MAX_VALUE;\n            let max1 = -Number.MAX_VALUE;\n            for (let j = 0; j < p1.pts.length; j++) {\n                const q = p1.pts[j].dot(axisProj);\n                min1 = Math.min(min1, q);\n                max1 = Math.max(max1, q);\n            }\n            let min2 = Number.MAX_VALUE;\n            let max2 = -Number.MAX_VALUE;\n            for (let j = 0; j < p2.pts.length; j++) {\n                const q = p2.pts[j].dot(axisProj);\n                min2 = Math.min(min2, q);\n                max2 = Math.max(max2, q);\n            }\n            const o = Math.min(max1, max2) - Math.max(min1, min2);\n            if (o < 0) {\n                return null;\n            }\n            if (o < Math.abs(overlap)) {\n                const o1 = max2 - min1;\n                const o2 = min2 - max1;\n                overlap = Math.abs(o1) < Math.abs(o2) ? o1 : o2;\n                displacement = axisProj.scale(overlap);\n            }\n        }\n    }\n    return displacement;\n}\n\n// true if the angle is oriented counter clockwise\nfunction isOrientedCcw(a: Vec2, b: Vec2, c: Vec2) {\n    // return det(b-a, c-a) >= 0\n    return ((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) >= 0;\n}\n\n// true if the polygon is oriented counter clockwise\nfunction isOrientedCcwPolygon(polygon: Vec2[]) {\n    let total = 0;\n    let prev: Vec2 = polygon[polygon.length - 1];\n    for (let i = 0; i < polygon.length; i++) {\n        total += (polygon[i].x - prev.x) * (polygon[i].y + prev.y);\n        prev = polygon[i];\n    }\n    return total < 0;\n}\n\n// true if a and b are on the same side of the line c->d\nfunction onSameSide(a: Vec2, b: Vec2, c: Vec2, d: Vec2) {\n    const px = d.x - c.x, py = d.y - c.y;\n    // return det(p, a-c) * det(p, b-c) >= 0\n    const l = px * (a.y - c.y) - py * (a.x - c.x);\n    const m = px * (b.y - c.y) - py * (b.x - c.x);\n    return l * m >= 0;\n}\n\n// true if p is contained in the triangle abc\nfunction pointInTriangle(p: Vec2, a: Vec2, b: Vec2, c: Vec2) {\n    return onSameSide(p, a, b, c) && onSameSide(p, b, a, c)\n        && onSameSide(p, c, a, b);\n}\n\n// true if any vertex in the list `vertices' is in the triangle abc.\nfunction someInTriangle(vertices: Vec2[], a: Vec2, b: Vec2, c: Vec2) {\n    for (const p of vertices) {\n        if (\n            (p !== a) && (p !== b) && (p !== c) && pointInTriangle(p, a, b, c)\n        ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// true if the triangle is an ear, which is whether it can be cut off from the polygon without leaving a hole behind\nfunction isEar(a: Vec2, b: Vec2, c: Vec2, vertices: Vec2[]) {\n    return isOrientedCcw(a, b, c) && !someInTriangle(vertices, a, b, c);\n}\n\nexport function triangulate(pts: Vec2[]): Vec2[][] {\n    if (pts.length < 3) {\n        return [];\n    }\n    if (pts.length == 3) {\n        return [pts];\n    }\n\n    /* Create a list of indexes to the previous and next points of a given point\n    prev_idx[i] gives the index to the previous point of the point at i */\n    let nextIdx = [];\n    let prevIdx = [];\n    let idx = 0;\n    for (let i = 0; i < pts.length; i++) {\n        const lm = pts[idx];\n        const pt = pts[i];\n        if (pt.x < lm.x || (pt.x == lm.x && pt.y < lm.y)) {\n            idx = idx;\n        }\n        nextIdx[i] = i + 1;\n        prevIdx[i] = i - 1;\n    }\n    nextIdx[nextIdx.length - 1] = 0;\n    prevIdx[0] = prevIdx.length - 1;\n\n    // If the polygon is not counter clockwise, swap the lists, thus reversing the winding\n    if (!isOrientedCcwPolygon(pts)) {\n        [nextIdx, prevIdx] = [prevIdx, nextIdx];\n    }\n\n    const concaveVertices = [];\n    for (let i = 0; i < pts.length; ++i) {\n        if (!isOrientedCcw(pts[prevIdx[i]], pts[i], pts[nextIdx[i]])) {\n            concaveVertices.push(pts[i]);\n        }\n    }\n\n    const triangles = [];\n    let nVertices = pts.length;\n    let current = 1;\n    let skipped = 0;\n    let next;\n    let prev;\n    while (nVertices > 3) {\n        next = nextIdx[current];\n        prev = prevIdx[current];\n        const a = pts[prev];\n        const b = pts[current];\n        const c = pts[next];\n        if (isEar(a, b, c, concaveVertices)) {\n            triangles.push([a, b, c]);\n            nextIdx[prev] = next;\n            prevIdx[next] = prev;\n            concaveVertices.splice(concaveVertices.indexOf(b), 1);\n            --nVertices;\n            skipped = 0;\n        } else if (++skipped > nVertices) {\n            return [];\n        }\n        current = next;\n    }\n    next = nextIdx[current];\n    prev = prevIdx[current];\n    triangles.push([pts[prev], pts[current], pts[next]]);\n\n    return triangles;\n}\n\nexport function isConvex(pts: Vec2[]) {\n    if (pts.length < 3) {\n        return false;\n    }\n\n    // a polygon is convex if all corners turn in the same direction\n    // turning direction can be determined using the cross-product of\n    // the forward difference vectors\n    let i = pts.length - 2;\n    let j = pts.length - 1;\n    let k = 0;\n    let p = pts[j].sub(pts[i]);\n    let q = pts[k].sub(pts[j]);\n    let winding = p.cross(q);\n\n    while (k + 1 < pts.length) {\n        i = j;\n        j = k;\n        k++;\n        p = pts[j].sub(pts[i]);\n        q = pts[k].sub(pts[j]);\n\n        if (p.cross(q) * winding < 0) {\n            return false;\n        }\n    }\n    return true;\n}\n", "export class Registry<T> extends Map<number, T> {\n    private lastID: number = 0;\n    push(v: T): number {\n        const id = this.lastID;\n        this.set(id, v);\n        this.lastID++;\n        return id;\n    }\n    pushd(v: T): () => void {\n        const id = this.push(v);\n        return () => this.delete(id);\n    }\n}\n\n/**\n * A controller for all events in KAPLAY.\n *\n * @example\n * ```js\n * // Create a new event\n * const logHi = onUpdate(() => {\n *    debug.log(\"hi\");\n * });\n *\n * // Pause the event\n * logHi.paused = true;\n *\n * // Cancel the event\n * logHi.cancel();\n *\n * ```\n * @group Events\n */\nexport class KEventController {\n    /** If the event is paused */\n    paused: boolean = false;\n    /** Cancel the event */\n    readonly cancel: () => void;\n\n    constructor(cancel: () => void) {\n        this.cancel = cancel;\n    }\n    static join(events: KEventController[]): KEventController {\n        const ev = new KEventController(() =>\n            events.forEach((e) => e.cancel())\n        );\n        Object.defineProperty(ev, \"paused\", {\n            get: () => events[0].paused,\n            set: (p: boolean) => events.forEach((e) => e.paused = p),\n        });\n        ev.paused = false;\n        return ev;\n    }\n}\n\nexport class KEvent<Args extends any[] = any[]> {\n    private handlers: Registry<(...args: Args) => void> = new Registry();\n\n    add(action: (...args: Args) => void): KEventController {\n        const cancel = this.handlers.pushd((...args: Args) => {\n            if (ev.paused) return;\n            action(...args);\n        });\n        const ev = new KEventController(cancel);\n        return ev;\n    }\n    addOnce(action: (...args) => void): KEventController {\n        const ev = this.add((...args) => {\n            ev.cancel();\n            action(...args);\n        });\n        return ev;\n    }\n    next(): Promise<Args> {\n        return new Promise((res) => this.addOnce(res));\n    }\n    trigger(...args: Args) {\n        this.handlers.forEach((action) => action(...args));\n    }\n    numListeners(): number {\n        return this.handlers.size;\n    }\n    clear() {\n        this.handlers.clear();\n    }\n}\n\n// TODO: only accept one argument?\nexport class KEventHandler<EventMap extends Record<string, any[]>> {\n    private handlers: Partial<\n        {\n            [Name in keyof EventMap]: KEvent<EventMap[Name]>;\n        }\n    > = {};\n    on<Name extends keyof EventMap>(\n        name: Name,\n        action: (...args: EventMap[Name]) => void,\n    ): KEventController {\n        if (!this.handlers[name]) {\n            this.handlers[name] = new KEvent<EventMap[Name]>();\n        }\n        return this.handlers[name].add(action);\n    }\n    onOnce<Name extends keyof EventMap>(\n        name: Name,\n        action: (...args: EventMap[Name]) => void,\n    ): KEventController {\n        const ev = this.on(name, (...args) => {\n            ev.cancel();\n            action(...args);\n        });\n        return ev;\n    }\n    next<Name extends keyof EventMap>(name: Name): Promise<unknown> {\n        return new Promise((res) => {\n            // TODO: can only pass 1 val to resolve()\n            this.onOnce(name, (...args: EventMap[Name]) => res(args[0]));\n        });\n    }\n    trigger<Name extends keyof EventMap>(name: Name, ...args: EventMap[Name]) {\n        if (this.handlers[name]) {\n            this.handlers[name].trigger(...args);\n        }\n    }\n    remove<Name extends keyof EventMap>(name: Name) {\n        delete this.handlers[name];\n    }\n    clear() {\n        this.handlers = {};\n    }\n    numListeners<Name extends keyof EventMap>(name: Name): number {\n        return this.handlers[name]?.numListeners() ?? 0;\n    }\n}\n\nexport function deepEq(o1: any, o2: any): boolean {\n    if (o1 === o2) {\n        return true;\n    }\n    const t1 = typeof o1;\n    const t2 = typeof o2;\n    if (t1 !== t2) {\n        return false;\n    }\n    if (t1 === \"object\" && t2 === \"object\" && o1 !== null && o2 !== null) {\n        if (Array.isArray(o1) !== Array.isArray(o2)) {\n            return false;\n        }\n        const k1 = Object.keys(o1);\n        const k2 = Object.keys(o2);\n        if (k1.length !== k2.length) {\n            return false;\n        }\n        for (const k of k1) {\n            const v1 = o1[k];\n            const v2 = o2[k];\n            if (!deepEq(v1, v2)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n\nexport function base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binstr = window.atob(base64);\n    const len = binstr.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n        bytes[i] = binstr.charCodeAt(i);\n    }\n    return bytes.buffer;\n}\n\nexport function dataURLToArrayBuffer(url: string): ArrayBuffer {\n    return base64ToArrayBuffer(url.split(\",\")[1]);\n}\n\nexport function download(filename: string, url: string) {\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = filename;\n    a.click();\n}\n\nexport function downloadText(filename: string, text: string) {\n    download(filename, \"data:text/plain;charset=utf-8,\" + text);\n}\n\nexport function downloadJSON(filename: string, data: any) {\n    downloadText(filename, JSON.stringify(data));\n}\n\nexport function downloadBlob(filename: string, blob: Blob) {\n    const url = URL.createObjectURL(blob);\n    download(filename, url);\n    URL.revokeObjectURL(url);\n}\n\nexport const isDataURL = (str: string) => str.match(/^data:\\w+\\/\\w+;base64,.+/);\nexport const getFileExt = (p: string) => p.split(\".\").pop();\nexport const getFileName = (p: string) => p.split(\".\").slice(0, -1).join(\".\");\n\ntype Func = (...args: any[]) => any;\n\nexport function overload2<A extends Func, B extends Func>(\n    fn1: A,\n    fn2: B,\n): A & B {\n    return ((...args) => {\n        const al = args.length;\n        if (al === fn1.length) return fn1(...args);\n        if (al === fn2.length) return fn2(...args);\n    }) as A & B;\n}\n\nexport function overload3<\n    A extends Func,\n    B extends Func,\n    C extends Func,\n>(fn1: A, fn2: B, fn3: C): A & B & C {\n    return ((...args) => {\n        const al = args.length;\n        if (al === fn1.length) return fn1(...args);\n        if (al === fn2.length) return fn2(...args);\n        if (al === fn3.length) return fn3(...args);\n    }) as A & B & C;\n}\n\nexport function overload4<\n    A extends Func,\n    B extends Func,\n    C extends Func,\n    D extends Func,\n>(fn1: A, fn2: B, fn3: C, fn4: D): A & B & C & D {\n    return ((...args) => {\n        const al = args.length;\n        if (al === fn1.length) return fn1(...args);\n        if (al === fn2.length) return fn2(...args);\n        if (al === fn3.length) return fn3(...args);\n        if (al === fn4.length) return fn4(...args);\n    }) as A & B & C & D;\n}\n\nexport const uid = (() => {\n    let id = 0;\n    return () => id++;\n})();\n\nexport const getErrorMessage = (error: unknown) =>\n    (error instanceof Error) ? error.message : String(error);\n\nconst warned = new Set();\n\nexport function warn(msg: string) {\n    if (!warned.has(msg)) {\n        warned.add(msg);\n        console.warn(msg);\n    }\n}\n\nexport function deprecateMsg(oldName: string, newName: string) {\n    warn(`${oldName} is deprecated. Use ${newName} instead.`);\n}\n\nexport function deprecate(\n    oldName: string,\n    newName: string,\n    newFunc: (...args) => any,\n) {\n    return (...args) => {\n        deprecateMsg(oldName, newName);\n        return newFunc(...args);\n    };\n}\n\nexport function benchmark(task: () => void, times: number = 1) {\n    const t1 = performance.now();\n    for (let i = 0; i < times; i++) {\n        task();\n    }\n    const t2 = performance.now();\n    return t2 - t1;\n}\n\nexport function comparePerf(t1: () => void, t2: () => void, times: number = 1) {\n    return benchmark(t2, times) / benchmark(t1, times);\n}\n\nexport class BinaryHeap<T> {\n    _items: T[];\n    _compareFn: (a: T, b: T) => boolean;\n\n    /**\n     * Creates a binary heap with the given compare function\n     * Not passing a compare function will give a min heap\n     */\n    constructor(compareFn = (a: T, b: T) => a < b) {\n        this._compareFn = compareFn;\n        this._items = [];\n    }\n\n    /**\n     * Insert an item into the binary heap\n     */\n    insert(item: T) {\n        this._items.push(item);\n        this.moveUp(this._items.length - 1);\n    }\n\n    /**\n     * Remove the smallest item from the binary heap in case of a min heap\n     * or the greatest item from the binary heap in case of a max heap\n     */\n    remove() {\n        if (this._items.length === 0) {\n            return null;\n        }\n        const item = this._items[0];\n        const lastItem = this._items.pop();\n        if (this._items.length !== 0) {\n            this._items[0] = lastItem as T;\n            this.moveDown(0);\n        }\n        return item;\n    }\n\n    /**\n     * Remove all items\n     */\n    clear() {\n        this._items.splice(0, this._items.length);\n    }\n\n    moveUp(pos: number) {\n        while (pos > 0) {\n            const parent = Math.floor((pos - 1) / 2);\n            if (!this._compareFn(this._items[pos], this._items[parent])) {\n                if (this._items[pos] >= this._items[parent]) {\n                    break;\n                }\n            }\n            this.swap(pos, parent);\n            pos = parent;\n        }\n    }\n\n    moveDown(pos: number) {\n        while (pos < Math.floor(this._items.length / 2)) {\n            let child = 2 * pos + 1;\n            if (\n                child < this._items.length - 1\n                && !this._compareFn(this._items[child], this._items[child + 1])\n            ) {\n                ++child;\n            }\n            if (this._compareFn(this._items[pos], this._items[child])) {\n                break;\n            }\n            this.swap(pos, child);\n            pos = child;\n        }\n    }\n\n    swap(index1: number, index2: number) {\n        [this._items[index1], this._items[index2]] = [\n            this._items[index2],\n            this._items[index1],\n        ];\n    }\n\n    /**\n     * Returns the amount of items\n     */\n    get length() {\n        return this._items.length;\n    }\n}\n\nconst enum EnumRunesCode {\n    HIGH_SURROGATE_START = 0xd800,\n    HIGH_SURROGATE_END = 0xdbff,\n\n    LOW_SURROGATE_START = 0xdc00,\n\n    REGIONAL_INDICATOR_START = 0x1f1e6,\n    REGIONAL_INDICATOR_END = 0x1f1ff,\n\n    FITZPATRICK_MODIFIER_START = 0x1f3fb,\n    FITZPATRICK_MODIFIER_END = 0x1f3ff,\n\n    VARIATION_MODIFIER_START = 0xfe00,\n    VARIATION_MODIFIER_END = 0xfe0f,\n\n    DIACRITICAL_MARKS_START = 0x20d0,\n    DIACRITICAL_MARKS_END = 0x20ff,\n\n    SUBDIVISION_INDICATOR_START = 0x1f3f4,\n    TAGS_START = 0xe0000,\n    TAGS_END = 0xe007f,\n\n    ZWJ = 0x200d,\n}\n\nconst GRAPHEMES = Object.freeze([\n    0x0308, // ( \u25CC\u0308 ) COMBINING DIAERESIS\n    0x0937, // ( \u0937 ) DEVANAGARI LETTER SSA\n    0x093F, // ( \u093F ) DEVANAGARI VOWEL SIGN I\n    0x0BA8, // ( \u0BA8 ) TAMIL LETTER NA\n    0x0BBF, // ( \u0BBF ) TAMIL VOWEL SIGN I\n    0x0BCD, // ( \u25CC\u0BCD) TAMIL SIGN VIRAMA\n    0x0E31, // ( \u25CC\u0E31 ) THAI CHARACTER MAI HAN-AKAT\n    0x0E33, // ( \u0E33 ) THAI CHARACTER SARA AM\n    0x0E40, // ( \u0E40 ) THAI CHARACTER SARA E\n    0x0E49, // ( \u0E40 ) THAI CHARACTER MAI THO\n    0x1100, // ( \u1100 ) HANGUL CHOSEONG KIYEOK\n    0x1161, // ( \u1161 ) HANGUL JUNGSEONG A\n    0x11A8, // ( \u11A8 ) HANGUL JONGSEONG KIYEOK\n]);\n\nenum EnumCodeUnits {\n    unit_1 = 1,\n    unit_2 = 2,\n    unit_4 = 4,\n}\n\nexport function runes(string: string): string[] {\n    if (typeof string !== \"string\") {\n        throw new TypeError(\"string cannot be undefined or null\");\n    }\n    const result: string[] = [];\n    let i = 0;\n    let increment = 0;\n    while (i < string.length) {\n        increment += nextUnits(i + increment, string);\n        if (isGrapheme(string[i + increment])) {\n            increment++;\n        }\n        if (isVariationSelector(string[i + increment])) {\n            increment++;\n        }\n        if (isDiacriticalMark(string[i + increment])) {\n            increment++;\n        }\n        if (isZeroWidthJoiner(string[i + increment])) {\n            increment++;\n            continue;\n        }\n        result.push(string.substring(i, i + increment));\n        i += increment;\n        increment = 0;\n    }\n    return result;\n}\n\n// Decide how many code units make up the current character.\n// BMP characters: 1 code unit\n// Non-BMP characters (represented by surrogate pairs): 2 code units\n// Emoji with skin-tone modifiers: 4 code units (2 code points)\n// Country flags: 4 code units (2 code points)\n// Variations: 2 code units\n// Subdivision flags: 14 code units (7 code points)\nfunction nextUnits(i: number, string: string) {\n    const current = string[i];\n    // If we don't have a value that is part of a surrogate pair, or we're at\n    // the end, only take the value at i\n    if (!isFirstOfSurrogatePair(current) || i === string.length - 1) {\n        return EnumCodeUnits.unit_1;\n    }\n\n    const currentPair = current + string[i + 1];\n    const nextPair = string.substring(i + 2, i + 5);\n\n    // Country flags are comprised of two regional indicator symbols,\n    // each represented by a surrogate pair.\n    // See http://emojipedia.org/flags/\n    // If both pairs are regional indicator symbols, take 4\n    if (isRegionalIndicator(currentPair) && isRegionalIndicator(nextPair)) {\n        return EnumCodeUnits.unit_4;\n    }\n\n    // https://unicode.org/emoji/charts/full-emoji-list.html#subdivision-flag\n    // See https://emojipedia.org/emoji-tag-sequence/\n    // If nextPair is in Tags(https://en.wikipedia.org/wiki/Tags_(Unicode_block)),\n    // then find next closest U+E007F(CANCEL TAG)\n    if (\n        isSubdivisionFlag(currentPair)\n        && isSupplementarySpecialpurposePlane(nextPair)\n    ) {\n        return string.slice(i).indexOf(\n            String.fromCodePoint(EnumRunesCode.TAGS_END),\n        ) + 2;\n    }\n\n    // If the next pair make a Fitzpatrick skin tone\n    // modifier, take 4\n    // See http://emojipedia.org/modifiers/\n    // Technically, only some code points are meant to be\n    // combined with the skin tone modifiers. This function\n    // does not check the current pair to see if it is\n    // one of them.\n    if (isFitzpatrickModifier(nextPair)) {\n        return EnumCodeUnits.unit_4;\n    }\n    return EnumCodeUnits.unit_2;\n}\n\nfunction isFirstOfSurrogatePair(string: string) {\n    return string\n        && betweenInclusive(\n            string[0].charCodeAt(0),\n            EnumRunesCode.HIGH_SURROGATE_START,\n            EnumRunesCode.HIGH_SURROGATE_END,\n        );\n}\n\nfunction isRegionalIndicator(string: string) {\n    return betweenInclusive(\n        codePointFromSurrogatePair(string),\n        EnumRunesCode.REGIONAL_INDICATOR_START,\n        EnumRunesCode.REGIONAL_INDICATOR_END,\n    );\n}\n\nfunction isSubdivisionFlag(string: string) {\n    return betweenInclusive(\n        codePointFromSurrogatePair(string),\n        EnumRunesCode.SUBDIVISION_INDICATOR_START,\n        EnumRunesCode.SUBDIVISION_INDICATOR_START,\n    );\n}\n\nfunction isFitzpatrickModifier(string: string) {\n    return betweenInclusive(\n        codePointFromSurrogatePair(string),\n        EnumRunesCode.FITZPATRICK_MODIFIER_START,\n        EnumRunesCode.FITZPATRICK_MODIFIER_END,\n    );\n}\n\nfunction isVariationSelector(string: string) {\n    return typeof string === \"string\"\n        && betweenInclusive(\n            string.charCodeAt(0),\n            EnumRunesCode.VARIATION_MODIFIER_START,\n            EnumRunesCode.VARIATION_MODIFIER_END,\n        );\n}\n\nfunction isDiacriticalMark(string: string) {\n    return typeof string === \"string\"\n        && betweenInclusive(\n            string.charCodeAt(0),\n            EnumRunesCode.DIACRITICAL_MARKS_START,\n            EnumRunesCode.DIACRITICAL_MARKS_END,\n        );\n}\n\nfunction isSupplementarySpecialpurposePlane(string: string) {\n    const codePoint = string.codePointAt(0);\n    return (typeof string === \"string\" && typeof codePoint === \"number\"\n        && betweenInclusive(\n            codePoint,\n            EnumRunesCode.TAGS_START,\n            EnumRunesCode.TAGS_END,\n        ));\n}\n\nfunction isGrapheme(string: string) {\n    return typeof string === \"string\"\n        && GRAPHEMES.includes(string.charCodeAt(0));\n}\n\nfunction isZeroWidthJoiner(string: string) {\n    return typeof string === \"string\"\n        && string.charCodeAt(0) === EnumRunesCode.ZWJ;\n}\n\nfunction codePointFromSurrogatePair(pair: string) {\n    const highOffset = pair.charCodeAt(0) - EnumRunesCode.HIGH_SURROGATE_START;\n    const lowOffset = pair.charCodeAt(1) - EnumRunesCode.LOW_SURROGATE_START;\n    return (highOffset << 10) + lowOffset + 0x10000;\n}\n\nfunction betweenInclusive(value: number, lower: number, upper: number) {\n    return value >= lower && value <= upper;\n}\n\nexport function substring(string: string, start?: number, width?: number) {\n    const chars = runes(string);\n    if (start === undefined) {\n        return string;\n    }\n    if (start >= chars.length) {\n        return \"\";\n    }\n    const rest = chars.length - start;\n    const stringWidth = width === undefined ? rest : width;\n    let endIndex = start + stringWidth;\n    if (endIndex > (start + rest)) {\n        endIndex = undefined;\n    }\n    return chars.slice(start, endIndex).join(\"\");\n}\n\nexport function isClass(obj: any): boolean {\n    return obj?.prototype\n        && Object.getOwnPropertyDescriptor(obj.prototype, \"constructor\")\n            !== undefined;\n}\n\nexport const isEqOrIncludes = <T>(listOrSmt: T | T[], el: unknown): boolean => {\n    if (Array.isArray(listOrSmt)) {\n        return (listOrSmt as any[])?.includes(el);\n    }\n\n    return listOrSmt === el;\n};\n\nexport const setHasOrIncludes = <K>(\n    set: Set<K>,\n    key: K | K[],\n): boolean => {\n    if (Array.isArray(key)) {\n        return key.some((k) => set.has(k));\n    }\n\n    return set.has(key);\n};\n", "{\n  \"Joy-Con L+R (STANDARD GAMEPAD Vendor: 057e Product: 200e)\": {\n    \"buttons\": {\n      \"0\": \"south\",\n      \"1\": \"east\",\n      \"2\": \"west\",\n      \"3\": \"north\",\n      \"4\": \"lshoulder\",\n      \"5\": \"rshoulder\",\n      \"6\": \"ltrigger\",\n      \"7\": \"rtrigger\",\n      \"8\": \"select\",\n      \"9\": \"start\",\n      \"10\": \"lstick\",\n      \"11\": \"rstick\",\n      \"12\": \"dpad-up\",\n      \"13\": \"dpad-down\",\n      \"14\": \"dpad-left\",\n      \"15\": \"dpad-right\",\n      \"16\": \"home\",\n      \"17\": \"capture\"\n    },\n    \"sticks\": {\n      \"left\": { \"x\": 0, \"y\": 1 },\n      \"right\": { \"x\": 2, \"y\": 3 }\n    }\n  },\n  \"Joy-Con (L) (STANDARD GAMEPAD Vendor: 057e Product: 2006)\": {\n    \"buttons\": {\n      \"0\": \"south\",\n      \"1\": \"east\",\n      \"2\": \"west\",\n      \"3\": \"north\",\n      \"4\": \"lshoulder\",\n      \"5\": \"rshoulder\",\n      \"9\": \"select\",\n      \"10\": \"lstick\",\n      \"16\": \"start\"\n    },\n    \"sticks\": {\n      \"left\": { \"x\": 0, \"y\": 1 }\n    }\n  },\n  \"Joy-Con (R) (STANDARD GAMEPAD Vendor: 057e Product: 2007)\": {\n    \"buttons\": {\n      \"0\": \"south\",\n      \"1\": \"east\",\n      \"2\": \"west\",\n      \"3\": \"north\",\n      \"4\": \"lshoulder\",\n      \"5\": \"rshoulder\",\n      \"9\": \"start\",\n      \"10\": \"lstick\",\n      \"16\": \"select\"\n    },\n    \"sticks\": {\n      \"left\": { \"x\": 0, \"y\": 1 }\n    }\n  },\n  \"Pro Controller (STANDARD GAMEPAD Vendor: 057e Product: 2009)\": {\n    \"buttons\": {\n      \"0\": \"south\",\n      \"1\": \"east\",\n      \"2\": \"west\",\n      \"3\": \"north\",\n      \"4\": \"lshoulder\",\n      \"5\": \"rshoulder\",\n      \"6\": \"ltrigger\",\n      \"7\": \"rtrigger\",\n      \"8\": \"select\",\n      \"9\": \"start\",\n      \"10\": \"lstick\",\n      \"11\": \"rstick\",\n      \"12\": \"dpad-up\",\n      \"13\": \"dpad-down\",\n      \"14\": \"dpad-left\",\n      \"15\": \"dpad-right\",\n      \"16\": \"home\",\n      \"17\": \"capture\"\n    },\n    \"sticks\": {\n      \"left\": { \"x\": 0, \"y\": 1 },\n      \"right\": { \"x\": 2, \"y\": 3 }\n    }\n  },\n  \"default\": {\n    \"buttons\": {\n      \"0\": \"south\",\n      \"1\": \"east\",\n      \"2\": \"west\",\n      \"3\": \"north\",\n      \"4\": \"lshoulder\",\n      \"5\": \"rshoulder\",\n      \"6\": \"ltrigger\",\n      \"7\": \"rtrigger\",\n      \"8\": \"select\",\n      \"9\": \"start\",\n      \"10\": \"lstick\",\n      \"11\": \"rstick\",\n      \"12\": \"dpad-up\",\n      \"13\": \"dpad-down\",\n      \"14\": \"dpad-left\",\n      \"15\": \"dpad-right\",\n      \"16\": \"home\"\n    },\n    \"sticks\": {\n      \"left\": { \"x\": 0, \"y\": 1 },\n      \"right\": { \"x\": 2, \"y\": 3 }\n    }\n  }\n}\n", "// everything related to canvas, game loop and input\n\nimport type {\n    ButtonBinding,\n    ButtonsDef,\n    Cursor,\n    GamepadButton,\n    GamepadDef,\n    GamepadStick,\n    Key,\n    KGamePad,\n    MouseButton,\n} from \"./types\";\n\nimport { map, Vec2 } from \"./math\";\n\nimport {\n    isEqOrIncludes,\n    KEventController,\n    KEventHandler,\n    overload2,\n    setHasOrIncludes,\n} from \"./utils\";\n\nimport GAMEPAD_MAP from \"./gamepad.json\";\n\nexport class ButtonState<T = string> {\n    pressed: Set<T> = new Set([]);\n    pressedRepeat: Set<T> = new Set([]);\n    released: Set<T> = new Set([]);\n    down: Set<T> = new Set([]);\n    update() {\n        this.pressed.clear();\n        this.released.clear();\n        this.pressedRepeat.clear();\n    }\n    press(btn: T) {\n        this.pressed.add(btn);\n        this.pressedRepeat.add(btn);\n        this.down.add(btn);\n    }\n    pressRepeat(btn: T) {\n        this.pressedRepeat.add(btn);\n    }\n    release(btn: T) {\n        this.down.delete(btn);\n        this.pressed.delete(btn);\n        this.released.add(btn);\n    }\n}\n\nclass GamepadState {\n    buttonState: ButtonState<GamepadButton> = new ButtonState();\n    stickState: Map<GamepadStick, Vec2> = new Map();\n}\n\nclass FPSCounter {\n    private dts: number[] = [];\n    private timer: number = 0;\n    fps: number = 0;\n    tick(dt: number) {\n        this.dts.push(dt);\n        this.timer += dt;\n        if (this.timer >= 1) {\n            this.timer = 0;\n            this.fps = Math.round(\n                1 / (this.dts.reduce((a, b) => a + b) / this.dts.length),\n            );\n            this.dts = [];\n        }\n    }\n}\n\nexport default (opt: {\n    canvas: HTMLCanvasElement;\n    touchToMouse?: boolean;\n    gamepads?: Record<string, GamepadDef>;\n    pixelDensity?: number;\n    maxFPS?: number;\n    buttons?: ButtonsDef;\n}) => {\n    if (!opt.canvas) {\n        throw new Error(\"Please provide a canvas\");\n    }\n\n    const state = {\n        canvas: opt.canvas,\n        buttons: opt.buttons ?? {},\n        loopID: null as null | number,\n        stopped: false,\n        dt: 0,\n        time: 0,\n        realTime: 0,\n        fpsCounter: new FPSCounter(),\n        timeScale: 1,\n        skipTime: false,\n        isHidden: false,\n        numFrames: 0,\n        mousePos: new Vec2(0),\n        mouseDeltaPos: new Vec2(0),\n        keyState: new ButtonState<Key>(),\n        mouseState: new ButtonState<MouseButton>(),\n        mergedGamepadState: new GamepadState(),\n        gamepadStates: new Map<number, GamepadState>(),\n        // unified input state\n        buttonState: new ButtonState<string>(),\n        gamepads: [] as KGamePad[],\n        charInputted: [],\n        isMouseMoved: false,\n        lastWidth: opt.canvas.offsetWidth,\n        lastHeight: opt.canvas.offsetHeight,\n        events: new KEventHandler<{\n            mouseMove: [];\n            mouseDown: [MouseButton];\n            mousePress: [MouseButton];\n            mouseRelease: [MouseButton];\n            charInput: [string];\n            keyPress: [Key];\n            keyDown: [Key];\n            keyPressRepeat: [Key];\n            keyRelease: [Key];\n            touchStart: [Vec2, Touch];\n            touchMove: [Vec2, Touch];\n            touchEnd: [Vec2, Touch];\n            gamepadButtonDown: [GamepadButton];\n            gamepadButtonPress: [GamepadButton];\n            gamepadButtonRelease: [GamepadButton];\n            gamepadStick: [string, Vec2];\n            gamepadConnect: [KGamePad];\n            gamepadDisconnect: [KGamePad];\n            buttonDown: [string];\n            buttonPress: [string];\n            buttonRelease: [string];\n            scroll: [Vec2];\n            hide: [];\n            show: [];\n            resize: [];\n            input: [];\n        }>(),\n    };\n\n    function dt() {\n        return state.dt * state.timeScale;\n    }\n\n    function isHidden() {\n        return state.isHidden;\n    }\n\n    function time() {\n        return state.time;\n    }\n\n    function fps() {\n        return state.fpsCounter.fps;\n    }\n\n    function numFrames() {\n        return state.numFrames;\n    }\n\n    function screenshot(): string {\n        return state.canvas.toDataURL();\n    }\n\n    function setCursor(c: Cursor): void {\n        state.canvas.style.cursor = c;\n    }\n\n    function getCursor(): Cursor {\n        return state.canvas.style.cursor;\n    }\n\n    function setCursorLocked(b: boolean): void {\n        if (b) {\n            try {\n                const res = state.canvas\n                    .requestPointerLock() as unknown as Promise<void>;\n                if (res.catch) {\n                    res.catch((e) => console.error(e));\n                }\n            } catch (e) {\n                console.error(e);\n            }\n        } else {\n            document.exitPointerLock();\n        }\n    }\n\n    function isCursorLocked(): boolean {\n        return !!document.pointerLockElement;\n    }\n\n    // wrappers around full screen functions to work across browsers\n    function enterFullscreen(el: HTMLElement) {\n        if (el.requestFullscreen) el.requestFullscreen();\n        // @ts-ignore\n        else if (el.webkitRequestFullscreen) el.webkitRequestFullscreen();\n    }\n\n    function exitFullscreen() {\n        if (document.exitFullscreen) document.exitFullscreen();\n        // @ts-ignore\n        else if (document.webkitExitFullScreen) document.webkitExitFullScreen();\n    }\n\n    function setFullscreen(f: boolean = true) {\n        if (f) {\n            enterFullscreen(state.canvas);\n        } else {\n            exitFullscreen();\n        }\n    }\n\n    function isFullscreen(): boolean {\n        return document.fullscreenElement === state.canvas\n            // @ts-ignore\n            || document.webkitFullscreenElement === state.canvas;\n    }\n\n    function quit() {\n        state.stopped = true;\n        for (const name in canvasEvents) {\n            state.canvas.removeEventListener(name, canvasEvents[name]);\n        }\n        for (const name in docEvents) {\n            document.removeEventListener(name, docEvents[name]);\n        }\n        for (const name in winEvents) {\n            window.removeEventListener(name, winEvents[name]);\n        }\n        resizeObserver.disconnect();\n    }\n\n    function run(action: () => void) {\n        if (state.loopID !== null) {\n            cancelAnimationFrame(state.loopID);\n        }\n\n        let accumulatedDt = 0;\n\n        const frame = (t: number) => {\n            if (state.stopped) return;\n\n            // TODO: allow background actions?\n            if (document.visibilityState !== \"visible\") {\n                state.loopID = requestAnimationFrame(frame);\n                return;\n            }\n\n            const loopTime = t / 1000;\n            const realDt = loopTime - state.realTime;\n            const desiredDt = opt.maxFPS ? 1 / opt.maxFPS : 0;\n\n            state.realTime = loopTime;\n            accumulatedDt += realDt;\n\n            if (accumulatedDt > desiredDt) {\n                if (!state.skipTime) {\n                    state.dt = accumulatedDt;\n                    state.time += dt();\n                    state.fpsCounter.tick(state.dt);\n                }\n                accumulatedDt = 0;\n                state.skipTime = false;\n                state.numFrames++;\n                processInput();\n                action();\n                resetInput();\n            }\n\n            state.loopID = requestAnimationFrame(frame);\n        };\n\n        frame(0);\n    }\n\n    function isTouchscreen() {\n        return (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0;\n    }\n\n    function mousePos(): Vec2 {\n        return state.mousePos.clone();\n    }\n\n    function mouseDeltaPos(): Vec2 {\n        return state.mouseDeltaPos.clone();\n    }\n\n    function isMousePressed(m: MouseButton = \"left\"): boolean {\n        return state.mouseState.pressed.has(m);\n    }\n\n    function isMouseDown(m: MouseButton = \"left\"): boolean {\n        return state.mouseState.down.has(m);\n    }\n\n    function isMouseReleased(m: MouseButton = \"left\"): boolean {\n        return state.mouseState.released.has(m);\n    }\n\n    function isMouseMoved(): boolean {\n        return state.isMouseMoved;\n    }\n\n    function isKeyPressed(k?: Key | Key[]): boolean {\n        return k === undefined\n            ? state.keyState.pressed.size > 0\n            : setHasOrIncludes(state.keyState.pressed, k);\n    }\n\n    function isKeyPressedRepeat(k?: Key | Key[]): boolean {\n        return k === undefined\n            ? state.keyState.pressedRepeat.size > 0\n            : setHasOrIncludes(state.keyState.pressedRepeat, k);\n    }\n\n    function isKeyDown(k?: Key | Key[]): boolean {\n        return k === undefined\n            ? state.keyState.down.size > 0\n            : setHasOrIncludes(state.keyState.down, k);\n    }\n\n    function isKeyReleased(k?: Key | Key[]): boolean {\n        return k === undefined\n            ? state.keyState.released.size > 0\n            : setHasOrIncludes(state.keyState.released, k);\n    }\n\n    function isGamepadButtonPressed(\n        btn?: GamepadButton | GamepadButton[],\n    ): boolean {\n        return btn === undefined\n            ? state.mergedGamepadState.buttonState.pressed.size > 0\n            : setHasOrIncludes(\n                state.mergedGamepadState.buttonState.pressed,\n                btn,\n            );\n    }\n\n    function isGamepadButtonDown(\n        btn?: GamepadButton | GamepadButton[],\n    ): boolean {\n        return btn === undefined\n            ? state.mergedGamepadState.buttonState.down.size > 0\n            : setHasOrIncludes(state.mergedGamepadState.buttonState.down, btn);\n    }\n\n    function isGamepadButtonReleased(\n        btn?: GamepadButton | GamepadButton[],\n    ): boolean {\n        return btn === undefined\n            ? state.mergedGamepadState.buttonState.released.size > 0\n            : setHasOrIncludes(\n                state.mergedGamepadState.buttonState.released,\n                btn,\n            );\n    }\n\n    function isButtonPressed(btn?: string | string[]): boolean {\n        return btn === undefined\n            ? state.buttonState.pressed.size > 0\n            : setHasOrIncludes(state.buttonState.pressed, btn);\n    }\n\n    function isButtonDown(btn?: string | string[]): boolean {\n        return btn === undefined\n            ? state.buttonState.down.size > 0\n            : setHasOrIncludes(state.buttonState.down, btn);\n    }\n\n    function isButtonReleased(btn?: string | string[]): boolean {\n        return btn === undefined\n            ? state.buttonState.released.size > 0\n            : setHasOrIncludes(state.buttonState.released, btn);\n    }\n\n    function getButton(btn: string): ButtonBinding {\n        return state.buttons?.[btn];\n    }\n\n    function setButton(btn: string, binding: ButtonBinding) {\n        state.buttons[btn] = {\n            ...state.buttons[btn],\n            ...binding,\n        };\n    }\n\n    function getButtonNameByKey(key: Key): string | undefined {\n        for (const b in state.buttons) {\n            const bindings = state.buttons[b].keyboard?.length\n                ? state.buttons[b].keyboard\n                : [b];\n\n            if (bindings.includes(key)) {\n                return Object.keys(state.buttons).find((k) =>\n                    state.buttons[k] === state.buttons[b]\n                );\n            }\n        }\n    }\n\n    function getButtonByGamepadButton(\n        btn: GamepadButton,\n    ): string | undefined {\n        for (const b in state.buttons) {\n            const bindings = state.buttons[b].gamepad?.length\n                ? state.buttons[b].gamepad\n                : [b];\n\n            if (bindings.includes(btn)) {\n                return Object.keys(state.buttons).find((k) =>\n                    state.buttons[k] === state.buttons[b]\n                );\n            }\n        }\n    }\n\n    function getButtonByMouseButton(\n        btn: MouseButton,\n    ): string | undefined {\n        for (const b in state.buttons) {\n            const bindings = state.buttons[b].mouse?.length\n                ? state.buttons[b].mouse\n                : [b];\n\n            if (bindings.includes(btn)) {\n                return Object.keys(state.buttons).find((k) =>\n                    state.buttons[k] === state.buttons[b]\n                );\n            }\n        }\n    }\n\n    function onResize(action: () => void): KEventController {\n        return state.events.on(\"resize\", action);\n    }\n\n    // input callbacks\n    const onKeyDown = overload2((action: (key: Key) => void) => {\n        return state.events.on(\"keyDown\", action);\n    }, (key: Key | Key[], action: (key: Key) => void) => {\n        return state.events.on(\n            \"keyDown\",\n            (k) => isEqOrIncludes(key, k) && action(k),\n        );\n    });\n\n    // key pressed is equal to the key by the user\n    const onKeyPress = overload2((action: (key: Key) => void) => {\n        return state.events.on(\"keyPress\", (k) => action(k));\n    }, (key: Key | Key[], action: (key: Key) => void) => {\n        return state.events.on(\n            \"keyPress\",\n            (k) => isEqOrIncludes(key, k) && action(k),\n        );\n    });\n\n    const onKeyPressRepeat = overload2((action: (key: Key) => void) => {\n        return state.events.on(\"keyPressRepeat\", action);\n    }, (key: Key | Key[], action: (key: Key) => void) => {\n        return state.events.on(\n            \"keyPressRepeat\",\n            (k) => isEqOrIncludes(key, k) && action(k),\n        );\n    });\n\n    const onKeyRelease = overload2((action: (key: Key) => void) => {\n        return state.events.on(\"keyRelease\", action);\n    }, (key: Key | Key[], action: (key: Key) => void) => {\n        return state.events.on(\n            \"keyRelease\",\n            (k) => isEqOrIncludes(key, k) && action(k),\n        );\n    });\n\n    const onMouseDown = overload2((action: (m: MouseButton) => void) => {\n        return state.events.on(\"mouseDown\", (m) => action(m));\n    }, (\n        mouse: MouseButton | MouseButton[],\n        action: (m: MouseButton) => void,\n    ) => {\n        return state.events.on(\n            \"mouseDown\",\n            (m) => isEqOrIncludes(mouse, m) && action(m),\n        );\n    });\n\n    const onMousePress = overload2((action: (m: MouseButton) => void) => {\n        return state.events.on(\"mousePress\", (m) => action(m));\n    }, (\n        mouse: MouseButton | MouseButton[],\n        action: (m: MouseButton) => void,\n    ) => {\n        return state.events.on(\n            \"mousePress\",\n            (m) => isEqOrIncludes(mouse, m) && action(m),\n        );\n    });\n\n    const onMouseRelease = overload2((action: (m: MouseButton) => void) => {\n        return state.events.on(\"mouseRelease\", (m) => action(m));\n    }, (\n        mouse: MouseButton | MouseButton[],\n        action: (m: MouseButton) => void,\n    ) => {\n        return state.events.on(\"mouseRelease\", (m) => m === mouse && action(m));\n    });\n\n    function onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): KEventController {\n        return state.events.on(\n            \"mouseMove\",\n            () => f(mousePos(), mouseDeltaPos()),\n        );\n    }\n\n    function onCharInput(action: (ch: string) => void): KEventController {\n        return state.events.on(\"charInput\", action);\n    }\n\n    function onTouchStart(f: (pos: Vec2, t: Touch) => void): KEventController {\n        return state.events.on(\"touchStart\", f);\n    }\n\n    function onTouchMove(f: (pos: Vec2, t: Touch) => void): KEventController {\n        return state.events.on(\"touchMove\", f);\n    }\n\n    function onTouchEnd(f: (pos: Vec2, t: Touch) => void): KEventController {\n        return state.events.on(\"touchEnd\", f);\n    }\n\n    function onScroll(action: (delta: Vec2) => void): KEventController {\n        return state.events.on(\"scroll\", action);\n    }\n\n    function onHide(action: () => void): KEventController {\n        return state.events.on(\"hide\", action);\n    }\n\n    function onShow(action: () => void): KEventController {\n        return state.events.on(\"show\", action);\n    }\n\n    const onGamepadButtonPress = overload2(\n        (action: (btn: GamepadButton) => void) => {\n            return state.events.on(\"gamepadButtonPress\", (b) => action(b));\n        },\n        (\n            btn: GamepadButton | GamepadButton[],\n            action: (btn: GamepadButton) => void,\n        ) => {\n            return state.events.on(\n                \"gamepadButtonPress\",\n                (b) => isEqOrIncludes(btn, b) && action(b),\n            );\n        },\n    );\n\n    const onGamepadButtonDown = overload2(\n        (action: (btn: GamepadButton) => void) => {\n            return state.events.on(\"gamepadButtonDown\", (b) => action(b));\n        },\n        (\n            btn: GamepadButton,\n            action: (btn: GamepadButton) => void,\n        ) => {\n            return state.events.on(\n                \"gamepadButtonDown\",\n                (b) => isEqOrIncludes(btn, b) && action(b),\n            );\n        },\n    );\n\n    const onGamepadButtonRelease = overload2(\n        (action: (btn: GamepadButton) => void) => {\n            return state.events.on(\"gamepadButtonRelease\", (b) => action(b));\n        },\n        (\n            btn: GamepadButton | GamepadButton[],\n            action: (btn: GamepadButton) => void,\n        ) => {\n            return state.events.on(\n                \"gamepadButtonRelease\",\n                (b) => isEqOrIncludes(btn, b) && action(b),\n            );\n        },\n    );\n\n    function onGamepadStick(\n        stick: GamepadStick,\n        action: (value: Vec2) => void,\n    ): KEventController {\n        return state.events.on(\n            \"gamepadStick\",\n            (a: string, v: Vec2) => a === stick && action(v),\n        );\n    }\n\n    function onGamepadConnect(action: (gamepad: KGamePad) => void) {\n        state.events.on(\"gamepadConnect\", action);\n    }\n\n    function onGamepadDisconnect(action: (gamepad: KGamePad) => void) {\n        state.events.on(\"gamepadDisconnect\", action);\n    }\n\n    function getGamepadStick(stick: GamepadStick): Vec2 {\n        return state.mergedGamepadState.stickState.get(stick) || new Vec2(0);\n    }\n\n    function charInputted(): string[] {\n        return [...state.charInputted];\n    }\n\n    function getGamepads(): KGamePad[] {\n        return [...state.gamepads];\n    }\n\n    const onButtonPress = overload2((action: (btn: string) => void) => {\n        return state.events.on(\"buttonPress\", (b) => action(b));\n    }, (btn: string | string, action: (btn: string) => void) => {\n        return state.events.on(\n            \"buttonPress\",\n            (b) => isEqOrIncludes(btn, b) && action(b),\n        );\n    });\n\n    const onButtonDown = overload2((action: (btn: string) => void) => {\n        return state.events.on(\"buttonDown\", (b) => action(b));\n    }, (btn: string | string, action: (btn: string) => void) => {\n        return state.events.on(\n            \"buttonDown\",\n            (b) => isEqOrIncludes(btn, b) && action(b),\n        );\n    });\n\n    const onButtonRelease = overload2((action: (btn: string) => void) => {\n        return state.events.on(\"buttonRelease\", (b) => action(b));\n    }, (btn: string | string, action: (btn: string) => void) => {\n        return state.events.on(\n            \"buttonRelease\",\n            (b) => isEqOrIncludes(btn, b) && action(b),\n        );\n    });\n\n    function processInput() {\n        state.events.trigger(\"input\");\n        state.keyState.down.forEach((k) => state.events.trigger(\"keyDown\", k));\n        state.mouseState.down.forEach((k) =>\n            state.events.trigger(\"mouseDown\", k)\n        );\n        state.buttonState.down.forEach((btn) =>\n            state.events.trigger(\"buttonDown\", btn)\n        );\n        processGamepad();\n    }\n\n    function resetInput() {\n        state.keyState.update();\n        state.mouseState.update();\n        state.buttonState.update();\n\n        state.mergedGamepadState.buttonState.update();\n        state.mergedGamepadState.stickState.forEach((v, k) => {\n            state.mergedGamepadState.stickState.set(k, new Vec2(0));\n        });\n\n        state.charInputted = [];\n        state.isMouseMoved = false;\n\n        state.gamepadStates.forEach((s) => {\n            s.buttonState.update();\n            s.stickState.forEach((v, k) => {\n                s.stickState.set(k, new Vec2(0));\n            });\n        });\n    }\n\n    function registerGamepad(browserGamepad: Gamepad) {\n        const gamepad = {\n            index: browserGamepad.index,\n            isPressed: (btn: GamepadButton) => {\n                return state.gamepadStates.get(browserGamepad.index).buttonState\n                    .pressed.has(btn);\n            },\n            isDown: (btn: GamepadButton) => {\n                return state.gamepadStates.get(browserGamepad.index).buttonState\n                    .down.has(btn);\n            },\n            isReleased: (btn: GamepadButton) => {\n                return state.gamepadStates.get(browserGamepad.index).buttonState\n                    .released.has(btn);\n            },\n            getStick: (stick: GamepadStick) => {\n                return state.gamepadStates.get(browserGamepad.index).stickState\n                    .get(stick);\n            },\n        };\n\n        state.gamepads.push(gamepad);\n\n        state.gamepadStates.set(browserGamepad.index, {\n            buttonState: new ButtonState(),\n            stickState: new Map([\n                [\"left\", new Vec2(0)],\n                [\"right\", new Vec2(0)],\n            ]),\n        });\n\n        return gamepad;\n    }\n\n    function removeGamepad(gamepad: Gamepad) {\n        state.gamepads = state.gamepads.filter((g) =>\n            g.index !== gamepad.index\n        );\n        state.gamepadStates.delete(gamepad.index);\n    }\n\n    function processGamepad() {\n        for (const browserGamepad of navigator.getGamepads()) {\n            if (\n                browserGamepad && !state.gamepadStates.has(\n                    browserGamepad.index,\n                )\n            ) {\n                registerGamepad(browserGamepad);\n            }\n        }\n\n        for (const gamepad of state.gamepads) {\n            const browserGamepad = navigator.getGamepads()[gamepad.index];\n            const customMap = opt.gamepads ?? {};\n            const map = customMap[browserGamepad.id]\n                ?? GAMEPAD_MAP[browserGamepad.id] ?? GAMEPAD_MAP[\"default\"];\n            const gamepadState = state.gamepadStates.get(gamepad.index);\n\n            for (let i = 0; i < browserGamepad.buttons.length; i++) {\n                const gamepadBtn = map.buttons[i];\n                const browserGamepadBtn = browserGamepad.buttons[i];\n                const bindedBtn = getButtonByGamepadButton(gamepadBtn);\n\n                if (browserGamepadBtn.pressed) {\n                    if (!gamepadState.buttonState.down.has(gamepadBtn)) {\n                        // replicate input in merged state, defined button state and gamepad state\n                        state.mergedGamepadState.buttonState.press(gamepadBtn);\n                        gamepadState.buttonState.press(gamepadBtn);\n                        state.buttonState.press(bindedBtn);\n\n                        state.events.trigger(\"gamepadButtonPress\", gamepadBtn);\n                        state.events.trigger(\"buttonPress\", bindedBtn);\n                    }\n\n                    state.events.trigger(\"gamepadButtonDown\", gamepadBtn);\n                    state.events.trigger(\"buttonDown\", bindedBtn);\n                } else {\n                    if (gamepadState.buttonState.down.has(gamepadBtn)) {\n                        state.mergedGamepadState.buttonState.release(\n                            gamepadBtn,\n                        );\n                        gamepadState.buttonState.release(gamepadBtn);\n                        state.buttonState.release(bindedBtn);\n\n                        state.events.trigger(\n                            \"gamepadButtonRelease\",\n                            gamepadBtn,\n                        );\n                        state.events.trigger(\"buttonRelease\", bindedBtn);\n                    }\n                }\n            }\n\n            for (const stickName in map.sticks) {\n                const stick = map.sticks[stickName];\n                const value = new Vec2(\n                    browserGamepad.axes[stick.x],\n                    browserGamepad.axes[stick.y],\n                );\n                gamepadState.stickState.set(stickName as GamepadStick, value);\n                state.mergedGamepadState.stickState.set(\n                    stickName as GamepadStick,\n                    value,\n                );\n                state.events.trigger(\"gamepadStick\", stickName, value);\n            }\n        }\n    }\n\n    type EventList<M> = {\n        [event in keyof M]?: (event: M[event]) => void;\n    };\n\n    const canvasEvents: EventList<HTMLElementEventMap> = {};\n    const docEvents: EventList<DocumentEventMap> = {};\n    const winEvents: EventList<WindowEventMap> = {};\n\n    const pd = opt.pixelDensity || window.devicePixelRatio || 1;\n\n    canvasEvents.mousemove = (e) => {\n        const mousePos = new Vec2(e.offsetX, e.offsetY);\n        const mouseDeltaPos = new Vec2(e.movementX, e.movementY);\n        if (isFullscreen()) {\n            const cw = state.canvas.width / pd;\n            const ch = state.canvas.height / pd;\n            const ww = window.innerWidth;\n            const wh = window.innerHeight;\n            const rw = ww / wh;\n            const rc = cw / ch;\n            if (rw > rc) {\n                const ratio = wh / ch;\n                const offset = (ww - (cw * ratio)) / 2;\n                mousePos.x = map(e.offsetX - offset, 0, cw * ratio, 0, cw);\n                mousePos.y = map(e.offsetY, 0, ch * ratio, 0, ch);\n            } else {\n                const ratio = ww / cw;\n                const offset = (wh - (ch * ratio)) / 2;\n                mousePos.x = map(e.offsetX, 0, cw * ratio, 0, cw);\n                mousePos.y = map(e.offsetY - offset, 0, ch * ratio, 0, ch);\n            }\n        }\n        state.events.onOnce(\"input\", () => {\n            state.isMouseMoved = true;\n            state.mousePos = mousePos;\n            state.mouseDeltaPos = mouseDeltaPos;\n            state.events.trigger(\"mouseMove\");\n        });\n    };\n\n    const MOUSE_BUTTONS: MouseButton[] = [\n        \"left\",\n        \"middle\",\n        \"right\",\n        \"back\",\n        \"forward\",\n    ];\n\n    canvasEvents.mousedown = (e) => {\n        state.events.onOnce(\"input\", () => {\n            const m = MOUSE_BUTTONS[e.button];\n            if (!m) return;\n            const btn = getButtonByMouseButton(m);\n\n            state.mouseState.press(m);\n            state.buttonState.press(btn);\n            state.events.trigger(\"mousePress\", m);\n            state.events.trigger(\"buttonPress\", btn);\n        });\n    };\n\n    canvasEvents.mouseup = (e) => {\n        state.events.onOnce(\"input\", () => {\n            const m = MOUSE_BUTTONS[e.button];\n            if (!m) return;\n            const btn = getButtonByMouseButton(m);\n\n            state.mouseState.release(m);\n            state.buttonState.release(btn);\n            state.events.trigger(\"mouseRelease\", m);\n            state.events.trigger(\"buttonRelease\", btn);\n        });\n    };\n\n    const PREVENT_DEFAULT_KEYS = new Set([\n        \" \",\n        \"ArrowLeft\",\n        \"ArrowRight\",\n        \"ArrowUp\",\n        \"ArrowDown\",\n        \"Tab\",\n    ]);\n\n    // translate these key names to a simpler version\n    const KEY_ALIAS = {\n        \"ArrowLeft\": \"left\",\n        \"ArrowRight\": \"right\",\n        \"ArrowUp\": \"up\",\n        \"ArrowDown\": \"down\",\n        \" \": \"space\",\n    };\n\n    canvasEvents.keydown = (e) => {\n        if (PREVENT_DEFAULT_KEYS.has(e.key)) {\n            e.preventDefault();\n        }\n        state.events.onOnce(\"input\", () => {\n            const k = KEY_ALIAS[e.key] || e.key.toLowerCase();\n            if (k.length === 1) {\n                state.events.trigger(\"charInput\", k);\n                state.charInputted.push(k);\n            } else if (k === \"space\") {\n                state.events.trigger(\"charInput\", \" \");\n                state.charInputted.push(\" \");\n            }\n            if (e.repeat) {\n                state.keyState.pressRepeat(k);\n                state.events.trigger(\"keyPressRepeat\", k);\n            } else {\n                const btn = getButtonNameByKey(k);\n\n                state.keyState.press(k);\n                state.buttonState.press(btn);\n                state.events.trigger(\"keyPressRepeat\", k);\n                state.events.trigger(\"keyPress\", k);\n                state.events.trigger(\"buttonPress\", btn);\n            }\n        });\n    };\n\n    canvasEvents.keyup = (e) => {\n        state.events.onOnce(\"input\", () => {\n            const k = KEY_ALIAS[e.key] || e.key.toLowerCase();\n            const btn = getButtonNameByKey(k);\n\n            state.keyState.release(k);\n            state.buttonState.release(btn);\n            state.events.trigger(\"keyRelease\", k);\n            state.events.trigger(\"buttonRelease\", btn);\n        });\n    };\n\n    // TODO: handle all touches at once instead of sequentially\n    canvasEvents.touchstart = (e) => {\n        // disable long tap context menu\n        e.preventDefault();\n\n        state.events.onOnce(\"input\", () => {\n            const touches = [...e.changedTouches];\n            const box = state.canvas.getBoundingClientRect();\n            if (opt.touchToMouse !== false) {\n                state.mousePos = new Vec2(\n                    touches[0].clientX - box.x,\n                    touches[0].clientY - box.y,\n                );\n\n                const btn = getButtonByMouseButton(\"left\");\n\n                state.mouseState.press(\"left\");\n                state.buttonState.press(btn);\n                state.events.trigger(\"mousePress\", \"left\");\n                state.events.trigger(\"buttonPress\", btn);\n            }\n            touches.forEach((t) => {\n                state.events.trigger(\n                    \"touchStart\",\n                    new Vec2(t.clientX - box.x, t.clientY - box.y),\n                    t,\n                );\n            });\n        });\n    };\n\n    canvasEvents.touchmove = (e) => {\n        // disable scrolling\n        e.preventDefault();\n        state.events.onOnce(\"input\", () => {\n            const touches = [...e.changedTouches];\n            const box = state.canvas.getBoundingClientRect();\n            if (opt.touchToMouse !== false) {\n                const lastMousePos = state.mousePos;\n                state.mousePos = new Vec2(\n                    touches[0].clientX - box.x,\n                    touches[0].clientY - box.y,\n                );\n                state.mouseDeltaPos = state.mousePos.sub(lastMousePos);\n                state.events.trigger(\"mouseMove\");\n            }\n            touches.forEach((t) => {\n                state.events.trigger(\n                    \"touchMove\",\n                    new Vec2(t.clientX - box.x, t.clientY - box.y),\n                    t,\n                );\n            });\n        });\n    };\n\n    canvasEvents.touchend = (e) => {\n        state.events.onOnce(\"input\", () => {\n            const touches = [...e.changedTouches];\n            const box = state.canvas.getBoundingClientRect();\n            if (opt.touchToMouse !== false) {\n                state.mousePos = new Vec2(\n                    touches[0].clientX - box.x,\n                    touches[0].clientY - box.y,\n                );\n                state.mouseDeltaPos = new Vec2(0, 0);\n                const btn = getButtonByMouseButton(\"left\");\n\n                state.buttonState.release(btn);\n                state.mouseState.release(\"left\");\n                state.events.trigger(\"mouseRelease\", \"left\");\n                state.events.trigger(\"buttonRelease\", btn);\n            }\n            touches.forEach((t) => {\n                state.events.trigger(\n                    \"touchEnd\",\n                    new Vec2(t.clientX - box.x, t.clientY - box.y),\n                    t,\n                );\n            });\n        });\n    };\n\n    canvasEvents.touchcancel = (e) => {\n        state.events.onOnce(\"input\", () => {\n            const touches = [...e.changedTouches];\n            const box = state.canvas.getBoundingClientRect();\n            if (opt.touchToMouse !== false) {\n                state.mousePos = new Vec2(\n                    touches[0].clientX - box.x,\n                    touches[0].clientY - box.y,\n                );\n                state.mouseState.release(\"left\");\n                state.events.trigger(\"mouseRelease\", \"left\");\n            }\n            touches.forEach((t) => {\n                state.events.trigger(\n                    \"touchEnd\",\n                    new Vec2(t.clientX - box.x, t.clientY - box.y),\n                    t,\n                );\n            });\n        });\n    };\n\n    // TODO: option to not prevent default?\n    canvasEvents.wheel = (e) => {\n        e.preventDefault();\n        state.events.onOnce(\"input\", () => {\n            state.events.trigger(\"scroll\", new Vec2(e.deltaX, e.deltaY));\n        });\n    };\n\n    canvasEvents.contextmenu = (e) => e.preventDefault();\n\n    docEvents.visibilitychange = () => {\n        if (document.visibilityState === \"visible\") {\n            // prevent a surge of dt when switch back after the tab being hidden for a while\n            state.skipTime = true;\n            state.isHidden = false;\n            state.events.trigger(\"show\");\n        } else {\n            state.isHidden = true;\n            state.events.trigger(\"hide\");\n        }\n    };\n\n    winEvents.gamepadconnected = (e) => {\n        const kbGamepad = registerGamepad(e.gamepad);\n        state.events.onOnce(\"input\", () => {\n            state.events.trigger(\"gamepadConnect\", kbGamepad);\n        });\n    };\n\n    winEvents.gamepaddisconnected = (e) => {\n        const kbGamepad =\n            getGamepads().filter((g) => g.index === e.gamepad.index)[0];\n        removeGamepad(e.gamepad);\n        state.events.onOnce(\"input\", () => {\n            state.events.trigger(\"gamepadDisconnect\", kbGamepad);\n        });\n    };\n\n    for (const name in canvasEvents) {\n        state.canvas.addEventListener(name, canvasEvents[name]);\n    }\n\n    for (const name in docEvents) {\n        document.addEventListener(name, docEvents[name]);\n    }\n\n    for (const name in winEvents) {\n        window.addEventListener(name, winEvents[name]);\n    }\n\n    const resizeObserver = new ResizeObserver((entries) => {\n        for (const entry of entries) {\n            if (entry.target !== state.canvas) continue;\n            if (\n                state.lastWidth === state.canvas.offsetWidth\n                && state.lastHeight === state.canvas.offsetHeight\n            ) return;\n            state.lastWidth = state.canvas.offsetWidth;\n            state.lastHeight = state.canvas.offsetHeight;\n            state.events.onOnce(\"input\", () => {\n                state.events.trigger(\"resize\");\n            });\n        }\n    });\n\n    resizeObserver.observe(state.canvas);\n\n    return {\n        dt,\n        time,\n        run,\n        canvas: state.canvas,\n        fps,\n        numFrames,\n        quit,\n        isHidden,\n        setFullscreen,\n        isFullscreen,\n        setCursor,\n        screenshot,\n        getGamepads,\n        getCursor,\n        setCursorLocked,\n        isCursorLocked,\n        isTouchscreen,\n        mousePos,\n        mouseDeltaPos,\n        isKeyDown,\n        isKeyPressed,\n        isKeyPressedRepeat,\n        isKeyReleased,\n        isMouseDown,\n        isMousePressed,\n        isMouseReleased,\n        isMouseMoved,\n        isGamepadButtonPressed,\n        isGamepadButtonDown,\n        isGamepadButtonReleased,\n        getGamepadStick,\n        isButtonPressed,\n        isButtonDown,\n        isButtonReleased,\n        setButton,\n        getButton,\n        charInputted,\n        onResize,\n        onKeyDown,\n        onKeyPress,\n        onKeyPressRepeat,\n        onKeyRelease,\n        onMouseDown,\n        onMousePress,\n        onMouseRelease,\n        onMouseMove,\n        onCharInput,\n        onTouchStart,\n        onTouchMove,\n        onTouchEnd,\n        onScroll,\n        onHide,\n        onShow,\n        onGamepadButtonDown,\n        onGamepadButtonPress,\n        onGamepadButtonRelease,\n        onGamepadStick,\n        onGamepadConnect,\n        onGamepadDisconnect,\n        onButtonPress,\n        onButtonDown,\n        onButtonRelease,\n        events: state.events,\n    };\n};\n", "import type { ImageSource, TexFilter, TextureOpt, Uniform } from \"./types\";\n\nimport { Color, Mat4, Vec2 } from \"./math\";\n\nimport { deepEq } from \"./utils\";\n\nexport type GfxCtx = ReturnType<typeof initGfx>;\n\nexport class Texture {\n    ctx: GfxCtx;\n    src: null | ImageSource = null;\n    glTex: WebGLTexture;\n    width: number;\n    height: number;\n\n    constructor(ctx: GfxCtx, w: number, h: number, opt: TextureOpt = {}) {\n        this.ctx = ctx;\n        const gl = ctx.gl;\n        this.glTex = ctx.gl.createTexture();\n        ctx.onDestroy(() => this.free());\n\n        this.width = w;\n        this.height = h;\n\n        // TODO: no default\n        const filter = {\n            \"linear\": gl.LINEAR,\n            \"nearest\": gl.NEAREST,\n        }[opt.filter ?? ctx.opts.texFilter] ?? gl.NEAREST;\n\n        const wrap = {\n            \"repeat\": gl.REPEAT,\n            \"clampToEadge\": gl.CLAMP_TO_EDGE,\n        }[opt.wrap] ?? gl.CLAMP_TO_EDGE;\n\n        this.bind();\n\n        if (w && h) {\n            gl.texImage2D(\n                gl.TEXTURE_2D,\n                0,\n                gl.RGBA,\n                w,\n                h,\n                0,\n                gl.RGBA,\n                gl.UNSIGNED_BYTE,\n                null,\n            );\n        }\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n        this.unbind();\n    }\n\n    static fromImage(\n        ctx: GfxCtx,\n        img: ImageSource,\n        opt: TextureOpt = {},\n    ): Texture {\n        const tex = new Texture(ctx, img.width, img.height, opt);\n        tex.update(img);\n        tex.src = img;\n        return tex;\n    }\n\n    update(img: ImageSource, x = 0, y = 0) {\n        const gl = this.ctx.gl;\n        this.bind();\n        gl.texSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            x,\n            y,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            img,\n        );\n        this.unbind();\n    }\n\n    bind() {\n        this.ctx.pushTexture2D(this.glTex);\n    }\n\n    unbind() {\n        this.ctx.popTexture2D();\n    }\n\n    /** Frees up texture memory. Call this once the texture is no longer being used to avoid memory leaks. */\n    free() {\n        this.ctx.gl.deleteTexture(this.glTex);\n    }\n}\n\n/**\n * @group GFX\n */\nexport class FrameBuffer {\n    ctx: GfxCtx;\n    tex: Texture;\n    glFramebuffer: WebGLFramebuffer;\n    glRenderbuffer: WebGLRenderbuffer;\n\n    constructor(ctx: GfxCtx, w: number, h: number, opt: TextureOpt = {}) {\n        this.ctx = ctx;\n        const gl = ctx.gl;\n        ctx.onDestroy(() => this.free());\n        this.tex = new Texture(ctx, w, h, opt);\n        this.glFramebuffer = gl.createFramebuffer();\n        this.glRenderbuffer = gl.createRenderbuffer();\n        this.bind();\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, w, h);\n        gl.framebufferTexture2D(\n            gl.FRAMEBUFFER,\n            gl.COLOR_ATTACHMENT0,\n            gl.TEXTURE_2D,\n            this.tex.glTex,\n            0,\n        );\n        gl.framebufferRenderbuffer(\n            gl.FRAMEBUFFER,\n            gl.DEPTH_STENCIL_ATTACHMENT,\n            gl.RENDERBUFFER,\n            this.glRenderbuffer,\n        );\n        this.unbind();\n    }\n\n    get width() {\n        return this.tex.width;\n    }\n\n    get height() {\n        return this.tex.height;\n    }\n\n    toImageData() {\n        const gl = this.ctx.gl;\n        const data = new Uint8ClampedArray(this.width * this.height * 4);\n        this.bind();\n        gl.readPixels(\n            0,\n            0,\n            this.width,\n            this.height,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            data,\n        );\n        this.unbind();\n        // flip vertically\n        const bytesPerRow = this.width * 4;\n        const temp = new Uint8Array(bytesPerRow);\n        for (let y = 0; y < (this.height / 2 | 0); y++) {\n            const topOffset = y * bytesPerRow;\n            const bottomOffset = (this.height - y - 1) * bytesPerRow;\n            temp.set(data.subarray(topOffset, topOffset + bytesPerRow));\n            data.copyWithin(\n                topOffset,\n                bottomOffset,\n                bottomOffset + bytesPerRow,\n            );\n            data.set(temp, bottomOffset);\n        }\n        return new ImageData(data, this.width, this.height);\n    }\n\n    toDataURL() {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = this.width;\n        canvas.height = this.height;\n        ctx.putImageData(this.toImageData(), 0, 0);\n        return canvas.toDataURL();\n    }\n\n    clear() {\n        const gl = this.ctx.gl;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n\n    draw(action: () => void) {\n        this.bind();\n        action();\n        this.unbind();\n    }\n\n    bind() {\n        this.ctx.pushFramebuffer(this.glFramebuffer);\n        this.ctx.pushRenderbuffer(this.glRenderbuffer);\n        this.ctx.pushViewport({ x: 0, y: 0, w: this.width, h: this.height });\n    }\n\n    unbind() {\n        this.ctx.popFramebuffer();\n        this.ctx.popRenderbuffer();\n        this.ctx.popViewport();\n    }\n\n    free() {\n        const gl = this.ctx.gl;\n        gl.deleteFramebuffer(this.glFramebuffer);\n        gl.deleteRenderbuffer(this.glRenderbuffer);\n        this.tex.free();\n    }\n}\n\n/**\n * @group GFX\n */\nexport class Shader {\n    ctx: GfxCtx;\n    glProgram: WebGLProgram;\n\n    constructor(ctx: GfxCtx, vert: string, frag: string, attribs: string[]) {\n        this.ctx = ctx;\n        ctx.onDestroy(() => this.free());\n\n        const gl = ctx.gl;\n        const vertShader = gl.createShader(gl.VERTEX_SHADER);\n        const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n        gl.shaderSource(vertShader, vert);\n        gl.shaderSource(fragShader, frag);\n        gl.compileShader(vertShader);\n        gl.compileShader(fragShader);\n\n        const prog = gl.createProgram();\n        this.glProgram = prog;\n\n        gl.attachShader(prog, vertShader);\n        gl.attachShader(prog, fragShader);\n\n        attribs.forEach((attrib, i) => gl.bindAttribLocation(prog, i, attrib));\n\n        gl.linkProgram(prog);\n\n        if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n            const vertError = gl.getShaderInfoLog(vertShader);\n            if (vertError) throw new Error(\"VERTEX SHADER \" + vertError);\n            const fragError = gl.getShaderInfoLog(fragShader);\n            if (fragError) throw new Error(\"FRAGMENT SHADER \" + fragError);\n        }\n\n        gl.deleteShader(vertShader);\n        gl.deleteShader(fragShader);\n    }\n\n    bind() {\n        this.ctx.pushProgram(this.glProgram);\n    }\n\n    unbind() {\n        this.ctx.popProgram();\n    }\n\n    send(uniform: Uniform) {\n        const gl = this.ctx.gl;\n        for (const name in uniform) {\n            const val = uniform[name];\n            const loc = gl.getUniformLocation(this.glProgram, name);\n            if (typeof val === \"number\") {\n                gl.uniform1f(loc, val);\n            } else if (val instanceof Mat4) {\n                gl.uniformMatrix4fv(loc, false, new Float32Array(val.m));\n            } else if (val instanceof Color) {\n                gl.uniform3f(loc, val.r, val.g, val.b);\n            } else if (val instanceof Vec2) {\n                gl.uniform2f(loc, val.x, val.y);\n            } else if (Array.isArray(val)) {\n                const first = val[0];\n                if (typeof first === \"number\") {\n                    gl.uniform1fv(loc, val as number[]);\n                } else if (first instanceof Vec2) {\n                    gl.uniform2fv(loc, val.map(v => [v.x, v.y]).flat());\n                } else if (first instanceof Color) {\n                    gl.uniform3fv(loc, val.map(v => [v.r, v.g, v.b]).flat());\n                }\n            } else {\n                throw new Error(\"Unsupported uniform data type\");\n            }\n        }\n    }\n\n    free() {\n        this.ctx.gl.deleteProgram(this.glProgram);\n    }\n}\n\nexport type VertexFormat = {\n    name: string;\n    size: number;\n}[];\n\nexport class BatchRenderer {\n    ctx: GfxCtx;\n\n    glVBuf: WebGLBuffer;\n    glIBuf: WebGLBuffer;\n    vqueue: number[] = [];\n    iqueue: number[] = [];\n    stride: number;\n    maxVertices: number;\n    maxIndices: number;\n\n    vertexFormat: VertexFormat;\n    numDraws: number = 0;\n\n    curPrimitive: GLenum | null = null;\n    curTex: Texture | null = null;\n    curShader: Shader | null = null;\n    curUniform: Uniform = {};\n\n    constructor(\n        ctx: GfxCtx,\n        format: VertexFormat,\n        maxVertices: number,\n        maxIndices: number,\n    ) {\n        const gl = ctx.gl;\n\n        this.vertexFormat = format;\n        this.ctx = ctx;\n        this.stride = format.reduce((sum, f) => sum + f.size, 0);\n        this.maxVertices = maxVertices;\n        this.maxIndices = maxIndices;\n\n        this.glVBuf = gl.createBuffer();\n        ctx.pushArrayBuffer(this.glVBuf);\n        gl.bufferData(gl.ARRAY_BUFFER, maxVertices * 4, gl.DYNAMIC_DRAW);\n        ctx.popArrayBuffer();\n\n        this.glIBuf = gl.createBuffer();\n        ctx.pushElementArrayBuffer(this.glIBuf);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, maxIndices * 4, gl.DYNAMIC_DRAW);\n        ctx.popElementArrayBuffer();\n    }\n\n    push(\n        primitive: GLenum,\n        verts: number[],\n        indices: number[],\n        shader: Shader,\n        tex: Texture | null = null,\n        uniform: Uniform = {},\n    ) {\n        if (\n            primitive !== this.curPrimitive\n            || tex !== this.curTex\n            || shader !== this.curShader\n            || !deepEq(this.curUniform, uniform)\n            || this.vqueue.length + verts.length * this.stride\n                > this.maxVertices\n            || this.iqueue.length + indices.length > this.maxIndices\n        ) {\n            this.flush();\n        }\n        const indexOffset = this.vqueue.length / this.stride;\n        for (const v of verts) {\n            this.vqueue.push(v);\n        }\n        for (const i of indices) {\n            this.iqueue.push(i + indexOffset);\n        }\n        this.curPrimitive = primitive;\n        this.curShader = shader;\n        this.curTex = tex;\n        this.curUniform = uniform;\n    }\n\n    flush() {\n        if (\n            !this.curPrimitive\n            || !this.curShader\n            || this.vqueue.length === 0\n            || this.iqueue.length === 0\n        ) {\n            return;\n        }\n\n        const gl = this.ctx.gl;\n\n        this.ctx.pushArrayBuffer(this.glVBuf);\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(this.vqueue));\n        this.ctx.pushElementArrayBuffer(this.glIBuf);\n        gl.bufferSubData(\n            gl.ELEMENT_ARRAY_BUFFER,\n            0,\n            new Uint16Array(this.iqueue),\n        );\n        this.ctx.setVertexFormat(this.vertexFormat);\n        this.curShader.bind();\n        this.curShader.send(this.curUniform);\n        this.curTex?.bind();\n        gl.drawElements(\n            this.curPrimitive,\n            this.iqueue.length,\n            gl.UNSIGNED_SHORT,\n            0,\n        );\n        this.curTex?.unbind();\n        this.curShader.unbind();\n\n        this.ctx.popArrayBuffer();\n        this.ctx.popElementArrayBuffer();\n\n        this.vqueue = [];\n        this.iqueue = [];\n        this.numDraws++;\n    }\n\n    free() {\n        const gl = this.ctx.gl;\n        gl.deleteBuffer(this.glVBuf);\n        gl.deleteBuffer(this.glIBuf);\n    }\n}\n\nexport class Mesh {\n    ctx: GfxCtx;\n    glVBuf: WebGLBuffer;\n    glIBuf: WebGLBuffer;\n    vertexFormat: VertexFormat;\n    count: number;\n\n    constructor(\n        ctx: GfxCtx,\n        format: VertexFormat,\n        verts: number[],\n        indices: number[],\n    ) {\n        const gl = ctx.gl;\n\n        this.vertexFormat = format;\n        this.ctx = ctx;\n\n        this.glVBuf = gl.createBuffer();\n        ctx.pushArrayBuffer(this.glVBuf);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\n        ctx.popArrayBuffer();\n\n        this.glIBuf = gl.createBuffer();\n        ctx.pushElementArrayBuffer(this.glIBuf);\n        gl.bufferData(\n            gl.ELEMENT_ARRAY_BUFFER,\n            new Uint16Array(indices),\n            gl.STATIC_DRAW,\n        );\n        ctx.popElementArrayBuffer();\n\n        this.count = indices.length;\n    }\n\n    draw(primitive?: GLenum) {\n        const gl = this.ctx.gl;\n        this.ctx.pushArrayBuffer(this.glVBuf);\n        this.ctx.pushElementArrayBuffer(this.glIBuf);\n        this.ctx.setVertexFormat(this.vertexFormat);\n        gl.drawElements(\n            primitive ?? gl.TRIANGLES,\n            this.count,\n            gl.UNSIGNED_SHORT,\n            0,\n        );\n        this.ctx.popArrayBuffer();\n        this.ctx.popElementArrayBuffer();\n    }\n\n    free() {\n        const gl = this.ctx.gl;\n        gl.deleteBuffer(this.glVBuf);\n        gl.deleteBuffer(this.glIBuf);\n    }\n}\n\nfunction genStack<T>(setFunc: (item: T) => void) {\n    const stack: T[] = [];\n    // TODO: don't do anything if pushed item is the same as the one on top?\n    const push = (item: T) => {\n        stack.push(item);\n        setFunc(item);\n    };\n    const pop = () => {\n        stack.pop();\n        setFunc(cur() ?? null);\n    };\n    const cur = () => stack[stack.length - 1];\n    return [push, pop, cur] as const;\n}\n\nexport default function initGfx(gl: WebGLRenderingContext, opts: {\n    texFilter?: TexFilter;\n} = {}) {\n    const gc: Array<() => void> = [];\n\n    function onDestroy(action) {\n        gc.push(action);\n    }\n\n    function destroy() {\n        gc.forEach((action) => action());\n        gl.getExtension(\"WEBGL_lose_context\").loseContext();\n    }\n\n    let curVertexFormat = null;\n\n    function setVertexFormat(fmt: VertexFormat) {\n        if (deepEq(fmt, curVertexFormat)) return;\n        curVertexFormat = fmt;\n        const stride = fmt.reduce((sum, f) => sum + f.size, 0);\n        fmt.reduce((offset, f, i) => {\n            gl.vertexAttribPointer(\n                i,\n                f.size,\n                gl.FLOAT,\n                false,\n                stride * 4,\n                offset,\n            );\n            gl.enableVertexAttribArray(i);\n            return offset + f.size * 4;\n        }, 0);\n    }\n\n    const [pushTexture2D, popTexture2D] = genStack<WebGLTexture>((t) =>\n        gl.bindTexture(gl.TEXTURE_2D, t)\n    );\n\n    const [pushArrayBuffer, popArrayBuffer] = genStack<WebGLBuffer>((b) =>\n        gl.bindBuffer(gl.ARRAY_BUFFER, b)\n    );\n\n    const [pushElementArrayBuffer, popElementArrayBuffer] = genStack<\n        WebGLBuffer\n    >((b) => gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b));\n\n    const [pushFramebuffer, popFramebuffer] = genStack<WebGLFramebuffer>((b) =>\n        gl.bindFramebuffer(gl.FRAMEBUFFER, b)\n    );\n\n    const [pushRenderbuffer, popRenderbuffer] = genStack<WebGLRenderbuffer>((\n        b,\n    ) => gl.bindRenderbuffer(gl.RENDERBUFFER, b));\n\n    const [pushViewport, popViewport] = genStack<\n        { x: number; y: number; w: number; h: number }\n    >(({ x, y, w, h }) => {\n        gl.viewport(x, y, w, h);\n    });\n\n    const [pushProgram, popProgram] = genStack<WebGLProgram>((p) =>\n        gl.useProgram(p)\n    );\n\n    pushViewport({\n        x: 0,\n        y: 0,\n        w: gl.drawingBufferWidth,\n        h: gl.drawingBufferHeight,\n    });\n\n    return {\n        gl,\n        opts,\n        onDestroy,\n        destroy,\n        pushTexture2D,\n        popTexture2D,\n        pushArrayBuffer,\n        popArrayBuffer,\n        pushElementArrayBuffer,\n        popElementArrayBuffer,\n        pushFramebuffer,\n        popFramebuffer,\n        pushRenderbuffer,\n        popRenderbuffer,\n        pushViewport,\n        popViewport,\n        pushProgram,\n        popProgram,\n        setVertexFormat,\n    };\n}\n", "import { KEvent } from \"./utils\";\n\n/**\n * An asset is a resource that is loaded asynchronously.\n */\nexport class Asset<D> {\n    loaded: boolean = false;\n    data: D | null = null;\n    error: Error | null = null;\n    private onLoadEvents: KEvent<[D]> = new KEvent();\n    private onErrorEvents: KEvent<[Error]> = new KEvent();\n    private onFinishEvents: KEvent<[]> = new KEvent();\n    constructor(loader: Promise<D>) {\n        loader.then((data) => {\n            this.loaded = true;\n            this.data = data;\n            this.onLoadEvents.trigger(data);\n        }).catch((err) => {\n            this.error = err;\n            if (this.onErrorEvents.numListeners() > 0) {\n                this.onErrorEvents.trigger(err);\n            } else {\n                throw err;\n            }\n        }).finally(() => {\n            this.onFinishEvents.trigger();\n            this.loaded = true;\n        });\n    }\n    static loaded<D>(data: D): Asset<D> {\n        const asset = new Asset(Promise.resolve(data)) as Asset<D>;\n        asset.data = data;\n        asset.loaded = true;\n        return asset;\n    }\n    onLoad(action: (data: D) => void) {\n        if (this.loaded && this.data) {\n            action(this.data);\n        } else {\n            this.onLoadEvents.add(action);\n        }\n        return this;\n    }\n    onError(action: (err: Error) => void) {\n        if (this.loaded && this.error) {\n            action(this.error);\n        } else {\n            this.onErrorEvents.add(action);\n        }\n        return this;\n    }\n    onFinish(action: () => void) {\n        if (this.loaded) {\n            action();\n        } else {\n            this.onFinishEvents.add(action);\n        }\n        return this;\n    }\n    then(action: (data: D) => void): Asset<D> {\n        return this.onLoad(action);\n    }\n    catch(action: (err: Error) => void): Asset<D> {\n        return this.onError(action);\n    }\n    finally(action: () => void): Asset<D> {\n        return this.onFinish(action);\n    }\n}\n\nexport class AssetBucket<D> {\n    assets: Map<string, Asset<D>> = new Map();\n    lastUID: number = 0;\n    add(name: string | null, loader: Promise<D>): Asset<D> {\n        // if user don't provide a name we use a generated one\n        const id = name ?? (this.lastUID++ + \"\");\n        const asset = new Asset(loader);\n        this.assets.set(id, asset);\n        return asset;\n    }\n    addLoaded(name: string | null, data: D): Asset<D> {\n        const id = name ?? (this.lastUID++ + \"\");\n        const asset = Asset.loaded(data);\n        this.assets.set(id, asset);\n        return asset;\n    }\n    get(handle: string): Asset<D> | null {\n        return this.assets.get(handle);\n    }\n    progress(): number {\n        if (this.assets.size === 0) {\n            return 1;\n        }\n        let loaded = 0;\n        this.assets.forEach((asset) => {\n            if (asset.loaded) {\n                loaded++;\n            }\n        });\n        return loaded / this.assets.size;\n    }\n}\n\nexport function fetchURL(url: string) {\n    return fetch(url)\n        .then((res) => {\n            if (!res.ok) throw new Error(`Failed to fetch \"${url}\"`);\n            return res;\n        });\n}\n\nexport function fetchJSON(path: string) {\n    return fetchURL(path).then((res) => res.json());\n}\n\nexport function fetchText(path: string) {\n    return fetchURL(path).then((res) => res.text());\n}\n\nexport function fetchArrayBuffer(path: string) {\n    return fetchURL(path).then((res) => res.arrayBuffer());\n}\n\n// wrapper around image loader to get a Promise\nexport function loadImg(src: string): Promise<HTMLImageElement> {\n    const img = new Image();\n    img.crossOrigin = \"anonymous\";\n    img.src = src;\n    return new Promise<HTMLImageElement>((resolve, reject) => {\n        img.onload = () => resolve(img);\n        img.onerror = () =>\n            reject(new Error(`Failed to load image from \"${src}\"`));\n    });\n}\n", "// some default charsets for loading bitmap fonts\nexport const ASCII_CHARS =\n    \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\nexport const DEF_ANCHOR = \"topleft\";\nexport const BG_GRID_SIZE = 64;\nexport const DEF_FONT = \"monospace\";\nexport const DBG_FONT = \"monospace\";\nexport const DEF_TEXT_SIZE = 36;\nexport const DEF_TEXT_CACHE_SIZE = 64;\nexport const MAX_TEXT_CACHE_SIZE = 256;\nexport const FONT_ATLAS_WIDTH = 2048;\nexport const FONT_ATLAS_HEIGHT = 2048;\nexport const SPRITE_ATLAS_WIDTH = 2048;\nexport const SPRITE_ATLAS_HEIGHT = 2048;\n// 0.1 pixel padding to texture coordinates to prevent artifact\nexport const UV_PAD = 0.1;\nexport const DEF_HASH_GRID_SIZE = 64;\nexport const DEF_FONT_FILTER = \"linear\";\nexport const LOG_MAX = 8;\nexport const LOG_TIME = 4;\nexport const VERTEX_FORMAT = [\n    { name: \"a_pos\", size: 2 },\n    { name: \"a_uv\", size: 2 },\n    { name: \"a_color\", size: 4 },\n];\nconst STRIDE = VERTEX_FORMAT.reduce((sum, f) => sum + f.size, 0);\nconst MAX_BATCHED_QUAD = 2048;\nexport const MAX_BATCHED_VERTS = MAX_BATCHED_QUAD * 4 * STRIDE;\nexport const MAX_BATCHED_INDICES = MAX_BATCHED_QUAD * 6;\n// vertex shader template, replace {{user}} with user vertex shader code\nexport const VERT_TEMPLATE = `\nattribute vec2 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 0.0, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n// fragment shader template, replace {{user}} with user fragment shader code\nexport const FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n// default {{user}} vertex shader code\nexport const DEF_VERT = `\nvec4 vert(vec2 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n// default {{user}} fragment shader code\nexport const DEF_FRAG = `\nvec4 frag(vec2 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\nexport const COMP_DESC = new Set([\"id\", \"require\"]);\nexport const COMP_EVENTS = new Set([\n    \"add\",\n    \"update\",\n    \"draw\",\n    \"destroy\",\n    \"inspect\",\n    \"drawInspect\",\n]);\n// TODO: escape\n// eslint-disable-next-line\nexport const TEXT_STYLE_RE = /\\[(?<style>\\w+)\\](?<text>.*?)\\[\\/\\k<style>\\]/g;\nexport const DEF_OFFSCREEN_DIS = 200;\n// maximum y velocity with body()\nexport const DEF_JUMP_FORCE = 640;\nexport const MAX_VEL = 65536;\n", "import { Vec2 } from \"../math\";\nimport { BinaryHeap } from \"../utils\";\n\nexport interface Graph {\n    /* Returns the reachable neighbours of this location */\n    getNeighbours(node: number): number[];\n    /* Returns the cost to go from the node to its neighbor */\n    getCost(node: number, neighbor: number): number;\n    /* Returns the cost to go from the node to the goal */\n    getHeuristic(node: number, goal: number): number;\n    /* Returns the path as locations */\n    getPath(from: number, to: number): number[];\n    /* Returns the path as waypoints */\n    getWaypointPath(\n        from: Vec2,\n        to: Vec2,\n        opt: any,\n    ): Vec2[];\n}\n\nfunction buildPath(start: number, goal: number, cameFrom: Map<number, number>) {\n    const path = [];\n    let node = goal;\n    path.push(node);\n    while (node !== start) {\n        node = cameFrom.get(node);\n        if (node == undefined) return null;\n        path.push(node);\n    }\n    return path.reverse();\n}\n\nexport function breadthFirstSearch(\n    graph: Graph,\n    start: number,\n    goal: number,\n) {\n    let frontier = [];\n    frontier.push(start);\n\n    let cameFrom = new Map<number, number>();\n    cameFrom.set(start, start);\n\n    while (frontier.length !== 0) {\n        let current = frontier.pop();\n\n        if (current === goal) {\n            break;\n        }\n\n        const neighbours = graph.getNeighbours(current);\n        for (let next of neighbours) {\n            if (!cameFrom.get(next)) {\n                frontier.push(next);\n                cameFrom.set(next, current);\n            }\n        }\n    }\n    return buildPath(start, goal, cameFrom);\n}\n\nexport function dijkstraSearch(\n    graph: Graph,\n    start: number,\n    goal: number,\n) {\n    interface CostNode {\n        cost: number;\n        node: number;\n    }\n    const frontier = new BinaryHeap<CostNode>();\n    frontier.insert({ cost: 0, node: start });\n\n    const cameFrom = new Map<number, number>();\n    cameFrom.set(start, start);\n    const costSoFar = new Map<number, number>();\n    costSoFar.set(start, 0);\n\n    while (frontier.length !== 0) {\n        const current = frontier.remove()?.node;\n\n        if (current === goal) {\n            break;\n        }\n\n        const neighbours = graph.getNeighbours(current);\n        for (let next of neighbours) {\n            const newCost = (costSoFar.get(current) || 0)\n                + graph.getCost(current, next);\n            if (\n                !costSoFar.has(next)\n                || newCost < costSoFar.get(next)\n            ) {\n                costSoFar.set(next, newCost);\n                frontier.insert({ cost: newCost, node: next });\n                cameFrom.set(next, current);\n            }\n        }\n    }\n\n    return buildPath(start, goal, cameFrom);\n}\n\nexport function aStarSearch(\n    graph: Graph,\n    start: number,\n    goal: number,\n): number[] {\n    interface CostNode {\n        cost: number;\n        node: number;\n    }\n    const frontier = new BinaryHeap<CostNode>((a, b) => a.cost < b.cost);\n    frontier.insert({ cost: 0, node: start });\n\n    const cameFrom = new Map<number, number>();\n    cameFrom.set(start, start);\n    const costSoFar = new Map<number, number>();\n    costSoFar.set(start, 0);\n\n    while (frontier.length !== 0) {\n        const current = frontier.remove()?.node;\n\n        if (current === goal) {\n            break;\n        }\n\n        const neighbours = graph.getNeighbours(current);\n        for (let next of neighbours) {\n            const newCost = (costSoFar.get(current) || 0)\n                + graph.getCost(current, next) + graph.getHeuristic(next, goal);\n            if (\n                !costSoFar.has(next)\n                || newCost < costSoFar.get(next)\n            ) {\n                costSoFar.set(next, newCost);\n                frontier.insert({ cost: newCost, node: next });\n                cameFrom.set(next, current);\n            }\n        }\n    }\n\n    return buildPath(start, goal, cameFrom);\n}\n", "import { Vec2, vec2 } from \"../math\";\nimport { aStarSearch, type Graph } from \"./navigation\";\n\nclass NavEdge {\n    a: Vec2;\n    b: Vec2;\n    polygon: WeakRef<NavPolygon>;\n\n    constructor(a: Vec2, b: Vec2, polygon: NavPolygon) {\n        this.a = a;\n        this.b = b;\n        this.polygon = new WeakRef(polygon);\n    }\n\n    isLeft(x: number, y: number) {\n        return ((this.b.x - this.a.x) * (y - this.a.y)\n            - (x - this.a.x) * (this.b.y - this.a.y));\n    }\n\n    get middle() {\n        return this.a.add(this.b).scale(0.5);\n    }\n}\n\nclass NavPolygon {\n    private _edges: NavEdge[];\n    private _centroid: Vec2;\n    private _id: number;\n\n    constructor(id: number) {\n        this._id = id;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    set edges(edges: NavEdge[]) {\n        this._edges = edges;\n        let centerX = 0;\n        let centerY = 0;\n        let area = 0;\n        for (let edge of this._edges) {\n            edge.polygon = new WeakRef(this);\n            const cross = edge.a.x * edge.b.y - edge.a.y * edge.b.x;\n            centerX += (edge.a.x + edge.b.x) * cross;\n            centerY += (edge.a.y + edge.b.y) * cross;\n            area += cross;\n        }\n        area /= 2;\n        this._centroid = vec2(centerX / (6 * area), centerY / (6 * area));\n    }\n\n    get edges(): NavEdge[] {\n        return this._edges;\n    }\n\n    get centroid(): Vec2 {\n        return this._centroid;\n    }\n\n    // https://web.archive.org/web/20130126163405/http://geomalgorithms.com/a03-_inclusion.html\n    /*contains(x: number, y: number) {\n        let wn = 0;\n\n        for (let edge of this._edges) {\n            if (edge.a.y <= y) {\n                if (edge.b.y > y) {\n                    if (edge.isLeft(x, y) > 0) {\n                        ++wn;\n                    }\n                }\n            } else {\n                if (edge.b.y <= y) {\n                    if (edge.isLeft(x, y) < 0) {\n                        --wn;\n                    }\n                }\n            }\n        }\n        return wn;\n    }*/\n\n    contains(p: Vec2) {\n        let c = false;\n\n        for (const e of this.edges) {\n            if (\n                ((e.b.y > p.y) != (e.a.y > p.y))\n                && (p.x\n                    < (e.a.x - e.b.x) * (p.y - e.b.y) / (e.a.y - e.b.y) + e.b.x)\n            ) {\n                c = !c;\n            }\n        }\n\n        return c;\n    }\n}\n\nexport class NavMesh implements Graph {\n    private _polygons: NavPolygon[];\n    private _pointCache: { [key: string]: Vec2 };\n    private _edgeCache: { [key: string]: NavEdge };\n\n    constructor() {\n        this._polygons = [];\n        this._pointCache = {};\n        this._edgeCache = {};\n    }\n\n    private _addPoint(p: Vec2) {\n        let point = this._pointCache[`${p.x}_${p.y}`];\n        if (point) {\n            return point;\n        }\n        point = p.clone();\n        this._pointCache[`${p.x}_${p.y}`] = point;\n        return point;\n    }\n\n    private _addEdge(edge: NavEdge): NavEdge {\n        const key = `${edge.a.x}_${edge.a.y}-${edge.b.x}_${edge.b.y}`;\n        this._edgeCache[key] = edge;\n        return edge;\n    }\n\n    private _findEdge(a: Vec2, b: Vec2) {\n        const key = `${a.x}_${a.y}-${b.x}_${b.y}`;\n        return this._edgeCache[key];\n    }\n\n    private _findCommonEdge(a: NavPolygon, b: NavPolygon): NavEdge | null {\n        for (const edge of a.edges) {\n            const e = this._findEdge(edge.b, edge.a);\n            if (e && e.polygon.deref().id === b.id) {\n                return e;\n            }\n        }\n        return null;\n    }\n\n    addPolygon(vertices: Vec2[]) {\n        const polygon = new NavPolygon(this._polygons.length);\n        const edges = vertices.map((v, index) =>\n            new NavEdge(v, vertices[(index + 1) % vertices.length], polygon)\n        );\n        polygon.edges = edges;\n        this._polygons.push(polygon);\n        for (const edge of polygon.edges) {\n            this._addEdge(edge);\n        }\n        return polygon;\n    }\n\n    addRect(pos: Vec2, size: Vec2) {\n        const a = this._addPoint(pos);\n        const b = this._addPoint(pos.add(size.x, 0));\n        const c = this._addPoint(pos.add(size));\n        const d = this._addPoint(pos.add(0, size.y));\n        return this.addPolygon([a, b, c, d]);\n    }\n\n    private _getLocation(p: Vec2): NavPolygon | null {\n        for (let polygon of this._polygons) {\n            if (polygon.contains(p)) {\n                return polygon;\n            }\n        }\n        return null;\n    }\n\n    getNeighbours(index: number): number[] {\n        const neighbours = [];\n        for (let edge of this._polygons[index].edges) {\n            // Lookup polygons with reverse edge\n            const pairEdge = this._findEdge(edge.b, edge.a);\n            if (pairEdge) {\n                const pairPolygon = pairEdge.polygon.deref();\n                if (pairPolygon) {\n                    neighbours.push(pairPolygon.id);\n                }\n            }\n        }\n        return neighbours;\n    }\n\n    getCost(a: number, b: number) {\n        return 1;\n    }\n\n    getHeuristic(indexA: number, indexB: number) {\n        const a = this._polygons[indexA];\n        const b = this._polygons[indexB];\n        const x = a.centroid.x - b.centroid.x;\n        const y = a.centroid.y - b.centroid.y;\n        return Math.sqrt(x * x + y * y);\n    }\n\n    getPath(start: number, goal: number): number[] {\n        // Points are not within the navigation mesh\n        if (start === undefined || goal === undefined) {\n            return [];\n        }\n\n        // Same polygon\n        if (start === goal) {\n            return [start, goal];\n        }\n\n        return aStarSearch(this, start, goal);\n    }\n\n    getWaypointPath(start: Vec2, goal: Vec2, opt: any): Vec2[] {\n        const type = opt?.type || \"centroids\";\n\n        const startPolygon = this._getLocation(start);\n        const goalPolygon = this._getLocation(goal);\n\n        // Points are not within the navigation mesh\n        if (startPolygon === undefined || goalPolygon === undefined) {\n            return [];\n        }\n\n        const path = this.getPath(startPolygon.id, goalPolygon.id);\n\n        // No path was found\n        if (!path) {\n            return [];\n        }\n\n        if (type === \"edges\") {\n            const edges = [];\n            for (let i = 1; i < path.length; i++) {\n                const p1 = this._polygons[path[i - 1]];\n                const p2 = this._polygons[path[i]];\n                const edge = this._findCommonEdge(p1, p2);\n                edges.push(\n                    edge.middle.add(\n                        p2.centroid.sub(edge.middle).unit().scale(4),\n                    ),\n                );\n            }\n            return [start, ...edges, goal];\n        } else { // type === \"centroids\"\n            return [\n                start,\n                ...path.slice(1, -1).map(index =>\n                    this._polygons[index].centroid\n                ),\n                goal,\n            ];\n        }\n    }\n}\n", "// https://easings.net/\nconst c1 = 1.70158;\nconst c2 = c1 * 1.525;\nconst c3 = c1 + 1;\nconst c4 = (2 * Math.PI) / 3;\nconst c5 = (2 * Math.PI) / 4.5;\n\nconst easings = {\n    linear: (x) => x,\n    easeInSine: (x) => 1 - Math.cos((x * Math.PI) / 2),\n    easeOutSine: (x) => Math.sin((x * Math.PI) / 2),\n    easeInOutSine: (x) => -(Math.cos(Math.PI * x) - 1) / 2,\n    easeInQuad: (x) => x * x,\n    easeOutQuad: (x) => 1 - (1 - x) * (1 - x),\n    easeInOutQuad: (x) => x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\n    easeInCubic: (x) => x * x * x,\n    easeOutCubic: (x) => 1 - Math.pow(1 - x, 3),\n    easeInOutCubic: (x) =>\n        x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n    easeInQuart: (x) => x * x * x * x,\n    easeOutQuart: (x) => 1 - Math.pow(1 - x, 4),\n    easeInOutQuart: (x) =>\n        x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n    easeInQuint: (x) => x * x * x * x * x,\n    easeOutQuint: (x) => 1 - Math.pow(1 - x, 5),\n    easeInOutQuint: (x) =>\n        x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\n    easeInExpo: (x) => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\n    easeOutExpo: (x) => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\n    easeInOutExpo: (x) => {\n        return x === 0\n            ? 0\n            : x === 1\n            ? 1\n            : x < 0.5\n            ? Math.pow(2, 20 * x - 10) / 2\n            : (2 - Math.pow(2, -20 * x + 10)) / 2;\n    },\n    easeInCirc: (x) => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n    easeOutCirc: (x) => Math.sqrt(1 - Math.pow(x - 1, 2)),\n    easeInOutCirc: (x) => {\n        return x < 0.5\n            ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n            : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2;\n    },\n    easeInBack: (x) => c3 * x * x * x - c1 * x * x,\n    easeOutBack: (x) => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\n    easeInOutBack: (x) => {\n        return x < 0.5\n            ? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n            : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2;\n    },\n    easeInElastic: (x) => {\n        return x === 0\n            ? 0\n            : x === 1\n            ? 1\n            : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4);\n    },\n    easeOutElastic: (x) => {\n        return x === 0\n            ? 0\n            : x === 1\n            ? 1\n            : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1;\n    },\n    easeInOutElastic: (x) => {\n        return x === 0\n            ? 0\n            : x === 1\n            ? 1\n            : x < 0.5\n            ? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n            : (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n                + 1;\n    },\n    easeInBounce: (x) => 1 - easings.easeOutBounce(1 - x),\n    easeOutBounce: (x) => {\n        const n1 = 7.5625;\n        const d1 = 2.75;\n        if (x < 1 / d1) {\n            return n1 * x * x;\n        } else if (x < 2 / d1) {\n            return n1 * (x -= 1.5 / d1) * x + 0.75;\n        } else if (x < 2.5 / d1) {\n            return n1 * (x -= 2.25 / d1) * x + 0.9375;\n        } else {\n            return n1 * (x -= 2.625 / d1) * x + 0.984375;\n        }\n    },\n    easeInOutBounce: (x) => {\n        return x < 0.5\n            ? (1 - easings.easeOutBounce(1 - 2 * x)) / 2\n            : (1 + easings.easeOutBounce(2 * x - 1)) / 2;\n    },\n};\n\nexport default easings;\n", "import type { ImageSource } from \"./types\";\n\nimport { type GfxCtx, Texture } from \"./gfx\";\n\nimport { Quad, Vec2 } from \"./math\";\n\nexport default class TexPacker {\n    private textures: Texture[] = [];\n    private bigTextures: Texture[] = [];\n    private canvas: HTMLCanvasElement;\n    private c2d: CanvasRenderingContext2D;\n    private x: number = 0;\n    private y: number = 0;\n    private curHeight: number = 0;\n    private gfx: GfxCtx;\n    constructor(gfx: GfxCtx, w: number, h: number) {\n        this.gfx = gfx;\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.width = w;\n        this.canvas.height = h;\n        this.textures = [Texture.fromImage(gfx, this.canvas)];\n        this.bigTextures = [];\n        this.c2d = this.canvas.getContext(\"2d\");\n    }\n    add(img: ImageSource): [Texture, Quad] {\n        if (img.width > this.canvas.width || img.height > this.canvas.height) {\n            const tex = Texture.fromImage(this.gfx, img);\n            this.bigTextures.push(tex);\n            return [tex, new Quad(0, 0, 1, 1)];\n        }\n        // next row\n        if (this.x + img.width > this.canvas.width) {\n            this.x = 0;\n            this.y += this.curHeight;\n            this.curHeight = 0;\n        }\n        // next texture\n        if (this.y + img.height > this.canvas.height) {\n            this.c2d.clearRect(0, 0, this.canvas.width, this.canvas.height);\n            this.textures.push(Texture.fromImage(this.gfx, this.canvas));\n            this.x = 0;\n            this.y = 0;\n            this.curHeight = 0;\n        }\n        const curTex = this.textures[this.textures.length - 1];\n        const pos = new Vec2(this.x, this.y);\n        this.x += img.width;\n        if (img.height > this.curHeight) {\n            this.curHeight = img.height;\n        }\n        if (img instanceof ImageData) {\n            this.c2d.putImageData(img, pos.x, pos.y);\n        } else {\n            this.c2d.drawImage(img, pos.x, pos.y);\n        }\n        curTex.update(this.canvas);\n        return [\n            curTex,\n            new Quad(\n                pos.x / this.canvas.width,\n                pos.y / this.canvas.height,\n                img.width / this.canvas.width,\n                img.height / this.canvas.height,\n            ),\n        ];\n    }\n    free() {\n        for (const tex of this.textures) {\n            tex.free();\n        }\n        for (const tex of this.bigTextures) {\n            tex.free();\n        }\n    }\n}\n", "import {\n    DEF_FONT_FILTER,\n    DEF_TEXT_CACHE_SIZE,\n    MAX_TEXT_CACHE_SIZE,\n} from \"./constants\";\nimport { rgb } from \"./math\";\nimport type { LoadFontOpt, Outline, TexFilter } from \"./types\";\n\nexport class FontData {\n    fontface: FontFace;\n    filter: TexFilter = DEF_FONT_FILTER;\n    outline: Outline | null = null;\n    size: number = DEF_TEXT_CACHE_SIZE;\n    constructor(face: FontFace, opt: LoadFontOpt = {}) {\n        this.fontface = face;\n        this.filter = opt.filter ?? DEF_FONT_FILTER;\n        this.size = opt.size ?? DEF_TEXT_CACHE_SIZE;\n        if (this.size > MAX_TEXT_CACHE_SIZE) {\n            throw new Error(`Max font size: ${MAX_TEXT_CACHE_SIZE}`);\n        }\n        if (opt.outline) {\n            this.outline = {\n                width: 1,\n                color: rgb(0, 0, 0),\n            };\n            if (typeof opt.outline === \"number\") {\n                this.outline.width = opt.outline;\n            } else if (typeof opt.outline === \"object\") {\n                if (opt.outline.width) {\n                    this.outline.width = opt.outline.width;\n                }\n                if (opt.outline.color) {\n                    this.outline.color = opt.outline.color;\n                }\n            }\n        }\n    }\n}\n", "import { getKaboomContext } from \"../../kaboom\";\nimport { Rect, Vec2 } from \"../../math\";\nimport type { Comp, GameObj } from \"../../types\";\nimport type { AnchorComp } from \"../transform/anchor\";\nimport type { outline } from \"./outline\";\n\n/**\n * The {@link circle `circle()`} component.\n *\n * @group Component Types\n */\nexport interface CircleComp extends Comp {\n    draw: Comp[\"draw\"];\n    /** Radius of circle. */\n    radius: number;\n    /**\n     * Render area of the circle.\n     *\n     * @since v3000.0\n     */\n    renderArea(): Rect;\n}\n\n/**\n * Options for the {@link circle `circle()``} component.\n *\n * @group Component Types\n */\nexport interface CircleCompOpt {\n    /**\n     * If fill the circle (useful if you only want to render outline with\n     * {@link outline `outline()`} component).\n     */\n    fill?: boolean;\n}\n\nexport function circle(radius: number, opt: CircleCompOpt = {}): CircleComp {\n    const k = getKaboomContext(this);\n    const { getRenderProps } = k._k;\n\n    return {\n        id: \"circle\",\n        radius: radius,\n        draw(this: GameObj<CircleComp>) {\n            k.drawCircle(Object.assign(getRenderProps(this), {\n                radius: this.radius,\n                fill: opt.fill,\n            }));\n        },\n        renderArea(this: GameObj<AnchorComp | CircleComp>) {\n            return new Rect(\n                new Vec2(this.anchor ? 0 : -this.radius),\n                this.radius * 2,\n                this.radius * 2,\n            );\n        },\n        inspect() {\n            return `radius: ${Math.ceil(this.radius)}`;\n        },\n    };\n}\n", "import { type Color, rgb } from \"../../math\";\nimport type { Comp } from \"../../types\";\n\n/**\n * The {@link color `color()`} component.\n *\n * @group Component Types\n */\nexport interface ColorComp extends Comp {\n    color: Color;\n}\n\nexport function color(...args): ColorComp {\n    return {\n        id: \"color\",\n        color: rgb(...args),\n        inspect() {\n            return `color: ${this.color.toString()}`;\n        },\n    };\n}\n", "import type { FrameBuffer } from \"../../gfx\";\nimport type { GameObj } from \"../../types\";\n\nexport function drawon(c: FrameBuffer) {\n    return {\n        add(this: GameObj) {\n            this.canvas = c;\n        },\n    };\n}\n", "import { getKaboomContext } from \"../../kaboom\";\nimport type { Comp, GameObj } from \"../../types\";\nimport type { OpacityComp } from \"./opacity\";\n\nexport function fadeIn(time: number = 1): Comp {\n    const k = getKaboomContext(this);\n\n    let finalOpacity: number;\n    let t = 0;\n    let done = false;\n\n    return {\n        require: [\"opacity\"],\n        add(this: GameObj<OpacityComp>) {\n            finalOpacity = this.opacity;\n            this.opacity = 0;\n        },\n        update(this: GameObj<OpacityComp>) {\n            if (done) return;\n            t += k.dt();\n            this.opacity = k.map(t, 0, time, 0, finalOpacity);\n\n            if (t >= time) {\n                this.opacity = finalOpacity;\n                done = true;\n            }\n        },\n    };\n}\n", "import type { Comp, Mask } from \"../../types\";\n\n/**\n * The {@link mask `mask()`} component.\n *\n * @group Component Types\n */\nexport interface MaskComp extends Comp {\n    mask: Mask;\n}\n\nexport function mask(m: Mask = \"intersect\"): MaskComp {\n    return {\n        id: \"mask\",\n        mask: m,\n    };\n}\n", "import { getKaboomContext } from \"../../kaboom\";\nimport type { Comp, EaseFunc, TweenController } from \"../../types\";\n\n/**\n * The {@link opacity `opacity()`} component.\n *\n * @group Component Types\n */\nexport interface OpacityComp extends Comp {\n    /** Opacity of the current object. */\n    opacity: number;\n    /** Fade in at the start. */\n    fadeIn(time?: number, easeFunc?: EaseFunc): TweenController;\n    /** Fade out at the start. */\n    fadeOut(time?: number, easeFunc?: EaseFunc): TweenController;\n}\n\nexport function opacity(a: number): OpacityComp {\n    const k = getKaboomContext(this);\n    const { toFixed } = k._k;\n\n    return {\n        id: \"opacity\",\n        opacity: a ?? 1,\n        fadeIn(time = 1, easeFunc = k.easings.linear): TweenController {\n            return k.tween(\n                0,\n                this.opacity,\n                time,\n                (a) => this.opacity = a,\n                easeFunc,\n            );\n        },\n        fadeOut(time = 1, easeFunc = k.easings.linear): TweenController {\n            return k.tween(\n                this.opacity,\n                0,\n                time,\n                (a) => this.opacity = a,\n                easeFunc,\n            );\n        },\n        inspect() {\n            return `opacity: ${toFixed(this.opacity, 1)}`;\n        },\n    };\n}\n", "import { Color, rgb } from \"../../math\";\nimport type { Comp, LineCap, LineJoin, Outline } from \"../../types\";\n\n/**\n * The {@link outline `outline()`} component.\n *\n * @group Component Types\n */\nexport interface OutlineComp extends Comp {\n    outline: Outline;\n}\n\nexport function outline(\n    width: number = 1,\n    color: Color = rgb(0, 0, 0),\n    opacity: number = 1,\n    join: LineJoin = \"miter\",\n    miterLimit: number = 10,\n    cap: LineCap = \"butt\",\n): OutlineComp {\n    return {\n        id: \"outline\",\n        outline: {\n            width,\n            color,\n            opacity,\n            join,\n            miterLimit,\n            cap,\n        },\n        inspect() {\n            return `outline: ${this.outline.width}px, ${this.outline.color}`;\n        },\n    };\n}\n", "import type { Texture } from \"../../gfx\";\nimport { getKaboomContext } from \"../../kaboom\";\nimport { Color, lerp, map, Quad, Vec2, vec2 } from \"../../math\";\nimport type { Comp, ShapeType, Vertex } from \"../../types\";\nimport { KEvent } from \"../../utils\";\n\nclass Particle {\n    pos: Vec2;\n    vel: Vec2;\n    acc: Vec2;\n    angle: number;\n    angularVelocity: number;\n    damping: number;\n    t: number;\n    lt: number | null;\n    gc: boolean;\n\n    constructor() {\n        this.t = 0;\n        this.gc = true;\n    }\n\n    get progress() {\n        return this.lt ? this.t / this.lt : this.t;\n    }\n}\n\nexport type EmitterOpt = {\n    /*\n     * Shape of the emitter. If given, particles spwan within this shape.\n     */\n    shape?: ShapeType;\n    /*\n     * Lifetime of the emitter.\n     */\n    lifetime?: number;\n    /*\n     * Rate of emission in particles per second if the emitter should emit out of itself.\n     */\n    rate?: number;\n    /*\n     * Direction of emission.\n     */\n    direction: number;\n    /*\n     * Spread (cone) of emission around the direction.\n     */\n    spread: number;\n};\n\nexport type ParticlesOpt = {\n    /*\n     * Maximum number of simultaneously rendered particles.\n     */\n    max: number;\n    /*\n     * Minimum and maximum lifetime of a particle in seconds.\n     */\n    lifeTime?: [number, number];\n    /*\n     * Minimum and maximum speed of a particle in pixels per second.\n     */\n    speed?: [number, number];\n    /*\n     * Minimum and maximum acceleration of a particle in pixels per second^2.\n     */\n    acceleration?: [Vec2, Vec2];\n    /*\n     * Minimum and maximum damping of a particle.\n     */\n    damping?: [number, number];\n    /*\n     * Minimum and maximum start angle of a particle.\n     */\n    angle?: [number, number];\n    /*\n     * Minimum and maximum angular velocity of a particle.\n     */\n    angularVelocity?: [number, number];\n    /*\n     * Scale from start to end for a particle.\n     */\n    scales?: number[];\n    /*\n     * Colors from start to end for a particle.\n     */\n    colors?: Color[];\n    /*\n     * Opacity from start to end for a particle.\n     */\n    opacities?: number[];\n    /*\n     * Quads from start to end for a particle.\n     */\n    quads?: Quad[];\n    /*\n     * Texture used for the particle.\n     */\n    texture?: Texture;\n};\n\nexport interface ParticlesComp extends Comp {\n    /*\n     * Emit a number of particles\n     */\n    emit(n: number): void;\n    /*\n     * Called when the emitter expires\n     */\n    onEnd(cb: () => void): void;\n}\n\nexport function particles(popt: ParticlesOpt, eopt: EmitterOpt): ParticlesComp {\n    const k = getKaboomContext(this);\n\n    let emitterLifetime = eopt.lifetime;\n\n    const particles: Particle[] = [];\n    const colors = popt.colors || [k.WHITE];\n    const opacities = popt.opacities || [1];\n    const quads = popt.quads || [new Quad(0, 0, 1, 1)];\n    const scales = popt.scales || [1];\n    const lifetime = popt.lifeTime;\n    const direction = eopt.direction;\n    const spread = eopt.spread;\n    const speed = popt.speed || [0, 0];\n    const angleRange = popt.angle || [0, 0];\n    const angularVelocityRange = popt.angularVelocity || [0, 0];\n    const accelerationRange = popt.acceleration || [vec2(0), vec2(0)];\n    const dampingRange = popt.damping || [0, 0];\n\n    const indices: number[] = [];\n    const vertices: Vertex[] = new Array<Vertex>(popt.max);\n    let count = 0;\n    let time = 0;\n\n    for (let i = 0; i < popt.max; i++) {\n        indices[i * 6 + 0] = i * 4 + 0;\n        indices[i * 6 + 1] = i * 4 + 1;\n        indices[i * 6 + 2] = i * 4 + 3;\n        indices[i * 6 + 3] = i * 4 + 1;\n        indices[i * 6 + 4] = i * 4 + 2;\n        indices[i * 6 + 5] = i * 4 + 3;\n\n        for (let j = 0; j < 4; j++) {\n            vertices[i * 4 + j] = {\n                pos: new Vec2(0, 0),\n                uv: new Vec2(0, 0),\n                color: k.rgb(255, 255, 255),\n                opacity: 1,\n            };\n        }\n        particles[i] = new Particle()\n    }\n\n    const onEndEvents = new KEvent();\n\n    function nextFree(index: number = 0): number | null {\n        while (index < popt.max) {\n            if (particles[index].gc) {\n                return index\n            }\n            index++\n        }\n        return null\n    }\n\n    return {\n        id: \"particles\",\n        emit(n: number) {\n            let index = 0\n            for (let i = 0; i < n; i++) {\n                index = nextFree(index)\n                if (index == null) { return }\n\n                const velocityAngle = k.rand(\n                    direction - spread,\n                    direction + spread,\n                );\n                const vel = Vec2.fromAngle(velocityAngle).scale(\n                    k.rand(speed[0], speed[1]),\n                );\n                const angle = k.rand(angleRange[0], angleRange[1]);\n                const angularVelocity = k.rand(\n                    angularVelocityRange[0],\n                    angularVelocityRange[1],\n                );\n                const acceleration = vec2(\n                    k.rand(accelerationRange[0].x, accelerationRange[1].x),\n                    k.rand(accelerationRange[0].y, accelerationRange[1].y)\n                );\n                const damping = k.rand(\n                    dampingRange[0],\n                    dampingRange[1],\n                );\n                const lt = lifetime ? k.rand(lifetime[0], lifetime[1]) : null;\n                const pos = eopt.shape\n                    ? eopt.shape.random()\n                    : vec2();\n\n                const p = particles[index]\n                p.lt = lt\n                p.pos = pos\n                p.vel = vel\n                p.acc = acceleration\n                p.angle = angle\n                p.angularVelocity = angularVelocity\n                p.damping = damping\n                p.angularVelocity = angularVelocity\n                p.gc = false\n            }\n            count += n;\n        },\n        update() {\n            if (eopt.lifetime <= 0) {\n                return;\n            }\n            const DT = k.dt();\n            // Update all particles\n            for (const p of particles) {\n                if (p.gc) {\n                    continue;\n                }\n                p.t += DT;\n                if (p.lt && p.t >= p.lt) {\n                    p.gc = true;\n                    count--;\n                    continue;\n                }\n                p.vel = p.vel.add(p.acc.scale(DT)).scale(1 - p.damping * DT);\n                p.pos = p.pos.add(p.vel.scale(DT));\n                p.angle += p.angularVelocity * DT;\n            }\n            // Check if the emitter has a limited lifetime\n            if (emitterLifetime !== undefined) {\n                emitterLifetime -= DT;\n                if (emitterLifetime <= 0) {\n                    onEndEvents.trigger();\n                }\n            }\n            // Create new particles according to accumulated time\n            time += DT;\n            while (\n                count < popt.max && eopt.rate\n                && time > eopt.rate\n            ) {\n                this.emit(1);\n                count++;\n                time -= eopt.rate;\n            }\n        },\n        draw() {\n            if (emitterLifetime <= 0) {\n                return;\n            }\n\n            // Draw active particles\n            for (let i = 0; i < particles.length; i++) {\n                const p = particles[i];\n                if (p.gc) {\n                    continue;\n                }\n                const progress = p.progress;\n                const colorIndex = Math.floor(p.progress * colors.length);\n                const color = colorIndex < colors.length - 1\n                    ? lerp(\n                        colors[colorIndex],\n                        colors[colorIndex + 1],\n                        map(\n                            progress,\n                            colorIndex / colors.length,\n                            (colorIndex + 1) / colors.length,\n                            0,\n                            1,\n                        ),\n                    )\n                    : colors[colorIndex];\n                const opacityIndex = Math.floor(p.progress * opacities.length);\n                const opacity = opacityIndex < opacities.length - 1\n                    ? lerp(\n                        opacities[opacityIndex],\n                        opacities[opacityIndex + 1],\n                        map(\n                            progress,\n                            opacityIndex / opacities.length,\n                            (opacityIndex + 1) / opacities.length,\n                            0,\n                            1,\n                        ),\n                    )\n                    : opacities[opacityIndex];\n\n                const quadIndex = Math.floor(p.progress * quads.length);\n                const quad = quads[quadIndex];\n                const scaleIndex = Math.floor(p.progress * scales.length);\n                const scale = scales[scaleIndex];\n                const c = Math.cos(p.angle * Math.PI / 180);\n                const s = Math.sin(p.angle * Math.PI / 180);\n\n                const hw = (popt.texture ? popt.texture.width : 10) * quad.w / 2;\n                const hh = (popt.texture ? popt.texture.height : 10) * quad.h / 2;\n\n                let j = i * 4;\n                // Left top\n                let v = vertices[j];\n                v.pos.x = p.pos.x + (-hw) * scale * c - (-hh) * scale * s;\n                v.pos.y = p.pos.y + (-hw) * scale * s + (-hh) * scale * c;\n                v.uv.x = quad.x;\n                v.uv.y = quad.y;\n                v.color.r = color.r;\n                v.color.g = color.g;\n                v.color.b = color.b;\n                v.opacity = opacity;\n                // Right top\n                v = vertices[j + 1];\n                v.pos.x = p.pos.x + hw * scale * c - (-hh) * scale * s;\n                v.pos.y = p.pos.y + hw * scale * s + (-hh) * scale * c;\n                v.uv.x = quad.x + quad.w;\n                v.uv.y = quad.y;\n                v.color.r = color.r;\n                v.color.g = color.g;\n                v.color.b = color.b;\n                v.opacity = opacity;\n                // Right bottom\n                v = vertices[j + 2];\n                v.pos.x = p.pos.x + hw * scale * c - hh * scale * s;\n                v.pos.y = p.pos.y + hw * scale * s + hh * scale * c;\n                v.uv.x = quad.x + quad.w;\n                v.uv.y = quad.y + quad.h;\n                v.color.r = color.r;\n                v.color.g = color.g;\n                v.color.b = color.b;\n                v.opacity = opacity;\n                // Left bottom\n                v = vertices[j + 3];\n                v.pos.x = p.pos.x + (-hw) * scale * c - hh * scale * s;\n                v.pos.y = p.pos.y + (-hw) * scale * s + hh * scale * c;\n                v.uv.x = quad.x;\n                v.uv.y = quad.y + quad.h;\n                v.color.r = color.r;\n                v.color.g = color.g;\n                v.color.b = color.b;\n                v.opacity = opacity;\n            }\n\n            k._k.drawRaw(\n                vertices,\n                indices,\n                this.fixed,\n                popt.texture,\n                this.shader,\n                this.uniform,\n            );\n        },\n        onEnd(action: () => void) {\n            return onEndEvents.add(action);\n        },\n        inspect() {\n            return `count: ${count}/${popt.max}`;\n        },\n    };\n}\n", "import type { Texture } from \"../../gfx\";\nimport { getKaboomContext } from \"../../kaboom\";\nimport { type Color, Polygon } from \"../../math\";\nimport type { Comp, DrawPolygonOpt, GameObj, Vec2 } from \"../../types\";\n\n/**\n * The {@link polygon `polygon()`} component.\n *\n * @since v3001.0\n * @group Component Types\n */\nexport interface PolygonComp extends Comp {\n    draw: Comp[\"draw\"];\n    /**\n     * Points in the polygon.\n     */\n    pts: Vec2[];\n    /**\n     * The radius of each corner.\n     */\n    radius?: number | number[];\n    /**\n     * The color of each vertex.\n     */\n    colors?: Color[];\n    /**\n     * The uv of each vertex.\n     *\n     * @since v3001.0\n     */\n    uv?: Vec2[];\n    /**\n     * The texture used when uv coordinates are present.\n     *\n     * @since v3001.0\n     */\n    tex?: Texture;\n    renderArea(): Polygon;\n}\n\n/**\n * Options for the {@link polygon `polygon()`} component.\n *\n * @group Component Types\n */\nexport type PolygonCompOpt = Omit<DrawPolygonOpt, \"pts\">;\n\nexport function polygon(pts: Vec2[], opt: PolygonCompOpt = {}): PolygonComp {\n    const k = getKaboomContext(this);\n    const { getRenderProps } = k._k;\n\n    if (pts.length < 3) {\n        throw new Error(\n            `Polygon's need more than two points, ${pts.length} points provided`,\n        );\n    }\n    return {\n        id: \"polygon\",\n        pts,\n        colors: opt.colors,\n        uv: opt.uv,\n        tex: opt.tex,\n        radius: opt.radius,\n        draw(this: GameObj<PolygonComp>) {\n            k.drawPolygon(Object.assign(getRenderProps(this), {\n                pts: this.pts,\n                colors: this.colors,\n                uv: this.uv,\n                tex: this.tex,\n                radius: this.radius,\n                fill: opt.fill,\n                triangulate: opt.triangulate,\n            }));\n        },\n        renderArea(this: GameObj<PolygonComp>) {\n            return new Polygon(this.pts);\n        },\n        inspect() {\n            return `polygon: ${this.pts.map(p => `[${p.x},${p.y}]`).join(\",\")}`;\n        },\n    };\n}\n", "import { getKaboomContext } from \"../../kaboom\";\nimport type { RaycastResult, Vec2 } from \"../../math\";\n\n// this is not a component lol\nexport function raycast(origin: Vec2, direction: Vec2, exclude?: string[]) {\n    const k = getKaboomContext(this);\n    let minHit: RaycastResult;\n\n    const shapes = k.get(\"area\");\n\n    shapes.forEach(s => {\n        if (exclude && exclude.some(tag => s.is(tag))) return;\n        const shape = s.worldArea();\n        const hit = shape.raycast(origin, direction);\n        if (hit) {\n            if (minHit) {\n                if (hit.fraction < minHit.fraction) {\n                    minHit = hit;\n                    minHit.object = s;\n                }\n            } else {\n                minHit = hit;\n                minHit.object = s;\n            }\n        }\n    });\n    return minHit;\n}\n", "import { getKaboomContext } from \"../../kaboom\";\nimport { Rect, vec2 } from \"../../math\";\nimport type { Comp, GameObj } from \"../../types\";\n\n/**\n * The {@link rect `rect()`} component.\n *\n * @group Component Types\n */\nexport interface RectComp extends Comp {\n    draw: Comp[\"draw\"];\n    /**\n     * Width of rectangle.\n     */\n    width: number;\n    /**\n     * Height of rectangle.\n     */\n    height: number;\n    /**\n     * The radius of each corner.\n     */\n    radius?: number;\n    /**\n     * @since v3000.0\n     */\n    renderArea(): Rect;\n}\n\n/**\n * Options for the {@link rect `rect()`} component.\n *\n * @group Component Types\n */\nexport interface RectCompOpt {\n    /**\n     * Radius of the rectangle corners.\n     */\n    radius?: number;\n    /**\n     * If fill the rectangle (useful if you only want to render outline with outline() component).\n     */\n    fill?: boolean;\n}\n\nexport function rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n    const k = getKaboomContext(this);\n    const { getRenderProps } = k._k;\n\n    return {\n        id: \"rect\",\n        width: w,\n        height: h,\n        radius: opt.radius || 0,\n        draw(this: GameObj<RectComp>) {\n            k.drawRect(Object.assign(getRenderProps(this), {\n                width: this.width,\n                height: this.height,\n                radius: this.radius,\n                fill: opt.fill,\n            }));\n        },\n        renderArea() {\n            return new Rect(vec2(0), this.width, this.height);\n        },\n        inspect() {\n            return `rect: (${Math.ceil(this.width)}w, ${Math.ceil(this.height)}h)`;\n        },\n    };\n}\n", "import type { Comp, Uniform } from \"../../types\";\n\n/**\n * The {@link shader `shader()`} component.\n *\n * @group Component Types\n */\nexport interface ShaderComp extends Comp {\n    uniform: Uniform;\n    shader: string;\n}\n\nexport function shader(\n    id: string,\n    uniform?: Uniform | (() => Uniform),\n): ShaderComp {\n    return {\n        id: \"shader\",\n        shader: id,\n        ...(typeof uniform === \"function\"\n            ? {\n                uniform: uniform(),\n                update() {\n                    this.uniform = uniform();\n                },\n            }\n            : {\n                uniform: uniform,\n            }),\n        inspect() {\n            return `shader: ${id}`;\n        },\n    };\n}\n", "// TODO: accept canvas\n\nimport type { Texture } from \"../../gfx\";\nimport { getKaboomContext } from \"../../kaboom\";\nimport { Quad, quad, type Rect, Vec2, vec2 } from \"../../math\";\nimport type {\n    Asset,\n    Comp,\n    GameObj,\n    SpriteAnimPlayOpt,\n    SpriteCurAnim,\n    SpriteData,\n} from \"../../types\";\nimport { KEvent, KEventController } from \"../../utils\";\n\n/**\n * The {@link sprite `sprite()`} component.\n *\n * @group Component Types\n */\nexport interface SpriteComp extends Comp {\n    draw: Comp[\"draw\"];\n    /**\n     * Name of the sprite.\n     */\n    sprite: string;\n    /**\n     * Width for sprite.\n     */\n    width: number;\n    /**\n     * Height for sprite.\n     */\n    height: number;\n    /**\n     * Current frame.\n     */\n    frame: number;\n    /**\n     * The rectangular area of the texture to render.\n     */\n    quad: Quad;\n    /**\n     * Play a piece of anim.\n     */\n    play(anim: string, options?: SpriteAnimPlayOpt): void;\n    /**\n     * Stop current anim.\n     */\n    stop(): void;\n    /**\n     * Get total number of frames.\n     */\n    numFrames(): number;\n    /**\n     * Get the current animation data.\n     *\n     * @since v3001.0\n     */\n    getCurAnim(): SpriteCurAnim;\n    /**\n     * Get current anim name.\n     *\n     * @deprecated Use `getCurrentAnim().name` instead.\n     */\n    curAnim(): string;\n    /**\n     * Speed multiplier for all animations (for the actual fps for an anim use .play(\"anim\", { speed: 10 })).\n     */\n    animSpeed: number;\n    /**\n     * Flip texture horizontally.\n     */\n    flipX: boolean;\n    /**\n     * Flip texture vertically.\n     */\n    flipY: boolean;\n    /**\n     * Register an event that runs when an animation is played.\n     */\n    onAnimStart(action: (anim: string) => void): KEventController;\n    /**\n     * Register an event that runs when an animation is ended.\n     */\n    onAnimEnd(action: (anim: string) => void): KEventController;\n    /**\n     * @since v3000.0\n     */\n    renderArea(): Rect;\n}\n\n/**\n * Options for the {@link sprite `sprite()`} component.\n *\n * @group Component Types\n */\nexport interface SpriteCompOpt {\n    /**\n     * If the sprite is loaded with multiple frames, or sliced, use the frame option to specify which frame to draw.\n     */\n    frame?: number;\n    /**\n     * If provided width and height, don't stretch but instead render tiled.\n     */\n    tiled?: boolean;\n    /**\n     * Stretch sprite to a certain width.\n     */\n    width?: number;\n    /**\n     * Stretch sprite to a certain height.\n     */\n    height?: number;\n    /**\n     * Play an animation on start.\n     */\n    anim?: string;\n    /**\n     * Speed multiplier for all animations (for the actual fps for an anim use .play(\"anim\", { speed: 10 })).\n     */\n    animSpeed?: number;\n    /**\n     * Flip texture horizontally.\n     */\n    flipX?: boolean;\n    /**\n     * Flip texture vertically.\n     */\n    flipY?: boolean;\n    /**\n     * The rectangular sub-area of the texture to render, default to full texture `quad(0, 0, 1, 1)`.\n     */\n    quad?: Quad;\n    /**\n     * If fill the sprite (useful if you only want to render outline with outline() component).\n     */\n    fill?: boolean;\n}\n\n// TODO: clean\nexport function sprite(\n    src: string | SpriteData | Asset<SpriteData>,\n    opt: SpriteCompOpt = {},\n): SpriteComp {\n    const k = getKaboomContext(this);\n    const { drawTexture, getRenderProps, resolveSprite } = k._k;\n\n    let spriteData: SpriteData | null = null;\n    let curAnim: SpriteCurAnim | null = null;\n    // 1  - from small index to large index\n    // -1 - reverse\n    let curAnimDir: -1 | 1 | null = null;\n    const spriteLoadedEvent = new KEvent<[SpriteData]>();\n\n    if (!src) {\n        throw new Error(\n            \"Please pass the resource name or data to sprite()\",\n        );\n    }\n\n    const calcTexScale = (\n        tex: Texture,\n        q: Quad,\n        w?: number,\n        h?: number,\n    ): Vec2 => {\n        const scale = vec2(1, 1);\n        if (w && h) {\n            scale.x = w / (tex.width * q.w);\n            scale.y = h / (tex.height * q.h);\n        } else if (w) {\n            scale.x = w / (tex.width * q.w);\n            scale.y = scale.x;\n        } else if (h) {\n            scale.y = h / (tex.height * q.h);\n            scale.x = scale.y;\n        }\n        return scale;\n    };\n\n    return {\n        id: \"sprite\",\n        // TODO: allow update\n        width: 0,\n        height: 0,\n        frame: opt.frame || 0,\n        quad: opt.quad || new Quad(0, 0, 1, 1),\n        animSpeed: opt.animSpeed ?? 1,\n        flipX: opt.flipX ?? false,\n        flipY: opt.flipY ?? false,\n\n        get sprite() {\n            return src.toString();\n        },\n\n        draw(this: GameObj<SpriteComp>) {\n            if (!spriteData) return;\n\n            const q = spriteData.frames[this.frame ?? 0];\n\n            if (!q) {\n                throw new Error(`Frame not found: ${this.frame ?? 0}`);\n            }\n\n            if (spriteData.slice9) {\n                // TODO: tile\n                // TODO: use scale or width / height, or both?\n                const { left, right, top, bottom } = spriteData.slice9;\n                const tw = spriteData.tex.width * q.w;\n                const th = spriteData.tex.height * q.h;\n                const iw = this.width - left - right;\n                const ih = this.height - top - bottom;\n                const w1 = left / tw;\n                const w3 = right / tw;\n                const w2 = 1 - w1 - w3;\n                const h1 = top / th;\n                const h3 = bottom / th;\n                const h2 = 1 - h1 - h3;\n                const quads = [\n                    // uv\n                    quad(0, 0, w1, h1),\n                    quad(w1, 0, w2, h1),\n                    quad(w1 + w2, 0, w3, h1),\n                    quad(0, h1, w1, h2),\n                    quad(w1, h1, w2, h2),\n                    quad(w1 + w2, h1, w3, h2),\n                    quad(0, h1 + h2, w1, h3),\n                    quad(w1, h1 + h2, w2, h3),\n                    quad(w1 + w2, h1 + h2, w3, h3),\n                    // transform\n                    quad(0, 0, left, top),\n                    quad(left, 0, iw, top),\n                    quad(left + iw, 0, right, top),\n                    quad(0, top, left, ih),\n                    quad(left, top, iw, ih),\n                    quad(left + iw, top, right, ih),\n                    quad(0, top + ih, left, bottom),\n                    quad(left, top + ih, iw, bottom),\n                    quad(left + iw, top + ih, right, bottom),\n                ];\n                for (let i = 0; i < 9; i++) {\n                    const uv = quads[i];\n                    const transform = quads[i + 9];\n                    drawTexture(\n                        Object.assign(getRenderProps(this), {\n                            pos: transform.pos(),\n                            tex: spriteData.tex,\n                            quad: q.scale(uv),\n                            flipX: this.flipX,\n                            flipY: this.flipY,\n                            tiled: opt.tiled,\n                            width: transform.w,\n                            height: transform.h,\n                        }),\n                    );\n                }\n            } else {\n                drawTexture(\n                    Object.assign(getRenderProps(this), {\n                        tex: spriteData.tex,\n                        quad: q.scale(this.quad ?? new Quad(0, 0, 1, 1)),\n                        flipX: this.flipX,\n                        flipY: this.flipY,\n                        tiled: opt.tiled,\n                        width: this.width,\n                        height: this.height,\n                    }),\n                );\n            }\n        },\n\n        add(this: GameObj<SpriteComp>) {\n            const setSpriteData = (spr) => {\n                let q = spr.frames[0].clone();\n\n                if (opt.quad) {\n                    q = q.scale(opt.quad);\n                }\n\n                const scale = calcTexScale(\n                    spr.tex,\n                    q,\n                    opt.width,\n                    opt.height,\n                );\n\n                this.width = spr.tex.width * q.w * scale.x;\n                this.height = spr.tex.height * q.h * scale.y;\n\n                if (opt.anim) {\n                    this.play(opt.anim);\n                }\n\n                spriteData = spr;\n                spriteLoadedEvent.trigger(spriteData);\n            };\n\n            const spr = resolveSprite(src);\n\n            if (spr) {\n                spr.onLoad(setSpriteData);\n            } else {\n                k.onLoad(() => setSpriteData(resolveSprite(src).data));\n            }\n        },\n\n        update(this: GameObj<SpriteComp>) {\n            if (!curAnim) {\n                return;\n            }\n\n            const anim = spriteData.anims[curAnim.name];\n\n            if (typeof anim === \"number\") {\n                this.frame = anim;\n                return;\n            }\n\n            if (anim.speed === 0) {\n                throw new Error(\"Sprite anim speed cannot be 0\");\n            }\n\n            curAnim.timer += k.dt() * this.animSpeed;\n\n            if (curAnim.timer >= (1 / curAnim.speed)) {\n                curAnim.timer = 0;\n                this.frame += curAnimDir;\n\n                if (\n                    this.frame < Math.min(anim.from, anim.to)\n                    || this.frame > Math.max(anim.from, anim.to)\n                ) {\n                    if (curAnim.loop) {\n                        if (curAnim.pingpong) {\n                            this.frame -= curAnimDir;\n                            curAnimDir *= -1;\n                            this.frame += curAnimDir;\n                        } else {\n                            this.frame = anim.from;\n                        }\n                    } else {\n                        if (curAnim.pingpong) {\n                            const isForward = curAnimDir\n                                === Math.sign(anim.to - anim.from);\n                            if (isForward) {\n                                this.frame = anim.to;\n                                curAnimDir *= -1;\n                                this.frame += curAnimDir;\n                            } else {\n                                this.frame = anim.from;\n                                curAnim.onEnd();\n                                this.stop();\n                            }\n                        } else {\n                            this.frame = anim.to;\n                            curAnim.onEnd();\n                            this.stop();\n                        }\n                    }\n                }\n            }\n        },\n\n        play(\n            this: GameObj<SpriteComp>,\n            name: string,\n            opt: SpriteAnimPlayOpt = {},\n        ) {\n            if (!spriteData) {\n                spriteLoadedEvent.add(() => this.play(name, opt));\n                return;\n            }\n\n            const anim = spriteData.anims[name];\n\n            if (anim === undefined) {\n                throw new Error(`Anim not found: ${name}`);\n            }\n\n            if (curAnim) {\n                this.stop();\n            }\n\n            curAnim = typeof anim === \"number\"\n                ? {\n                    name: name,\n                    timer: 0,\n                    loop: false,\n                    pingpong: false,\n                    speed: 0,\n                    onEnd: () => {},\n                }\n                : {\n                    name: name,\n                    timer: 0,\n                    loop: opt.loop ?? anim.loop ?? false,\n                    pingpong: opt.pingpong ?? anim.pingpong ?? false,\n                    speed: opt.speed ?? anim.speed ?? 10,\n                    onEnd: opt.onEnd ?? (() => {}),\n                };\n\n            curAnimDir = typeof anim === \"number\"\n                ? null\n                : anim.from < anim.to\n                ? 1\n                : -1;\n\n            this.frame = typeof anim === \"number\"\n                ? anim\n                : anim.from;\n\n            this.trigger(\"animStart\", name);\n        },\n\n        stop(this: GameObj<SpriteComp>) {\n            if (!curAnim) {\n                return;\n            }\n            const prevAnim = curAnim.name;\n            curAnim = null;\n            this.trigger(\"animEnd\", prevAnim);\n        },\n\n        numFrames() {\n            return spriteData?.frames.length ?? 0;\n        },\n\n        getCurAnim() {\n            return curAnim;\n        },\n\n        curAnim() {\n            return curAnim?.name;\n        },\n\n        onAnimEnd(\n            this: GameObj<SpriteComp>,\n            action: (name: string) => void,\n        ): KEventController {\n            return this.on(\"animEnd\", action);\n        },\n\n        onAnimStart(\n            this: GameObj<SpriteComp>,\n            action: (name: string) => void,\n        ): KEventController {\n            return this.on(\"animStart\", action);\n        },\n\n        renderArea() {\n            return new k.Rect(vec2(0), this.width, this.height);\n        },\n\n        inspect() {\n            if (typeof src === \"string\") {\n                return `sprite: \"${src}\"`;\n            }\n        },\n    };\n}\n", "import { DEF_TEXT_SIZE } from \"../../constants\";\nimport { getKaboomContext } from \"../../kaboom\";\nimport { Rect, vec2 } from \"../../math\";\nimport type {\n    BitmapFontData,\n    CharTransform,\n    CharTransformFunc,\n    Comp,\n    GameObj,\n    TextAlign,\n} from \"../../types\";\n\n/**\n * The {@link text `text()`} component.\n *\n * @group Component Types\n */\nexport interface TextComp extends Comp {\n    draw: Comp[\"draw\"];\n    /**\n     * The text to render.\n     */\n    text: string;\n    /**\n     * The text size.\n     */\n    textSize: number;\n    /**\n     * The font to use.\n     */\n    font: string | BitmapFontData;\n    /**\n     * Width of text.\n     */\n    width: number;\n    /**\n     * Height of text.\n     */\n    height: number;\n    /**\n     * Text alignment (\"left\", \"center\" or \"right\", default \"left\").\n     *\n     * @since v3000.0\n     */\n    align: TextAlign;\n    /**\n     * The gap between each line.\n     *\n     * @since v2000.2\n     */\n    lineSpacing: number;\n    /**\n     * The gap between each character.\n     *\n     * @since v2000.2\n     */\n    letterSpacing: number;\n    /**\n     * Transform the pos, scale, rotation or color for each character based on the index or char.\n     *\n     * @since v2000.1\n     */\n    textTransform: CharTransform | CharTransformFunc;\n    /**\n     * Stylesheet for styled chunks, in the syntax of \"this is a [style]text[/style] word\".\n     *\n     * @since v2000.2\n     */\n    textStyles: Record<string, CharTransform | CharTransformFunc>;\n    /**\n     * @since v3000.0\n     */\n    renderArea(): Rect;\n}\n\n/**\n * Options for the {@link text `text()`} component.\n *\n * @group Component Types\n */\nexport interface TextCompOpt {\n    /**\n     * Height of text.\n     */\n    size?: number;\n    /**\n     * The font to use.\n     */\n    font?: string | BitmapFontData;\n    /**\n     * Wrap text to a certain width.\n     */\n    width?: number;\n    /**\n     * Text alignment (\"left\", \"center\" or \"right\", default \"left\").\n     *\n     * @since v3000.0\n     */\n    align?: TextAlign;\n    /**\n     * The gap between each line.\n     *\n     * @since v2000.2\n     */\n    lineSpacing?: number;\n    /**\n     * The gap between each character.\n     *\n     * @since v2000.2\n     */\n    letterSpacing?: number;\n    /**\n     * Transform the pos, scale, rotation or color for each character based on the index or char.\n     *\n     * @since v2000.1\n     */\n    transform?: CharTransform | CharTransformFunc;\n    /**\n     * Stylesheet for styled chunks, in the syntax of \"this is a [style]text[/style] word\".\n     *\n     * @since v2000.2\n     */\n    styles?: Record<string, CharTransform | CharTransformFunc>;\n}\n\nexport function text(t: string, opt: TextCompOpt = {}): TextComp {\n    const k = getKaboomContext(this);\n    const { getRenderProps } = k._k;\n\n    function update(obj: GameObj<TextComp | any>) {\n        const ftext = k.formatText(Object.assign(getRenderProps(obj), {\n            text: obj.text + \"\",\n            size: obj.textSize,\n            font: obj.font,\n            width: opt.width && obj.width,\n            align: obj.align,\n            letterSpacing: obj.letterSpacing,\n            lineSpacing: obj.lineSpacing,\n            // TODO: shouldn't run when object / ancestor is paused\n            transform: obj.textTransform,\n            styles: obj.textStyles,\n        }));\n\n        if (!opt.width) {\n            obj.width = ftext.width / (obj.scale?.x || 1);\n        }\n\n        obj.height = ftext.height / (obj.scale?.y || 1);\n\n        return ftext;\n    }\n\n    const obj = {\n        id: \"text\",\n        set text(nt) {\n            t = nt;\n            // @ts-ignore\n            update(this);\n        },\n        get text() {\n            return t;\n        },\n        textSize: opt.size ?? DEF_TEXT_SIZE,\n        font: opt.font,\n        width: opt.width ?? 0,\n        height: 0,\n        align: opt.align,\n        lineSpacing: opt.lineSpacing,\n        letterSpacing: opt.letterSpacing,\n        textTransform: opt.transform,\n        textStyles: opt.styles,\n\n        add(this: GameObj<TextComp>) {\n            k.onLoad(() => update(this));\n        },\n\n        draw(this: GameObj<TextComp>) {\n            k.drawFormattedText(update(this));\n        },\n\n        renderArea() {\n            return new Rect(vec2(0), this.width, this.height);\n        },\n    };\n\n    // @ts-ignore\n    update(obj);\n\n    return obj;\n}\n", "import { getKaboomContext } from \"../../kaboom\";\nimport { Rect, vec2 } from \"../../math\";\nimport type { Comp, GameObj } from \"../../types\";\n\n/**\n * The {@link uvquad `uvquad()`} component.\n *\n * @group Component Types\n */\nexport interface UVQuadComp extends Comp {\n    draw: Comp[\"draw\"];\n    /**\n     * Width of rect.\n     */\n    width: number;\n    /**\n     * Height of height.\n     */\n    height: number;\n    /**\n     * @since v3000.0\n     */\n    renderArea(): Rect;\n}\nexport function uvquad(w: number, h: number): UVQuadComp {\n    const k = getKaboomContext(this);\n    const { getRenderProps } = k._k;\n\n    return {\n        id: \"rect\",\n        width: w,\n        height: h,\n        draw(this: GameObj<UVQuadComp>) {\n            k.drawUVQuad(Object.assign(getRenderProps(this), {\n                width: this.width,\n                height: this.height,\n            }));\n        },\n        renderArea() {\n            return new Rect(vec2(0), this.width, this.height);\n        },\n        inspect() {\n            return `uvquad: (${Math.ceil(this.width)}w, ${Math.ceil(this.height)})h`;\n        },\n    };\n}\n", "import type { Vec2 } from \"../../math\";\nimport type { Comp, GameObj, PosComp } from \"../../types\";\nimport type { KEventController } from \"../../utils\";\nimport type { TileComp } from \"./tile\";\n\n/**\n * The {@link agent `agent()`} component.\n *\n * @group Component Types\n */\nexport interface AgentComp extends Comp {\n    agentSpeed: number;\n    allowDiagonals: boolean;\n    getDistanceToTarget(): number;\n    getNextLocation(): Vec2 | null;\n    getPath(): Vec2[] | null;\n    getTarget(): Vec2 | null;\n    isNavigationFinished(): boolean;\n    isTargetReachable(): boolean;\n    isTargetReached(): boolean;\n    setTarget(target: Vec2): void;\n    onNavigationStarted(cb: () => void): KEventController;\n    onNavigationNext(cb: () => void): KEventController;\n    onNavigationEnded(cb: () => void): KEventController;\n    onTargetReached(cb: () => void): KEventController;\n}\n\n/**\n * Options for the {@link agent `agent()`} component.\n *\n * @group Component Types\n */\nexport type AgentCompOpt = {\n    speed?: number;\n    allowDiagonals?: boolean;\n};\n\nexport function agent(opts: AgentCompOpt = {}): AgentComp {\n    let target: Vec2 | null = null;\n    let path: Vec2[] | null = null;\n    let index: number | null = null;\n    let navMapChangedEvent: KEventController | null = null;\n    return {\n        id: \"agent\",\n        require: [\"pos\", \"tile\"],\n        agentSpeed: opts.speed ?? 100,\n        allowDiagonals: opts.allowDiagonals ?? true,\n        getDistanceToTarget(this: GameObj<AgentComp | PosComp>) {\n            return target ? this.pos.dist(target) : 0;\n        },\n        getNextLocation() {\n            return path && index ? path[index] : null;\n        },\n        getPath() {\n            return path ? path.slice() : null;\n        },\n        getTarget() {\n            return target;\n        },\n        isNavigationFinished() {\n            return path ? index === null : true;\n        },\n        isTargetReachable() {\n            return path !== null;\n        },\n        isTargetReached(this: GameObj<AgentComp | PosComp>) {\n            return target ? this.pos.eq(target) : true;\n        },\n        setTarget(this: GameObj<AgentComp | TileComp | PosComp>, p: Vec2) {\n            target = p;\n            path = this.getLevel().getPath(this.pos, target, {\n                allowDiagonals: this.allowDiagonals,\n            });\n            index = path ? 0 : null;\n            if (path) {\n                if (!navMapChangedEvent) {\n                    navMapChangedEvent = this.getLevel()\n                        .onNavigationMapChanged(() => {\n                            if (path && index !== null) {\n                                path = this.getLevel().getPath(\n                                    this.pos,\n                                    target,\n                                    {\n                                        allowDiagonals: this.allowDiagonals,\n                                    },\n                                );\n                                index = path ? 0 : null;\n                                if (path) {\n                                    this.trigger(\n                                        \"navigation-next\",\n                                        this,\n                                        path[index],\n                                    );\n                                } else {\n                                    this.trigger(\"navigation-ended\", this);\n                                }\n                            }\n                        });\n                    this.onDestroy(() => navMapChangedEvent.cancel());\n                }\n                this.trigger(\"navigation-started\", this);\n                this.trigger(\"navigation-next\", this, path[index]);\n            } else {\n                this.trigger(\"navigation-ended\", this);\n            }\n        },\n        update(this: GameObj<AgentComp | PosComp>) {\n            if (path && index !== null) {\n                if (this.pos.sdist(path[index]) < 2) {\n                    if (index === path.length - 1) {\n                        this.pos = target.clone();\n                        index = null;\n                        this.trigger(\"navigation-ended\", this);\n                        this.trigger(\"target-reached\", this);\n                        return;\n                    } else {\n                        index++;\n                        this.trigger(\"navigation-next\", this, path[index]);\n                    }\n                }\n                this.moveTo(path[index], this.agentSpeed);\n            }\n        },\n        onNavigationStarted(this: GameObj<AgentComp>, cb: () => void) {\n            return this.on(\"navigation-started\", cb);\n        },\n        onNavigationNext(this: GameObj<AgentComp>, cb: () => void) {\n            return this.on(\"navigation-next\", cb);\n        },\n        onNavigationEnded(this: GameObj<AgentComp>, cb: () => void) {\n            return this.on(\"navigation-ended\", cb);\n        },\n        onTargetReached(this: GameObj<AgentComp>, cb: () => void) {\n            return this.on(\"target-reached\", cb);\n        },\n        inspect() {\n            return `agent: ` + JSON.stringify({\n                target: JSON.stringify(target),\n                path: JSON.stringify(path),\n            });\n        },\n    };\n}\n", "import { Vec2 } from \"../../math\";\nimport { type Graph } from \"../../math/navigation\";\nimport type { Comp, GameObj, PosComp } from \"../../types\";\n\nexport interface NavigationMapComp extends Comp {\n    /*\n     * Get navigation waypoints to reach the given target from the given origin.\n     */\n    navigate(origin: Vec2, target: Vec2, navigationOpt: any): Vec2[] | null;\n    /*\n     * The graph to use for navigation.\n     */\n    graph: Graph;\n}\n\nexport interface NavigationMapCompOpt {\n    /*\n     * The graph to use for navigation. If null, the ancestors are queried for a navigatorMap component.\n     */\n    graph?: Graph;\n}\n\nexport function navigationMap(\n    opts: NavigationMapCompOpt,\n): NavigationMapComp {\n    let graph = opts.graph;\n    return {\n        id: \"navigatorMap\",\n        get graph(): Graph {\n            return graph;\n        },\n        set graph(value) {\n            graph = value;\n        },\n        navigate(\n            this: GameObj<NavigationMapComp>,\n            origin: Vec2,\n            target: Vec2,\n            navigationOpt: any = {},\n        ): Vec2[] | null {\n            return graph.getWaypointPath(origin, target, navigationOpt);\n        },\n    };\n}\n\nexport interface NavigationComp extends Comp {\n    /*\n     * Get navigation waypoints to reach the given target from the current position.\n     */\n    navigateTo(target: Vec2): Vec2[] | null;\n    /*\n     * Get the graph used for navigastion if any.\n     */\n    graph: Graph | null;\n}\n\nexport interface NavigationCompOpt {\n    /*\n     * The graph to use for navigation. If null, the ancestors are queried for a navigatorMap component.\n     */\n    graph?: Graph;\n    /*\n     * The navigation options depending on the kind of graph used.\n     */\n    navigationOpt?: any;\n}\n\nexport function navigation(\n    opts: NavigationCompOpt,\n): NavigationComp {\n    let graph = opts.graph;\n    return {\n        id: \"navigator\",\n        require: [\"pos\"],\n        navigateTo(\n            this: GameObj<NavigationComp | PosComp>,\n            target: Vec2,\n        ): Vec2[] | null {\n            const graph: Graph = this.graph;\n            return graph?.getWaypointPath(this.pos, target, opts.navigationOpt);\n        },\n        get graph(): Graph | null {\n            if (graph) {\n                return graph;\n            }\n            let parent: GameObj<any> = this.parent;\n            while (parent) {\n                if (parent.is(\"navigatormap\")) {\n                    return parent.graph;\n                }\n                parent = parent.parent;\n            }\n            return null;\n        },\n        set graph(value) {\n            graph = value;\n        },\n    };\n}\n", "import { Vec2 } from \"../../math\";\nimport type { Comp, GameObj, PosComp } from \"../../types\";\nimport type { KEventController } from \"../../utils\";\n\nexport interface PatrolComp extends Comp {\n    /*\n     * Path to follow. If null, doesn't move.\n     */\n    waypoints: Vec2[] | null;\n    /*\n     * Speed of the movement during patrol.\n     */\n    patrolSpeed: number;\n    /*\n     * Current subgoal, if any.\n     */\n    nextLocation: Vec2 | null;\n    /*\n     * Only called when using \"stop\" and the path reaches its end.\n     */\n    onPatrolFinished(cb: (objects: GameObj[]) => void): KEventController;\n}\n\ntype PatrolEndBehavior =\n    /* Go directly bak to the start */\n    | \"loop\"\n    /* Traveling the reverse path back to the start */\n    | \"ping-pong\"\n    /* Stop */\n    | \"stop\";\n\nexport interface PatrolCompOpt {\n    /*\n     * Path to follow. If null, starts suspended.\n     */\n    waypoints?: Vec2[];\n    /*\n     * Speed of the movement during patrol.\n     */\n    speed?: number;\n    /*\n     * What to do after the last waypoint has been reached.\n     */\n    endBehavior?: PatrolEndBehavior;\n}\n\nexport function patrol(\n    opts: PatrolCompOpt = {},\n): PatrolComp {\n    let waypoints = opts.waypoints;\n    let speed = opts.speed || 100; // Or throw error?\n    let endBehavior = opts.endBehavior || \"stop\"; // Default is stop.\n    let index = 0;\n    let finished = waypoints != null;\n    return {\n        id: \"patrol\",\n        require: [\"pos\"],\n        get patrolSpeed() {\n            return speed;\n        },\n        set patrolSpeed(value) {\n            speed = value;\n        },\n        get waypoints() {\n            return waypoints;\n        },\n        set waypoints(value) {\n            waypoints = value;\n            index = 0;\n            finished = false;\n        },\n        get nextLocation() {\n            return waypoints ? waypoints[index] : null;\n        },\n        update(this: GameObj<PatrolComp | PosComp>) {\n            const nextWaypoint = this.nextLocation\n            if (!waypoints || !nextWaypoint || finished) return;\n            this.moveTo(nextWaypoint, speed);\n            if (this.pos.sdist(nextWaypoint) < 9) {\n                switch (endBehavior) {\n                    case \"loop\":\n                        index = (index + 1) % waypoints.length;\n                        break;\n                    case \"ping-pong\":\n                        index = index + 1;\n                        if (index == waypoints.length) {\n                            waypoints.reverse();\n                            index = 0;\n                        }\n                        break;\n                    case \"stop\":\n                        index = Math.min(index + 1, waypoints.length - 1);\n                        if (index == waypoints.length - 1) {\n                            finished = true;\n                            this.trigger(\"patrol-finished\");\n                        }\n                        break;\n                }\n            }\n        },\n        onPatrolFinished(cb: (objects: GameObj[]) => void) {\n            return this.on(\"patrol-finished\", cb);\n        },\n    };\n}\n", "import { getKaboomContext } from \"../../kaboom\";\nimport { Vec2 } from \"../../math\";\nimport type { Comp, GameObj, PosComp, QueryOpt } from \"../../types\";\nimport type { KEventController } from \"../../utils\";\nimport { raycast } from \"../draw/raycast\";\n\n/**\n * The {@link sentry `sentry()`} component.\n *\n * @group Component Types\n */\nexport interface SentryComp extends Comp {\n    /*\n     * The direction the sentry is pointing to.\n     */\n    direction?: Vec2;\n    /*\n     * The direction of the sentry as an angle in degrees.\n     */\n    directionAngle?: number;\n    /*\n     * The field of view of the sentry in degrees.\n     */\n    fieldOfView?: number;\n    /*\n     * The objects spotted most recently.\n     */\n    spotted: GameObj<any>[];\n    /*\n     * Binds the event fired when objects of interest are spotted.\n     */\n    onObjectsSpotted(cb: (objects: GameObj[]) => void): KEventController;\n    /*\n     * Returns whether the object is within the field of view.\n     */\n    isWithinFieldOfView(\n        obj: GameObj<PosComp>,\n        direction?: Vec2,\n        fieldOfView?: number,\n    ): boolean;\n    /*\n     * Returns whether there is a line of sight to the object.\n     */\n    hasLineOfSight(obj: GameObj<PosComp>): boolean;\n}\n\n/**\n * Options for the {@link sentry `sentry()`} component.\n *\n * @group Component Types\n */\nexport interface SentryCompOpt {\n    /*\n     * The direction the sentry is pointing to. If undefined, direction has no influence.\n     */\n    direction?: Vec2 | number;\n    /*\n     * The field of view of the sentry in degrees. If undefined, defaults to human fov of 200 degrees.\n     */\n    fieldOfView?: number;\n    /*\n     * If true, line of sight matters. This means that objects which are blocked from view by areas are invisible.\n     */\n    lineOfSight?: boolean;\n    /*\n     * When using line of sight, the objects which are transparent for the ray. Include at least a tag identifying the sentry.\n     */\n    raycastExclude?: string[];\n    /*\n     * The frequency of checking, defaults to every second.\n     */\n    checkFrequency?: number;\n}\n\nexport type SentryCandidatesCb = () => GameObj<any>[];\nexport type SentryCandidates = SentryCandidatesCb | QueryOpt;\n\nexport function sentry(\n    candidates: SentryCandidates,\n    opts: SentryCompOpt = {},\n): SentryComp {\n    const k = getKaboomContext(this);\n    const get: SentryCandidatesCb = typeof candidates === \"function\"\n        ? candidates\n        : () => {\n            return k.query(candidates);\n        };\n    const checkFrequency = opts.checkFrequency || 1;\n    const directionVector = typeof opts.direction === \"number\"\n        ? Vec2.fromAngle(opts.direction)\n        : opts.direction;\n    let t = 0;\n    return {\n        id: \"sentry\",\n        require: [\"pos\"],\n        direction: typeof opts.direction == \"number\"\n            ? Vec2.fromAngle(opts.direction)\n            : opts.direction,\n        spotted: [],\n        set directionAngle(value: number) {\n            this.direction = value !== undefined\n                ? Vec2.fromAngle(value)\n                : undefined;\n        },\n        get directionAngle(): number {\n            return this.direction ? this.direction.angle() : undefined;\n        },\n        fieldOfView: opts.fieldOfView || 200, // 200 degrees = Human field of view\n        isWithinFieldOfView(\n            this: GameObj<SentryComp | PosComp>,\n            obj: GameObj<PosComp>,\n            direction?: Vec2,\n            fieldOfView?: number,\n        ) {\n            const dir: Vec2 = (typeof direction === \"number\"\n                ? Vec2.fromAngle(direction)\n                : direction) || directionVector;\n            const fov: number = fieldOfView || opts.fieldOfView;\n            if (!dir || !fov || fov >= 360) return true;\n            const halfAngle = fov / 2;\n            return obj.pos\n                && dir.angleBetween(obj.pos.sub(this.pos)) <= halfAngle;\n        },\n        hasLineOfSight(\n            this: GameObj<SentryComp | PosComp>,\n            obj: GameObj<PosComp>,\n        ) {\n            const hit = raycast(\n                this.pos,\n                obj.pos.sub(this.pos),\n                opts.raycastExclude,\n            );\n            return hit && hit.object === obj;\n        },\n        update(this: GameObj<SentryComp | PosComp>) {\n            t += k.dt();\n            if (t > checkFrequency) {\n                t -= checkFrequency;\n                let objects = get();\n                // If fieldOfView is used, keep only object within view\n                if (\n                    objects.length && directionVector && this.fieldOfView\n                    && this.fieldOfView < 360\n                ) {\n                    const halfAngle = this.fieldOfView / 2;\n                    objects = objects.filter(o =>\n                        o.pos\n                        && directionVector.angleBetween(o.pos.sub(this.pos))\n                            <= halfAngle\n                    );\n                }\n                // If lineOfSight is used, raycast\n                if (objects.length && opts.lineOfSight) {\n                    objects = objects.filter(o => {\n                        return o.pos\n                            && this.hasLineOfSight(o as GameObj<PosComp>);\n                    });\n                }\n                if (objects.length > 0) {\n                    this.spotted = objects;\n                    this.trigger(\"object-spotted\", objects);\n                }\n            }\n        },\n        onObjectsSpotted(cb: (objects: GameObj[]) => void) {\n            return this.on(\"object-spotted\", cb);\n        },\n    };\n}\n", "import { Vec2, vec2 } from \"../../math\";\nimport {\n    type Comp,\n    type Edge,\n    EdgeMask,\n    type GameObj,\n    type LevelComp,\n} from \"../../types\";\n\n/**\n * The {@link tile `tile()`} component.\n *\n * @group Component Types\n */\nexport interface TileComp extends Comp {\n    /**\n     * The tile position inside the level.\n     */\n    tilePos: Vec2;\n    /**\n     * If the tile is an obstacle in pathfinding.\n     */\n    isObstacle: boolean;\n    /**\n     * How much a tile is cost to traverse in pathfinding (default 0).\n     */\n    cost: number;\n    /**\n     * If the tile has hard edges that cannot pass in pathfinding.\n     */\n    edges: Edge[];\n    /**\n     * Position offset when setting `tilePos`.\n     */\n    tilePosOffset: Vec2;\n    readonly edgeMask: EdgeMask;\n    getLevel(): GameObj<LevelComp>;\n    moveLeft(): void;\n    moveRight(): void;\n    moveUp(): void;\n    moveDown(): void;\n}\n\n/**\n * Options for the {@link tile `tile()`} component.\n *\n * @group Component Types\n */\nexport type TileCompOpt = {\n    /**\n     * If the tile is an obstacle in pathfinding.\n     */\n    isObstacle?: boolean;\n    /**\n     * How much a tile is cost to traverse in pathfinding (default 0).\n     */\n    cost?: number;\n    /**\n     * If the tile has hard edges that cannot pass in pathfinding.\n     */\n    edges?: Edge[];\n    /**\n     * Position offset when setting `tilePos`.\n     */\n    offset?: Vec2;\n};\n\nexport function tile(opts: TileCompOpt = {}): TileComp {\n    let tilePos = vec2(0);\n    let isObstacle = opts.isObstacle ?? false;\n    let cost = opts.cost ?? 0;\n    let edges = opts.edges ?? [];\n\n    const getEdgeMask = () => {\n        const loopup = {\n            \"left\": EdgeMask.Left,\n            \"top\": EdgeMask.Top,\n            \"right\": EdgeMask.Right,\n            \"bottom\": EdgeMask.Bottom,\n        };\n        return edges.map(s => loopup[s] || 0).reduce(\n            (mask, dir) => mask | dir,\n            0,\n        );\n    };\n\n    let edgeMask = getEdgeMask();\n\n    return {\n        id: \"tile\",\n        tilePosOffset: opts.offset ?? vec2(0),\n\n        set tilePos(p: Vec2) {\n            const level = this.getLevel();\n            tilePos = p.clone();\n            // @ts-ignore\n            this.pos = vec2(\n                this.tilePos.x * level.tileWidth(),\n                this.tilePos.y * level.tileHeight(),\n            ).add(this.tilePosOffset);\n        },\n\n        get tilePos() {\n            return tilePos;\n        },\n\n        set isObstacle(is: boolean) {\n            if (isObstacle === is) return;\n            isObstacle = is;\n            this.getLevel().invalidateNavigationMap();\n        },\n\n        get isObstacle() {\n            return isObstacle;\n        },\n\n        set cost(n: number) {\n            if (cost === n) return;\n            cost = n;\n            this.getLevel().invalidateNavigationMap();\n        },\n\n        get cost() {\n            return cost;\n        },\n\n        set edges(e: Edge[]) {\n            edges = e;\n            edgeMask = getEdgeMask();\n            this.getLevel().invalidateNavigationMap();\n        },\n\n        get edges() {\n            return edges;\n        },\n\n        get edgeMask() {\n            return edgeMask;\n        },\n\n        getLevel(this: GameObj) {\n            return this.parent as GameObj<LevelComp>;\n        },\n\n        moveLeft() {\n            this.tilePos = this.tilePos.add(vec2(-1, 0));\n        },\n\n        moveRight() {\n            this.tilePos = this.tilePos.add(vec2(1, 0));\n        },\n\n        moveUp() {\n            this.tilePos = this.tilePos.add(vec2(0, -1));\n        },\n\n        moveDown() {\n            this.tilePos = this.tilePos.add(vec2(0, 1));\n        },\n    };\n}\n", "import type { Comp, GameObj } from \"../../types\";\nimport type { KEventController } from \"../../utils\";\n\n/**\n * The {@link health `health()`} component.\n *\n * @group Component Types\n */\nexport interface HealthComp extends Comp {\n    /**\n     * Decrease HP by n (defaults to 1).\n     */\n    hurt(n?: number): void;\n    /**\n     * Increase HP by n (defaults to 1).\n     */\n    heal(n?: number): void;\n    /**\n     * Current health points.\n     */\n    hp(): number;\n    /**\n     * Set current health points.\n     */\n    setHP(hp: number): void;\n    /**\n     * Max amount of HP.\n     */\n    maxHP(): number | null;\n    /**\n     * Set max amount of HP.\n     */\n    setMaxHP(hp: number): void;\n    /**\n     * Register an event that runs when hurt() is called upon the object.\n     *\n     * @since v2000.1\n     */\n    onHurt(action: (amount?: number) => void): KEventController;\n    /**\n     * Register an event that runs when heal() is called upon the object.\n     *\n     * @since v2000.1\n     */\n    onHeal(action: (amount?: number) => void): KEventController;\n    /**\n     * Register an event that runs when object's HP is equal or below 0.\n     *\n     * @since v2000.1\n     */\n    onDeath(action: () => void): KEventController;\n}\n\nexport function health(\n    hp: number,\n    maxHP?: number,\n): HealthComp {\n    if (hp == null) {\n        throw new Error(\"health() requires the initial amount of hp\");\n    }\n\n    return {\n        id: \"health\",\n        hurt(this: GameObj, n: number = 1) {\n            this.setHP(hp - n);\n            this.trigger(\"hurt\", n);\n        },\n        heal(this: GameObj, n: number = 1) {\n            const origHP = hp;\n            this.setHP(hp + n);\n            this.trigger(\"heal\", hp - origHP);\n        },\n        hp(): number {\n            return hp;\n        },\n        maxHP(): number | null {\n            return maxHP ?? null;\n        },\n        setMaxHP(n: number): void {\n            maxHP = n;\n        },\n        setHP(this: GameObj, n: number) {\n            hp = maxHP ? Math.min(maxHP, n) : n;\n            if (hp <= 0) {\n                this.trigger(\"death\");\n            }\n        },\n        onHurt(\n            this: GameObj,\n            action: (amount?: number) => void,\n        ): KEventController {\n            return this.on(\"hurt\", action);\n        },\n        onHeal(\n            this: GameObj,\n            action: (amount?: number) => void,\n        ): KEventController {\n            return this.on(\"heal\", action);\n        },\n        onDeath(this: GameObj, action: () => void): KEventController {\n            return this.on(\"death\", action);\n        },\n        inspect() {\n            return `health: ${hp}`;\n        },\n    };\n}\n", "import easings from \"../../easings\";\nimport { getKaboomContext } from \"../../kaboom\";\nimport type { EmptyComp, GameObj, OpacityComp } from \"../../types\";\n\n/**\n * The {@link lifespan `lifespan()`} component.\n *\n * @group Component Types\n */\nexport interface LifespanCompOpt {\n    /**\n     * Fade out duration (default 0 which is no fade out).\n     */\n    fade?: number;\n}\n\nexport function lifespan(time: number, opt: LifespanCompOpt = {}): EmptyComp {\n    const k = getKaboomContext(this);\n\n    if (time == null) {\n        throw new Error(\"lifespan() requires time\");\n    }\n    const fade = opt.fade ?? 0;\n    return {\n        id: \"lifespan\",\n        require: [\"opacity\"],\n        async add(this: GameObj<OpacityComp>) {\n            await k.wait(time);\n            this.opacity = this.opacity ?? 1;\n            if (fade > 0) {\n                await k.tween(\n                    this.opacity,\n                    0,\n                    fade,\n                    (a) => this.opacity = a,\n                    easings.linear,\n                );\n            }\n            this.destroy();\n        },\n    };\n}\n", "import type { Comp } from \"../../types\";\n\n/**\n * The {@link named `named()`} component.\n *\n * @group Component Types\n */\nexport interface NamedComp extends Comp {\n    /** The name assigned to this object. */\n    name: string;\n}\n\nexport function named(name: string): NamedComp {\n    return {\n        name,\n    };\n}\n", "import type { Comp } from \"../../types\";\nimport { KEvent, KEventController } from \"../../utils\";\n\n/**\n * The {@link state `state()`} component.\n *\n * @group Component Types\n */\nexport interface StateComp extends Comp {\n    /**\n     * Current state.\n     */\n    state: string;\n    /**\n     * Enter a state, trigger onStateEnd for previous state and onStateEnter for the new State state.\n     */\n    enterState: (state: string, ...args: any) => void;\n    /**\n     * Register event that runs once when a specific state transition happens. Accepts arguments passed from `enterState(name, ...args)`.\n     *\n     * @since v2000.2\n     */\n    onStateTransition(\n        from: string,\n        to: string,\n        action: () => void,\n    ): KEventController;\n    /**\n     * Register event that runs once when enters a specific state. Accepts arguments passed from `enterState(name, ...args)`.\n     */\n    onStateEnter: (\n        state: string,\n        action: (...args: any) => void,\n    ) => KEventController;\n    /**\n     * Register an event that runs once when leaves a specific state.\n     */\n    onStateEnd: (state: string, action: () => void) => KEventController;\n    /**\n     * Register an event that runs every frame when in a specific state.\n     */\n    onStateUpdate: (state: string, action: () => void) => KEventController;\n    /**\n     * Register an event that runs every frame when in a specific state.\n     */\n    onStateDraw: (state: string, action: () => void) => KEventController;\n}\n\nexport function state(\n    initState: string,\n    stateList?: string[],\n    transitions?: Record<string, string | string[]>,\n): StateComp {\n    if (!initState) {\n        throw new Error(\"state() requires an initial state\");\n    }\n\n    const events = {};\n\n    function initStateEvents(state: string) {\n        if (!events[state]) {\n            events[state] = {\n                enter: new KEvent(),\n                end: new KEvent(),\n                update: new KEvent(),\n                draw: new KEvent(),\n            };\n        }\n    }\n\n    function on(event, state, action) {\n        initStateEvents(state);\n        return events[state][event].add(action);\n    }\n\n    function trigger(event, state, ...args) {\n        initStateEvents(state);\n        events[state][event].trigger(...args);\n    }\n\n    let didFirstEnter = false;\n\n    return {\n        id: \"state\",\n        state: initState,\n\n        enterState(state: string, ...args) {\n            didFirstEnter = true;\n\n            if (stateList && !stateList.includes(state)) {\n                throw new Error(`State not found: ${state}`);\n            }\n\n            const oldState = this.state;\n\n            if (transitions) {\n                // check if the transition is legal, if transition graph is defined\n                if (!transitions?.[oldState]) {\n                    return;\n                }\n\n                const available = typeof transitions[oldState] === \"string\"\n                    ? [transitions[oldState]]\n                    : transitions[oldState] as string[];\n\n                if (!available.includes(state)) {\n                    throw new Error(\n                        `Cannot transition state from \"${oldState}\" to \"${state}\". Available transitions: ${\n                            available.map((s) => `\"${s}\"`).join(\", \")\n                        }`,\n                    );\n                }\n            }\n\n            trigger(\"end\", oldState, ...args);\n            this.state = state;\n            trigger(\"enter\", state, ...args);\n            trigger(\"enter\", `${oldState} -> ${state}`, ...args);\n        },\n\n        onStateTransition(\n            from: string,\n            to: string,\n            action: () => void,\n        ): KEventController {\n            return on(\"enter\", `${from} -> ${to}`, action);\n        },\n\n        onStateEnter(state: string, action: () => void): KEventController {\n            return on(\"enter\", state, action);\n        },\n\n        onStateUpdate(state: string, action: () => void): KEventController {\n            return on(\"update\", state, action);\n        },\n\n        onStateDraw(state: string, action: () => void): KEventController {\n            return on(\"draw\", state, action);\n        },\n\n        onStateEnd(state: string, action: () => void): KEventController {\n            return on(\"end\", state, action);\n        },\n\n        update() {\n            // execute the enter event for initState\n            if (!didFirstEnter) {\n                trigger(\"enter\", initState);\n                didFirstEnter = true;\n            }\n            trigger(\"update\", this.state);\n        },\n\n        draw() {\n            trigger(\"draw\", this.state);\n        },\n\n        inspect() {\n            return `state: ${this.state}`\n        },\n    };\n}\n", "import type { Comp } from \"../../types\";\n\n/**\n * The {@link stay `stay()`} component.\n *\n * @group Component Types\n */\nexport interface StayComp extends Comp {\n    /**\n     * If the obj should not be destroyed on scene switch.\n     */\n    stay: boolean;\n    /**\n     * Array of scenes that the obj will stay on.\n     */\n    scenesToStay: string[];\n}\n\nexport function stay(scenesToStay?: string[]): StayComp {\n    return {\n        id: \"stay\",\n        stay: true,\n        scenesToStay: scenesToStay,\n    };\n}\n", "import easings from \"../../easings\";\nimport { getKaboomContext } from \"../../kaboom\";\nimport { lerp } from \"../../math\";\nimport type {\n    Comp,\n    GameObj,\n    KEventController,\n    LerpValue,\n    TimerController,\n    TweenController,\n} from \"../../types\";\n\n/**\n * The {@link timer `timer()`} component.\n *\n * @group Component Types\n */\nexport interface TimerComp extends Comp {\n    /**\n     * Run the callback after n seconds.\n     */\n    wait(time: number, action?: () => void): TimerController;\n    /**\n     * Run the callback every n seconds.\n     *\n     * @since v3000.0\n     */\n    loop(time: number, action: () => void): KEventController;\n    /**\n     * Tweeeeen! Note that this doesn't specifically mean tweening on this object's property, this just registers the timer on this object, so the tween will cancel with the object gets destroyed, or paused when obj.paused is true.\n     *\n     * @since v3000.0\n     */\n    tween<V extends LerpValue>(\n        from: V,\n        to: V,\n        duration: number,\n        setValue: (value: V) => void,\n        easeFunc?: (t: number) => number,\n    ): TweenController;\n}\n\nexport function timer(): TimerComp {\n    return {\n        id: \"timer\",\n        wait(\n            this: GameObj<TimerComp>,\n            time: number,\n            action?: () => void,\n        ): TimerController {\n            const k = getKaboomContext(this);\n            const actions = [];\n            if (action) actions.push(action);\n            let t = 0;\n            const ev = this.onUpdate(() => {\n                t += k.dt();\n                if (t >= time) {\n                    actions.forEach((f) => f());\n                    ev.cancel();\n                }\n            });\n            return {\n                get paused() {\n                    return ev.paused;\n                },\n                set paused(p) {\n                    ev.paused = p;\n                },\n                cancel: ev.cancel,\n                onEnd(action) {\n                    actions.push(action);\n                },\n                then(action) {\n                    this.onEnd(action);\n                    return this;\n                },\n            };\n        },\n        loop(t: number, action: () => void): KEventController {\n            let curTimer: null | TimerController = null;\n            const newAction = () => {\n                // TODO: should f be execute right away as loop() is called?\n                curTimer = this.wait(t, newAction);\n                action();\n            };\n            curTimer = this.wait(0, newAction);\n            return {\n                get paused() {\n                    return curTimer.paused;\n                },\n                set paused(p) {\n                    curTimer.paused = p;\n                },\n                cancel: () => curTimer.cancel(),\n            };\n        },\n        tween<V extends LerpValue>(\n            this: GameObj<TimerComp>,\n            from: V,\n            to: V,\n            duration: number,\n            setValue: (value: V) => void,\n            easeFunc = easings.linear,\n        ) {\n            const k = getKaboomContext(this);\n            let curTime = 0;\n            const onEndEvents: Array<() => void> = [];\n            const ev = this.onUpdate(() => {\n                curTime += k.dt();\n                const t = Math.min(curTime / duration, 1);\n                setValue(lerp(from, to, easeFunc(t)));\n                if (t === 1) {\n                    ev.cancel();\n                    setValue(to);\n                    onEndEvents.forEach((action) => action());\n                }\n            });\n            return {\n                get paused() {\n                    return ev.paused;\n                },\n                set paused(p) {\n                    ev.paused = p;\n                },\n                onEnd(action: () => void) {\n                    onEndEvents.push(action);\n                },\n                then(action: () => void) {\n                    this.onEnd(action);\n                    return this;\n                },\n                cancel() {\n                    ev.cancel();\n                },\n                finish() {\n                    ev.cancel();\n                    setValue(to);\n                    onEndEvents.forEach((action) => action());\n                },\n            };\n        },\n    };\n}\n", "import { DEF_ANCHOR } from \"../../constants\";\nimport { anchorPt, getKaboomContext } from \"../../kaboom\";\nimport { Polygon, rgb, testPolygonPoint, Vec2, vec2 } from \"../../math\";\nimport type {\n    Collision,\n    Comp,\n    Cursor,\n    GameObj,\n    MouseButton,\n    PosComp,\n    Shape,\n    Tag,\n} from \"../../types\";\nimport type { KEventController } from \"../../utils\";\nimport type { AnchorComp } from \"../transform/anchor\";\nimport type { FixedComp } from \"../transform/fixed\";\n\n/**\n * The {@link area `area()`} component.\n *\n * @group Component Types\n */\nexport interface AreaComp extends Comp {\n    /**\n     * Collider area info.\n     */\n    area: {\n        /**\n         * If we use a custom shape over render shape.\n         */\n        shape: Shape | null;\n        /**\n         * Area scale.\n         */\n        scale: Vec2;\n        /**\n         * Area offset.\n         */\n        offset: Vec2;\n        /**\n         * Cursor on hover.\n         */\n        cursor: Cursor | null;\n    };\n    /**\n     * If this object should ignore collisions against certain other objects.\n     *\n     * @since v3000.0\n     */\n    collisionIgnore: Tag[];\n    /**\n     * If was just clicked on last frame.\n     */\n    isClicked(): boolean;\n    /**\n     * If is being hovered on.\n     */\n    isHovering(): boolean;\n    /**\n     * Check collision with another game obj.\n     *\n     * @since v3000.0\n     */\n    checkCollision(other: GameObj<AreaComp>): Collision | null;\n    /**\n     * Get all collisions currently happening.\n     *\n     * @since v3000.0\n     */\n    getCollisions(): Collision[];\n    /**\n     * If is currently colliding with another game obj.\n     */\n    isColliding(o: GameObj<AreaComp>): boolean;\n    /**\n     * If is currently overlapping with another game obj (like isColliding, but will return false if the objects are just touching edges).\n     */\n    isOverlapping(o: GameObj<AreaComp>): boolean;\n    /**\n     * Register an event runs when clicked.\n     *\n     * @since v2000.1\n     */\n    onClick(f: () => void, btn?: MouseButton): void;\n    /**\n     * Register an event runs once when hovered.\n     *\n     * @since v3000.0\n     */\n    onHover(action: () => void): KEventController;\n    /**\n     * Register an event runs every frame when hovered.\n     *\n     * @since v3000.0\n     */\n    onHoverUpdate(action: () => void): KEventController;\n    /**\n     * Register an event runs once when unhovered.\n     *\n     * @since v3000.0\n     */\n    onHoverEnd(action: () => void): KEventController;\n    /**\n     * Register an event runs once when collide with another game obj with certain tag.\n     *\n     * @since v2001.0\n     */\n    onCollide(tag: Tag, f: (obj: GameObj, col?: Collision) => void): void;\n    /**\n     * Register an event runs once when collide with another game obj.\n     *\n     * @since v2000.1\n     */\n    onCollide(f: (obj: GameObj, col?: Collision) => void): void;\n    /**\n     * Register an event runs every frame when collide with another game obj with certain tag.\n     *\n     * @since v3000.0\n     */\n    onCollideUpdate(\n        tag: Tag,\n        f: (obj: GameObj, col?: Collision) => void,\n    ): KEventController;\n    /**\n     * Register an event runs every frame when collide with another game obj.\n     *\n     * @since v3000.0\n     */\n    onCollideUpdate(\n        f: (obj: GameObj, col?: Collision) => void,\n    ): KEventController;\n    /**\n     * Register an event runs once when stopped colliding with another game obj with certain tag.\n     *\n     * @since v3000.0\n     */\n    onCollideEnd(tag: Tag, f: (obj: GameObj) => void): KEventController;\n    /**\n     * Register an event runs once when stopped colliding with another game obj.\n     *\n     * @since v3000.0\n     */\n    onCollideEnd(f: (obj: GameObj) => void): void;\n    /**\n     * If has a certain point inside collider.\n     */\n    hasPoint(p: Vec2): boolean;\n    /**\n     * Push out from another solid game obj if currently overlapping.\n     */\n    resolveCollision(obj: GameObj): void;\n    /**\n     * Get the geometry data for the collider in local coordinate space.\n     *\n     * @since v3000.0\n     */\n    localArea(): Shape;\n    /**\n     * Get the geometry data for the collider in world coordinate space.\n     */\n    worldArea(): Polygon;\n    /**\n     * Get the geometry data for the collider in screen coordinate space.\n     */\n    screenArea(): Polygon;\n}\n\n/**\n * Options for the {@link area `area()`} component.\n *\n * @group Component Types\n */\nexport interface AreaCompOpt {\n    /**\n     * The shape of the area (currently only Rect and Polygon is supported).\n     *\n     * @example\n     * ```js\n     * add([\n     *     sprite(\"butterfly\"),\n     *     pos(100, 200),\n     *     // a triangle shape!\n     *     area({ shape: new Polygon([vec2(0), vec2(100), vec2(-100, 100)]) }),\n     * ])\n     * ```\n     */\n    shape?: Shape;\n    /**\n     * Area scale.\n     */\n    scale?: number | Vec2;\n    /**\n     * Area offset.\n     */\n    offset?: Vec2;\n    /**\n     * Cursor on hover.\n     */\n    cursor?: Cursor;\n    /**\n     * If this object should ignore collisions against certain other objects.\n     *\n     * @since v3000.0\n     */\n    collisionIgnore?: Tag[];\n}\n\nexport function area(opt: AreaCompOpt = {}): AreaComp {\n    const k = getKaboomContext(this);\n    const { app, isFixed, getViewportScale, game } = k._k;\n\n    const colliding = {};\n    const collidingThisFrame = new Set();\n\n    return {\n        id: \"area\",\n        collisionIgnore: opt.collisionIgnore ?? [],\n\n        add(this: GameObj<AreaComp>) {\n            if (this.area.cursor) {\n                this.onHover(() => app.setCursor(this.area.cursor));\n            }\n\n            this.onCollideUpdate((obj, col) => {\n                if (!colliding[obj.id]) {\n                    this.trigger(\"collide\", obj, col);\n                }\n                colliding[obj.id] = col;\n                collidingThisFrame.add(obj.id);\n            });\n        },\n\n        update(this: GameObj<AreaComp>) {\n            for (const id in colliding) {\n                if (!collidingThisFrame.has(Number(id))) {\n                    this.trigger(\"collideEnd\", colliding[id].target);\n                    delete colliding[id];\n                }\n            }\n            collidingThisFrame.clear();\n        },\n\n        drawInspect(this: GameObj<AreaComp | AnchorComp | FixedComp>) {\n            const a = this.localArea();\n\n            k.pushTransform();\n            k.pushScale(this.area.scale);\n            k.pushTranslate(this.area.offset);\n\n            const opts = {\n                outline: {\n                    width: 4 / getViewportScale(),\n                    color: rgb(0, 0, 255),\n                },\n                anchor: this.anchor,\n                fill: false,\n                fixed: isFixed(this),\n            };\n\n            if (a instanceof k.Rect) {\n                k.drawRect({\n                    ...opts,\n                    pos: a.pos,\n                    width: a.width,\n                    height: a.height,\n                });\n            } else if (a instanceof k.Polygon) {\n                k.drawPolygon({\n                    ...opts,\n                    pts: a.pts,\n                });\n            } else if (a instanceof k.Circle) {\n                k.drawCircle({\n                    ...opts,\n                    pos: a.center,\n                    radius: a.radius,\n                });\n            }\n\n            k.popTransform();\n        },\n\n        area: {\n            shape: opt.shape ?? null,\n            scale: opt.scale ? vec2(opt.scale) : vec2(1),\n            offset: opt.offset ?? vec2(0),\n            cursor: opt.cursor ?? null,\n        },\n\n        isClicked(): boolean {\n            return app.isMousePressed() && this.isHovering();\n        },\n\n        isHovering(this: GameObj) {\n            const mpos = isFixed(this)\n                ? k.mousePos()\n                : k.toWorld(k.mousePos());\n            return this.hasPoint(mpos);\n        },\n\n        checkCollision(this: GameObj, other: GameObj<AreaComp>) {\n            return colliding[other.id] ?? null;\n        },\n\n        getCollisions() {\n            return Object.values(colliding);\n        },\n\n        // TODO: perform check instead of use cache\n        isColliding(other: GameObj<AreaComp>) {\n            return Boolean(colliding[other.id]);\n        },\n\n        isOverlapping(other) {\n            const col = colliding[other.id];\n            return col && col.hasOverlap();\n        },\n\n        onClick(\n            this: GameObj<AreaComp>,\n            f: () => void,\n            btn: MouseButton = \"left\",\n        ): KEventController {\n            const e = app.onMousePress(btn, () => {\n                if (this.isHovering()) {\n                    f();\n                }\n            });\n            this.onDestroy(() => e.cancel());\n            return e;\n        },\n\n        onHover(this: GameObj, action: () => void): KEventController {\n            let hovering = false;\n            return this.onUpdate(() => {\n                if (!hovering) {\n                    if (this.isHovering()) {\n                        hovering = true;\n                        action();\n                    }\n                } else {\n                    hovering = this.isHovering();\n                }\n            });\n        },\n\n        onHoverUpdate(this: GameObj, onHover: () => void): KEventController {\n            return this.onUpdate(() => {\n                if (this.isHovering()) {\n                    onHover();\n                }\n            });\n        },\n\n        onHoverEnd(this: GameObj, action: () => void): KEventController {\n            let hovering = false;\n            return this.onUpdate(() => {\n                if (hovering) {\n                    if (!this.isHovering()) {\n                        hovering = false;\n                        action();\n                    }\n                } else {\n                    hovering = this.isHovering();\n                }\n            });\n        },\n\n        onCollide(\n            this: GameObj,\n            tag: Tag | ((obj: GameObj, col?: Collision) => void),\n            cb?: (obj: GameObj, col?: Collision) => void,\n        ): KEventController {\n            if (typeof tag === \"function\" && cb === undefined) {\n                return this.on(\"collide\", tag);\n            } else if (typeof tag === \"string\") {\n                return this.onCollide((obj, col) => {\n                    if (obj.is(tag)) {\n                        cb(obj, col);\n                    }\n                });\n            }\n        },\n\n        onCollideUpdate(\n            this: GameObj<AreaComp>,\n            tag: Tag | ((obj: GameObj, col?: Collision) => void),\n            cb?: (obj: GameObj, col?: Collision) => void,\n        ): KEventController {\n            if (typeof tag === \"function\" && cb === undefined) {\n                return this.on(\"collideUpdate\", tag);\n            } else if (typeof tag === \"string\") {\n                return this.on(\n                    \"collideUpdate\",\n                    (obj, col) => obj.is(tag) && cb(obj, col),\n                );\n            }\n        },\n\n        onCollideEnd(\n            this: GameObj<AreaComp>,\n            tag: Tag | ((obj: GameObj) => void),\n            cb?: (obj: GameObj) => void,\n        ): KEventController {\n            if (typeof tag === \"function\" && cb === undefined) {\n                return this.on(\"collideEnd\", tag);\n            } else if (typeof tag === \"string\") {\n                return this.on(\n                    \"collideEnd\",\n                    (obj) => obj.is(tag) && cb(obj),\n                );\n            }\n        },\n\n        hasPoint(pt: Vec2): boolean {\n            // TODO: convert to pt to local space instead\n            return testPolygonPoint(this.worldArea(), pt);\n        },\n\n        // push an obj out of another if they're overlapped\n        resolveCollision(\n            this: GameObj<AreaComp | PosComp>,\n            obj: GameObj<AreaComp>,\n        ) {\n            const col = this.checkCollision(obj);\n            if (col && !col.resolved) {\n                this.pos = this.pos.add(col.displacement);\n                col.resolved = true;\n            }\n        },\n\n        localArea(\n            this: GameObj<AreaComp | { renderArea(): Shape }>,\n        ): Shape {\n            return this.area.shape\n                ? this.area.shape\n                : this.renderArea();\n        },\n\n        // TODO: cache\n        worldArea(this: GameObj<AreaComp | AnchorComp>): Polygon {\n            const localArea = this.localArea();\n\n            if (\n                !(localArea instanceof k.Polygon || localArea instanceof k.Rect)\n            ) {\n                throw new Error(\n                    \"Only support polygon and rect shapes for now\",\n                );\n            }\n\n            const transform = this.transform\n                .clone()\n                .scale(vec2(this.area.scale ?? 1))\n                .translate(this.area.offset);\n\n            if (localArea instanceof k.Rect) {\n                const offset = anchorPt(this.anchor || DEF_ANCHOR)\n                    .add(1, 1)\n                    .scale(-0.5)\n                    .scale(localArea.width, localArea.height);\n                transform.translate(offset);\n            }\n\n            return localArea.transform(transform) as Polygon;\n        },\n\n        screenArea(this: GameObj<AreaComp | FixedComp>): Polygon {\n            const area = this.worldArea();\n            if (isFixed(this)) {\n                return area;\n            } else {\n                return area.transform(game.cam.transform);\n            }\n        },\n\n        inspect() {\n            if (this.area.scale.x == this.area.scale.y) return `area: ${this.area.scale.x.toFixed(1)}x`;\n            else return `area: (${this.area.scale.x.toFixed(1)}x, ${\n                this.area.scale.y.toFixed(1)\n            }y)`;\n        },\n    };\n}\n", "import { DEF_JUMP_FORCE, MAX_VEL } from \"../../constants\";\nimport { getKaboomContext } from \"../../kaboom\";\nimport { type Vec2, vec2 } from \"../../math\";\nimport type { Collision, Comp, GameObj, PosComp } from \"../../types\";\nimport type { KEventController } from \"../../utils\";\nimport type { AreaComp } from \"./area\";\n\n/**\n * The {@link body `body()`} component.\n *\n * @group Component Types\n */\nexport interface BodyComp extends Comp {\n    /**\n     * Object current velocity.\n     *\n     * @since v3001.0\n     */\n    vel: Vec2;\n    /**\n     * How much velocity decays (velocity *= (1 - drag) every frame).\n     *\n     * @since v3001.0\n     */\n    drag: number;\n    /**\n     * If object is static, won't move, and all non static objects won't move past it.\n     */\n    isStatic: boolean;\n    /**\n     * Initial speed in pixels per second for jump().\n     */\n    jumpForce: number;\n    /**\n     * Gravity multiplier.\n     */\n    gravityScale: number;\n    /**\n     * Mass of the body, decides how much a non-static body should move when resolves with another non-static body. (default 1).\n     *\n     * @since v3000.0\n     */\n    mass?: number;\n    /**\n     * If object should move with moving platform (default true).\n     *\n     * @since v3000.0\n     */\n    stickToPlatform?: boolean;\n    /**\n     * Current platform landing on.\n     */\n    curPlatform(): GameObj | null;\n    /**\n     * If currently landing on a platform.\n     *\n     * @since v2000.1\n     */\n    isGrounded(): boolean;\n    /**\n     * If currently falling.\n     *\n     * @since v2000.1\n     */\n    isFalling(): boolean;\n    /**\n     * If currently rising.\n     *\n     * @since v3000.0\n     */\n    isJumping(): boolean;\n    /**\n     * Upward thrust.\n     */\n    jump(force?: number): void;\n    /**\n     * Register an event that runs when a collision is resolved.\n     *\n     * @since v3000.0\n     */\n    onPhysicsResolve(action: (col: Collision) => void): KEventController;\n    /**\n     * Register an event that runs before a collision would be resolved.\n     *\n     * @since v3000.0\n     */\n    onBeforePhysicsResolve(action: (col: Collision) => void): KEventController;\n    /**\n     * Register an event that runs when the object is grounded.\n     *\n     * @since v2000.1\n     */\n    onGround(action: () => void): KEventController;\n    /**\n     * Register an event that runs when the object starts falling.\n     *\n     * @since v2000.1\n     */\n    onFall(action: () => void): KEventController;\n    /**\n     * Register an event that runs when the object falls off platform.\n     *\n     * @since v3000.0\n     */\n    onFallOff(action: () => void): KEventController;\n    /**\n     * Register an event that runs when the object bumps into something on the head.\n     *\n     * @since v2000.1\n     */\n    onHeadbutt(action: () => void): KEventController;\n}\n\n/**\n * Options for the {@link body `body()`} component.\n *\n * @group Component Types\n */\nexport interface BodyCompOpt {\n    /**\n     * How much velocity decays (velocity *= (1 - drag) every frame).\n     *\n     * @since v3001.0\n     */\n    drag?: number;\n    /**\n     * Initial speed in pixels per second for jump().\n     */\n    jumpForce?: number;\n    /**\n     * Maximum velocity when falling.\n     */\n    maxVelocity?: number;\n    /**\n     * Gravity multiplier.\n     */\n    gravityScale?: number;\n    /**\n     * If object is static, won't move, and all non static objects won't move past it.\n     *\n     * @since v3000.0\n     */\n    isStatic?: boolean;\n    /**\n     * If object should move with moving platform (default true).\n     *\n     * @since v3000.0\n     */\n    stickToPlatform?: boolean;\n    /**\n     * Mass of the body, decides how much a non-static body should move when resolves with another non-static body. (default 1).\n     *\n     * @since v3000.0\n     */\n    mass?: number;\n}\n\nexport function body(opt: BodyCompOpt = {}): BodyComp {\n    const k = getKaboomContext(this);\n    const { calcTransform, game } = k._k;\n    let curPlatform: GameObj<PosComp | AreaComp | BodyComp> | null = null;\n    let lastPlatformPos = null;\n    let willFall = false;\n\n    return {\n        id: \"body\",\n        require: [\"pos\"],\n        vel: vec2(0),\n        drag: opt.drag ?? 0,\n        jumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n        gravityScale: opt.gravityScale ?? 1,\n        isStatic: opt.isStatic ?? false,\n        // TODO: prefer density * area\n        mass: opt.mass ?? 1,\n\n        add(this: GameObj<PosComp | BodyComp | AreaComp>) {\n            if (this.mass === 0) {\n                throw new Error(\"Can't set body mass to 0\");\n            }\n\n            if (this.is(\"area\")) {\n                // static vs static: don't resolve\n                // static vs non-static: always resolve non-static\n                // non-static vs non-static: resolve the first one\n                this.onCollideUpdate(\n                    (other: GameObj<PosComp | BodyComp>, col) => {\n                        if (!other.is(\"body\")) {\n                            return;\n                        }\n\n                        if (col.resolved) {\n                            return;\n                        }\n\n                        this.trigger(\"beforePhysicsResolve\", col);\n                        const rcol = col.reverse();\n                        other.trigger(\"beforePhysicsResolve\", rcol);\n\n                        // user can mark 'resolved' in beforePhysicsResolve to stop a resolution\n                        if (col.resolved || rcol.resolved) {\n                            return;\n                        }\n\n                        if (this.isStatic && other.isStatic) {\n                            return;\n                        } else if (!this.isStatic && !other.isStatic) {\n                            // TODO: update all children transform?\n                            const tmass = this.mass + other.mass;\n                            this.pos = this.pos.add(\n                                col.displacement.scale(other.mass / tmass),\n                            );\n                            other.pos = other.pos.add(\n                                col.displacement.scale(-this.mass / tmass),\n                            );\n                            this.transform = calcTransform(this);\n                            other.transform = calcTransform(other);\n                        } else {\n                            // if one is static and on is not, resolve the non static one\n                            const col2 = (!this.isStatic && other.isStatic)\n                                ? col\n                                : col.reverse();\n                            col2.source.pos = col2.source.pos.add(\n                                col2.displacement,\n                            );\n                            col2.source.transform = calcTransform(\n                                col2.source,\n                            );\n                        }\n\n                        col.resolved = true;\n                        this.trigger(\"physicsResolve\", col);\n                        other.trigger(\"physicsResolve\", col.reverse());\n                    },\n                );\n\n                this.onPhysicsResolve((col) => {\n                    if (game.gravity) {\n                        if (col.isBottom() && this.isFalling()) {\n                            this.vel = this.vel.reject(\n                                game.gravity.unit(),\n                            );\n                            curPlatform = col.target as GameObj<\n                                PosComp | BodyComp | AreaComp\n                            >;\n                            lastPlatformPos = col.target.pos;\n                            if (willFall) {\n                                willFall = false;\n                            } else {\n                                this.trigger(\"ground\", curPlatform);\n                            }\n                        } else if (col.isTop() && this.isJumping()) {\n                            this.vel = this.vel.reject(\n                                game.gravity.unit(),\n                            );\n                            this.trigger(\"headbutt\", col.target);\n                        }\n                    }\n                });\n            }\n        },\n\n        update(this: GameObj<PosComp | BodyComp | AreaComp>) {\n            if (game.gravity && !this.isStatic) {\n                if (willFall) {\n                    curPlatform = null;\n                    lastPlatformPos = null;\n                    this.trigger(\"fallOff\");\n                    willFall = false;\n                }\n\n                let addGravity = true;\n\n                if (curPlatform) {\n                    if (\n                        // TODO: this prevents from falling when on edge\n                        !this.isColliding(curPlatform)\n                        || !curPlatform.exists()\n                        || !curPlatform.is(\"body\")\n                    ) {\n                        willFall = true;\n                    } else {\n                        if (\n                            !curPlatform.pos.eq(lastPlatformPos)\n                            && opt.stickToPlatform !== false\n                        ) {\n                            this.moveBy(\n                                curPlatform.pos.sub(lastPlatformPos),\n                            );\n                        }\n                        lastPlatformPos = curPlatform.pos;\n                        addGravity = false;\n                    }\n                }\n\n                if (addGravity) {\n                    const prevVel = this.vel.clone();\n\n                    // Apply gravity\n                    this.vel = this.vel.add(\n                        game.gravity.scale(this.gravityScale * k.dt()),\n                    );\n\n                    // Clamp velocity\n                    const maxVel = opt.maxVelocity ?? MAX_VEL;\n                    if (this.vel.slen() > maxVel * maxVel) {\n                        this.vel = this.vel.unit().scale(maxVel);\n                    }\n\n                    if (\n                        prevVel.dot(game.gravity) < 0\n                        && this.vel.dot(game.gravity) >= 0\n                    ) {\n                        this.trigger(\"fall\");\n                    }\n                }\n            }\n\n            this.vel.x *= 1 - this.drag;\n            this.vel.y *= 1 - this.drag;\n\n            this.move(this.vel);\n        },\n\n        onPhysicsResolve(this: GameObj, action) {\n            return this.on(\"physicsResolve\", action);\n        },\n\n        onBeforePhysicsResolve(this: GameObj, action) {\n            return this.on(\"beforePhysicsResolve\", action);\n        },\n\n        curPlatform(): GameObj | null {\n            return curPlatform;\n        },\n\n        isGrounded() {\n            return curPlatform !== null;\n        },\n\n        isFalling(): boolean {\n            return this.vel.dot(k.getGravityDirection()) > 0;\n        },\n\n        isJumping(): boolean {\n            return this.vel.dot(k.getGravityDirection()) < 0;\n        },\n\n        jump(force: number) {\n            curPlatform = null;\n            lastPlatformPos = null;\n            this.vel = k.getGravityDirection().scale(\n                -force || -this.jumpForce,\n            );\n        },\n\n        onGround(this: GameObj, action: () => void): KEventController {\n            return this.on(\"ground\", action);\n        },\n\n        onFall(this: GameObj, action: () => void): KEventController {\n            return this.on(\"fall\", action);\n        },\n\n        onFallOff(this: GameObj, action: () => void): KEventController {\n            return this.on(\"fallOff\", action);\n        },\n\n        onHeadbutt(this: GameObj, action: () => void): KEventController {\n            return this.on(\"headbutt\", action);\n        },\n\n        inspect() {\n            return `gravityScale: ${this.gravityScale}x`\n        }\n    };\n}\n", "import type { Comp, GameObj } from \"../../types\";\nimport type { KEventController } from \"../../utils\";\nimport type { BodyComp } from \"./body\";\n\n/**\n * The {@link doubleJump `doubleJump()`} component.\n *\n * @group Component Types\n */\nexport interface DoubleJumpComp extends Comp {\n    /**\n     * Number of jumps allowed.\n     */\n    numJumps: number;\n    /**\n     * Performs double jump (the initial jump only happens if player is grounded).\n     */\n    doubleJump(force?: number): void;\n    /**\n     * Register an event that runs when the object performs the second jump when double jumping.\n     */\n    onDoubleJump(action: () => void): KEventController;\n}\n\nexport function doubleJump(numJumps: number = 2): DoubleJumpComp {\n    let jumpsLeft = numJumps;\n    return {\n        id: \"doubleJump\",\n        require: [\"body\"],\n        numJumps: numJumps,\n        add(this: GameObj<BodyComp | DoubleJumpComp>) {\n            this.onGround(() => {\n                jumpsLeft = this.numJumps;\n            });\n        },\n        doubleJump(\n            this: GameObj<BodyComp | DoubleJumpComp>,\n            force?: number,\n        ) {\n            if (jumpsLeft <= 0) {\n                return;\n            }\n            if (jumpsLeft < this.numJumps) {\n                this.trigger(\"doubleJump\");\n            }\n            jumpsLeft--;\n            this.jump(force);\n        },\n        onDoubleJump(this: GameObj, action: () => void): KEventController {\n            return this.on(\"doubleJump\", action);\n        },\n        inspect(this: GameObj<BodyComp | DoubleJumpComp>) {\n            return `jumpsLeft: ${jumpsLeft}`;\n        },\n    };\n}\n", "import type { Vec2 } from \"../../math\";\nimport type { Anchor, Comp } from \"../../types\";\n\n/**\n * The {@link anchor `anchor()`} component.\n *\n * @group Component Types\n */\nexport interface AnchorComp extends Comp {\n    /**\n     * Anchor point for render.\n     */\n    anchor: Anchor | Vec2;\n}\n\nexport function anchor(o: Anchor | Vec2): AnchorComp {\n    if (!o) {\n        throw new Error(\"Please define an anchor\");\n    }\n    return {\n        id: \"anchor\",\n        anchor: o,\n        inspect() {\n            if (typeof this.anchor === \"string\") {\n                return `anchor: ` + this.anchor;\n            } else {\n                return `anchor: ` + this.anchor.toString();\n            }\n        },\n    };\n}\n", "import type { Comp } from \"../../types\";\n\n/**\n * The {@link fixed `fixed()`} component.\n *\n * @group Component Types\n */\nexport interface FixedComp extends Comp {\n    /**\n     * If the obj is unaffected by camera\n     */\n    fixed: boolean;\n}\n\nexport function fixed(): FixedComp {\n    return {\n        id: \"fixed\",\n        fixed: true,\n    };\n}\n", "import { Vec2, vec2 } from \"../../math\";\nimport type { Comp, GameObj } from \"../../types\";\nimport type { PosComp } from \"./pos\";\n\n/**\n * The {@link follow `follow()`} component.\n *\n * @group Component Types\n */\nexport interface FollowComp extends Comp {\n    follow: {\n        obj: GameObj;\n        offset: Vec2;\n    };\n}\n\nexport function follow(obj: GameObj, offset?: Vec2): FollowComp {\n    return {\n        id: \"follow\",\n        require: [\"pos\"],\n        follow: {\n            obj: obj,\n            offset: offset ?? vec2(0),\n        },\n        add(this: GameObj<FollowComp | PosComp>) {\n            if (obj.exists()) {\n                this.pos = this.follow.obj.pos.add(this.follow.offset);\n            }\n        },\n        update(this: GameObj<FollowComp | PosComp>) {\n            if (obj.exists()) {\n                this.pos = this.follow.obj.pos.add(this.follow.offset);\n            }\n        },\n    };\n}\n", "import { getKaboomContext } from \"../../kaboom\";\nimport type { Comp } from \"../../types\";\n\n/**\n * The {@link layer `layer()`} component.\n *\n * @group Component Types\n */\nexport interface LayerComp extends Comp {\n    get layerIndex(): number;\n    /**\n     * Get the name of the current layer the object is assigned to.\n     */\n    get layer(): string;\n    /**\n     * Set the name of the layer the object should be assigned to.\n     */\n    set layer(name: string);\n}\n\nexport function layer(layer: string): LayerComp {\n    const k = getKaboomContext(this);\n    const { game } = k._k;\n\n    let _layerIndex = game.layers.indexOf(layer);\n    return {\n        id: \"layer\",\n        get layerIndex() {\n            return _layerIndex;\n        },\n        get layer(): string {\n            return game.layers[_layerIndex];\n        },\n        set layer(value: string) {\n            _layerIndex = game.layers.indexOf(value);\n            if (_layerIndex == -1) throw Error(\"Invalid layer name\");\n        },\n        inspect() {\n            return `layer: ${this.layer}`;\n        },\n    };\n}\n", "import { Vec2 } from \"../../math\";\nimport type { EmptyComp, GameObj } from \"../../types\";\nimport type { PosComp } from \"./pos\";\n\nexport function move(dir: number | Vec2, speed: number): EmptyComp {\n    const d = typeof dir === \"number\" ? Vec2.fromAngle(dir) : dir.unit();\n    return {\n        id: \"move\",\n        require: [\"pos\"],\n        update(this: GameObj<PosComp>) {\n            this.move(d.scale(speed));\n        },\n    };\n}\n", "import { DEF_OFFSCREEN_DIS } from \"../../constants\";\nimport { getKaboomContext } from \"../../kaboom\";\nimport { Rect, vec2 } from \"../../math\";\nimport type { Comp, GameObj } from \"../../types\";\nimport type { KEventController } from \"../../utils\";\nimport type { PosComp } from \"./pos\";\n\n/**\n * The {@link offscreen `offscreen()`} component.\n *\n * @group Component Types\n */\nexport interface OffScreenComp extends Comp {\n    /**\n     * If object is currently out of view.\n     */\n    isOffScreen(): boolean;\n    /**\n     * Register an event that runs when object goes out of view.\n     */\n    onExitScreen(action: () => void): KEventController;\n    /**\n     * Register an event that runs when object enters view.\n     */\n    onEnterScreen(action: () => void): KEventController;\n}\n\n/**\n * Options for {@link offscreen `offscreen()`} component.\n *\n * @group Component Types\n */\nexport interface OffScreenCompOpt {\n    /**\n     * If hide object when out of view.\n     */\n    hide?: boolean;\n    /**\n     * If pause object when out of view.\n     */\n    pause?: boolean;\n    /**\n     * If destroy object when out of view.\n     */\n    destroy?: boolean;\n    /**\n     * The distance when out of view is triggered (default 200).\n     *\n     * @since v3000.0\n     */\n    distance?: number;\n}\n\nexport function offscreen(opt: OffScreenCompOpt = {}): OffScreenComp {\n    const k = getKaboomContext(this);\n    const distance = opt.distance ?? DEF_OFFSCREEN_DIS;\n    let isOut = false;\n\n    return {\n        id: \"offscreen\",\n        require: [\"pos\"],\n        isOffScreen(this: GameObj<PosComp>): boolean {\n            const pos = this.screenPos();\n            const screenRect = new Rect(vec2(0), k.width(), k.height());\n            return !k.testRectPoint(screenRect, pos)\n                && screenRect.sdistToPoint(pos) > distance * distance;\n        },\n        onExitScreen(this: GameObj, action: () => void): KEventController {\n            return this.on(\"exitView\", action);\n        },\n        onEnterScreen(this: GameObj, action: () => void): KEventController {\n            return this.on(\"enterView\", action);\n        },\n        update(this: GameObj) {\n            if (this.isOffScreen()) {\n                if (!isOut) {\n                    this.trigger(\"exitView\");\n                    isOut = true;\n                }\n                if (opt.hide) this.hidden = true;\n                if (opt.pause) this.paused = true;\n                if (opt.destroy) this.destroy();\n            } else {\n                if (isOut) {\n                    this.trigger(\"enterView\");\n                    isOut = false;\n                }\n                if (opt.hide) this.hidden = false;\n                if (opt.pause) this.paused = false;\n            }\n        },\n    };\n}\n", "import { getKaboomContext } from \"../../kaboom\";\nimport { Vec2, vec2, type Vec2Args } from \"../../math\";\nimport type { Comp, GameObj } from \"../../types\";\nimport type { FixedComp } from \"./fixed\";\n\n/**\n * The {@link pos `pos()`} component.\n *\n * @group Component Types\n */\nexport interface PosComp extends Comp {\n    /**\n     * Object's current world position.\n     */\n    pos: Vec2;\n    /**\n     * Move how many pixels per second. If object is 'solid', it won't move into other 'solid' objects.\n     */\n    move(xVel: number, yVel: number): void;\n    move(vel: Vec2): void;\n    /**\n     * Move how many pixels, without multiplying dt, but still checking for 'solid'.\n     */\n    moveBy(dx: number, dy: number): void;\n    moveBy(d: Vec2): void;\n    /**\n     * Move to a spot with a speed (pixels per second), teleports if speed is not given.\n     */\n    moveTo(dest: Vec2, speed?: number): void;\n    moveTo(x: number, y: number, speed?: number): void;\n    /**\n     * Get the position of the object on the screen.\n     */\n    screenPos(): Vec2;\n    /**\n     * Get the position of the object relative to the root.\n     */\n    worldPos(): Vec2;\n    /**\n     * Transform a local point (relative to this) to a screen point (relative to the camera)\n     */\n    toScreen(this: GameObj<PosComp | FixedComp>, p: Vec2);\n    /**\n     * Transform a local point (relative to this) to a world point (relative to the root)\n     * @since v3001.0\n     */\n    toWorld(this: GameObj<PosComp>, p: Vec2);\n    /**\n     * Transform a screen point (relative to the camera) to a local point (relative to this)\n     * @since v3001.0\n     */\n    fromScreen(this: GameObj<PosComp | FixedComp>, p: Vec2);\n    /**\n     * Transform a world point (relative to the root) to a local point (relative to this)\n     * @since v3001.0\n     */\n    fromWorld(this: GameObj<PosComp>, p: Vec2);\n    /**\n     * Transform a point relative to this to a point relative to other\n     * @since v3001.0\n     */\n    toOther(this: GameObj<PosComp>, other: GameObj<PosComp>, p: Vec2);\n    /**\n     * Transform a point relative to other to a point relative to this\n     * @since v3001.0\n     */\n    fromOther(this: GameObj<PosComp>, other: GameObj<PosComp>, p: Vec2);\n}\n\nfunction isFixed(obj: GameObj) {\n    if (obj.fixed) return true;\n    return obj.parent ? isFixed(obj.parent) : false;\n}\n\nexport function pos(...args: Vec2Args): PosComp {\n    const k = getKaboomContext(this);\n    const { getViewportScale } = k._k;\n\n    return {\n        id: \"pos\",\n        pos: vec2(...args),\n\n        moveBy(...args: Vec2Args) {\n            this.pos = this.pos.add(vec2(...args));\n        },\n\n        // move with velocity (pixels per second)\n        move(...args: Vec2Args) {\n            this.moveBy(vec2(...args).scale(k.dt()));\n        },\n\n        // move to a destination, with optional speed\n        moveTo(...args) {\n            if (\n                typeof args[0] === \"number\" && typeof args[1] === \"number\"\n            ) {\n                return this.moveTo(vec2(args[0], args[1]), args[2]);\n            }\n            const dest = args[0];\n            const speed = args[1];\n            if (speed === undefined) {\n                this.pos = vec2(dest);\n                return;\n            }\n            const diff = dest.sub(this.pos);\n            if (diff.len() <= speed * k.dt()) {\n                this.pos = vec2(dest);\n                return;\n            }\n            this.move(diff.unit().scale(speed));\n        },\n\n        // Get the position of the object relative to the root\n        worldPos(this: GameObj<PosComp>, pos: Vec2 | null = null): Vec2 {\n            if (pos) {\n                this.pos = this.pos.add(this.fromWorld(pos));\n            } else {\n                return this.parent\n                    ? this.parent.transform.multVec2(this.pos)\n                    : this.pos;\n            }\n        },\n\n        // Transform a local point to a world point\n        toWorld(this: GameObj<PosComp>, p: Vec2): Vec2 {\n            return this.parent\n                ? this.parent.transform.multVec2(this.pos.add(p))\n                : this.pos.add(p);\n        },\n\n        // Transform a world point (relative to the root) to a local point (relative to this)\n        fromWorld(this: GameObj<PosComp>, p: Vec2): Vec2 {\n            return this.parent\n                ? this.parent.transform.invert().multVec2(p).sub(this.pos)\n                : p.sub(this.pos);\n        },\n\n        // Transform a screen point (relative to the camera) to a local point (relative to this)\n        screenPos(\n            this: GameObj<PosComp | FixedComp>,\n            pos: Vec2 | null = null,\n        ): Vec2 {\n            if (pos) {\n                this.pos = this.pos.add(this.fromScreen(pos));\n            } else {\n                const pos = this.worldPos();\n                return isFixed(this)\n                    ? pos\n                    : k.toScreen(pos);\n            }\n        },\n\n        // Transform a local point (relative to this) to a screen point (relative to the camera)\n        toScreen(this: GameObj<PosComp | FixedComp>, p: Vec2): Vec2 {\n            const pos = this.toWorld(p);\n            return isFixed(this)\n                ? pos\n                : k.toScreen(pos);\n        },\n\n        // Transform a screen point (relative to the camera) to a local point (relative to this)\n        fromScreen(this: GameObj<PosComp>, p: Vec2): Vec2 {\n            return isFixed(this)\n                ? this.fromWorld(p)\n                : this.fromWorld(k.toWorld(p));\n        },\n\n        // Transform a point relative to this to a point relative to other\n        toOther(this: GameObj<PosComp>, other: GameObj<PosComp>, p: Vec2) {\n            return other.fromWorld(this.toWorld(p));\n        },\n\n        // Transform a point relative to other to a point relative to this\n        fromOther(this: GameObj<PosComp>, other: GameObj<PosComp>, p: Vec2) {\n            return other.toOther(this, p);\n        },\n\n        inspect() {\n            return `pos: (${Math.round(this.pos.x)}x, ${Math.round(this.pos.y)}y)`;\n        },\n\n        drawInspect() {\n            k.drawCircle({\n                color: k.rgb(255, 0, 0),\n                radius: 4 / getViewportScale(),\n            });\n        },\n    };\n}\n", "import type { Comp } from \"../../types\";\n\n/**\n * The {@link rotate `rotate()`} component.\n *\n * @group Component Types\n */\nexport interface RotateComp extends Comp {\n    /**\n     * Angle in degrees.\n     */\n    angle: number;\n    /**\n     * Rotate in degrees.\n     */\n    rotateBy(angle: number): void;\n    /**\n     * Rotate to a degree (like directly assign to .angle)\n     *\n     * @since v3000.0\n     */\n    rotateTo(s: number): void;\n}\n\nexport function rotate(r: number): RotateComp {\n    return {\n        id: \"rotate\",\n        angle: r ?? 0,\n        rotateBy(angle: number) {\n            this.angle += angle;\n        },\n        rotateTo(angle: number) {\n            this.angle = angle;\n        },\n        inspect() {\n            return `angle: ${Math.round(this.angle)}`;\n        },\n    };\n}\n", "import { getKaboomContext } from \"../../kaboom\";\nimport { type Vec2, vec2, type Vec2Args } from \"../../math\";\nimport type { Comp } from \"../../types\";\n\n/**\n * The {@link scale `scale()`} component.\n *\n * @group Component Types\n */\nexport interface ScaleComp extends Comp {\n    scale: Vec2;\n    scaleTo(s: number): void;\n    scaleTo(s: Vec2): void;\n    scaleTo(sx: number, sy: number): void;\n    scaleBy(s: number): void;\n    scaleBy(s: Vec2): void;\n    scaleBy(sx: number, sy: number): void;\n}\n\n// TODO: allow single number assignment\nexport function scale(...args: Vec2Args): ScaleComp {\n    const k = getKaboomContext(this);\n    const { toFixed } = k._k;\n\n    if (args.length === 0) {\n        return scale(1);\n    }\n    return {\n        id: \"scale\",\n        scale: vec2(...args),\n        scaleTo(...args: Vec2Args) {\n            this.scale = vec2(...args);\n        },\n        scaleBy(...args: Vec2Args) {\n            this.scale.scale(vec2(...args));\n        },\n        inspect() {\n            if (this.scale.x == this.scale.y) return `scale: ${this.scale.x.toFixed(1)}x`;\n            else return `scale: (${this.scale.x.toFixed(1)}x, ${\n                this.scale.y.toFixed(1)\n            }y)`;\n        },\n    };\n}\n", "import type { Comp } from \"../../types\";\n\n/**\n * The {@link z `z()`} component.\n *\n * @group Component Types\n */\nexport interface ZComp extends Comp {\n    /**\n     * Defines the z-index of this game obj\n     */\n    z: number;\n}\n\nexport function z(z: number): ZComp {\n    return {\n        id: \"z\",\n        z: z,\n        inspect() {\n            return `z: ${this.z}`;\n        },\n    };\n}\n", "const VERSION = \"3001.0.0\";\n\nimport initApp from \"./app\";\nimport initGfx, { BatchRenderer, FrameBuffer, Shader, Texture } from \"./gfx\";\n\nimport {\n    Asset,\n    AssetBucket,\n    fetchArrayBuffer,\n    fetchJSON,\n    fetchText,\n    loadImg,\n} from \"./assets\";\n\nimport {\n    ASCII_CHARS,\n    BG_GRID_SIZE,\n    COMP_DESC,\n    COMP_EVENTS,\n    DBG_FONT,\n    DEF_ANCHOR,\n    DEF_FONT,\n    DEF_FONT_FILTER,\n    DEF_FRAG,\n    DEF_HASH_GRID_SIZE,\n    DEF_TEXT_CACHE_SIZE,\n    DEF_VERT,\n    FONT_ATLAS_HEIGHT,\n    FONT_ATLAS_WIDTH,\n    FRAG_TEMPLATE,\n    LOG_MAX,\n    LOG_TIME,\n    MAX_BATCHED_INDICES,\n    MAX_BATCHED_VERTS,\n    MAX_TEXT_CACHE_SIZE,\n    SPRITE_ATLAS_HEIGHT,\n    SPRITE_ATLAS_WIDTH,\n    TEXT_STYLE_RE,\n    UV_PAD,\n    VERT_TEMPLATE,\n    VERTEX_FORMAT,\n} from \"./constants\";\n\nimport {\n    chance,\n    choose,\n    chooseMultiple,\n    Circle,\n    clamp,\n    Color,\n    curveLengthApproximation,\n    deg2rad,\n    easingCubicBezier,\n    easingLinear,\n    easingSteps,\n    Ellipse,\n    evaluateBezier,\n    evaluateBezierFirstDerivative,\n    evaluateBezierSecondDerivative,\n    evaluateCatmullRom,\n    evaluateCatmullRomFirstDerivative,\n    evaluateQuadratic,\n    evaluateQuadraticFirstDerivative,\n    evaluateQuadraticSecondDerivative,\n    hsl2rgb,\n    isConvex,\n    lerp,\n    Line,\n    map,\n    mapc,\n    Mat4,\n    normalizedCurve,\n    Point,\n    Polygon,\n    Quad,\n    quad,\n    rad2deg,\n    rand,\n    randi,\n    randSeed,\n    raycastGrid,\n    type RaycastHit as BaseRaycastHit,\n    Rect,\n    rgb,\n    RNG,\n    sat,\n    shuffle,\n    testCirclePolygon,\n    testLineCircle,\n    testLineLine,\n    testLinePoint,\n    testRectLine,\n    testRectPoint,\n    testRectRect,\n    triangulate,\n    Vec2,\n    vec2,\n    type Vec2Args,\n    wave,\n} from \"./math\";\n\nimport { NavMesh } from \"./math/navigationmesh\";\n\nimport easings from \"./easings\";\nimport TexPacker from \"./texPacker\";\n\nimport {\n    BinaryHeap,\n    dataURLToArrayBuffer,\n    download,\n    downloadBlob,\n    downloadJSON,\n    downloadText,\n    getErrorMessage,\n    getFileName,\n    isClass,\n    isDataURL,\n    KEvent,\n    KEventController,\n    KEventHandler,\n    overload2,\n    Registry,\n    runes,\n    uid,\n} from \"./utils\";\n\nimport { FontData } from \"./fonts\";\n\nimport type {\n    Anchor,\n    AreaComp,\n    AsepriteData,\n    AudioPlay,\n    AudioPlayOpt,\n    BitmapFontData,\n    BoomOpt,\n    ButtonsDef,\n    CharTransform,\n    Comp,\n    CompList,\n    Debug,\n    DrawBezierOpt,\n    DrawCircleOpt,\n    DrawCurveOpt,\n    DrawEllipseOpt,\n    DrawLineOpt,\n    DrawLinesOpt,\n    DrawPolygonOpt,\n    DrawRectOpt,\n    DrawSpriteOpt,\n    DrawTextOpt,\n    DrawTextureOpt,\n    DrawTriangleOpt,\n    DrawUVQuadOpt,\n    FixedComp,\n    FormattedChar,\n    FormattedText,\n    GameObj,\n    GetOpt,\n    GfxFont,\n    ImageSource,\n    InternalCtx,\n    KaboomCtx,\n    KaboomOpt,\n    KaboomPlugin,\n    Key,\n    LevelComp,\n    LevelOpt,\n    LoadBitmapFontOpt,\n    LoadFontOpt,\n    LoadSpriteOpt,\n    LoadSpriteSrc,\n    MaskComp,\n    MergePlugins,\n    MouseButton,\n    MusicData,\n    NineSlice,\n    Outline,\n    PathFindOpt,\n    PeditFile,\n    PluginList,\n    PosComp,\n    QueryOpt,\n    Recording,\n    RenderProps,\n    RotateComp,\n    ScaleComp,\n    SceneDef,\n    SceneName,\n    ShaderData,\n    SpriteAnims,\n    SpriteAtlasData,\n    Tag,\n    TexFilter,\n    TextAlign,\n    Uniform,\n    Vertex,\n} from \"./types\";\n\nimport {\n    agent,\n    anchor,\n    area,\n    body,\n    circle,\n    color,\n    doubleJump,\n    drawon,\n    fadeIn,\n    fixed,\n    follow,\n    health,\n    layer,\n    lifespan,\n    mask,\n    move,\n    named,\n    navigation,\n    offscreen,\n    opacity,\n    outline,\n    particles,\n    patrol,\n    polygon,\n    pos,\n    raycast,\n    rect,\n    rotate,\n    scale,\n    sentry,\n    shader,\n    sprite,\n    state,\n    stay,\n    text,\n    tile,\n    timer,\n    uvquad,\n    z,\n} from \"./components\";\n\nimport beanSpriteSrc from \"./assets/bean.png\";\nimport boomSpriteSrc from \"./assets/boom.png\";\nimport burpSoundSrc from \"./assets/burp.mp3\";\nimport kaSpriteSrc from \"./assets/ka.png\";\n\n// for import types from package\nexport type * from \"./types\";\n\n// convert anchor string to a vec2 offset\nexport function anchorPt(orig: Anchor | Vec2): Vec2 {\n    switch (orig) {\n        case \"topleft\":\n            return new Vec2(-1, -1);\n        case \"top\":\n            return new Vec2(0, -1);\n        case \"topright\":\n            return new Vec2(1, -1);\n        case \"left\":\n            return new Vec2(-1, 0);\n        case \"center\":\n            return new Vec2(0, 0);\n        case \"right\":\n            return new Vec2(1, 0);\n        case \"botleft\":\n            return new Vec2(-1, 1);\n        case \"bot\":\n            return new Vec2(0, 1);\n        case \"botright\":\n            return new Vec2(1, 1);\n        default:\n            return orig;\n    }\n}\n\nfunction alignPt(align: TextAlign): number {\n    switch (align) {\n        case \"left\":\n            return 0;\n        case \"center\":\n            return 0.5;\n        case \"right\":\n            return 1;\n        default:\n            return 0;\n    }\n}\n\nfunction createEmptyAudioBuffer(ctx: AudioContext) {\n    return ctx.createBuffer(1, 1, 44100);\n}\n\nlet ctx: KaboomCtx;\n\n// TODO: A better way to detect KaboomCtx\nexport const isKaboomCtx = (obj: any): obj is KaboomCtx => {\n    return obj && obj[\"loadAseprite\"];\n};\n\nexport const getKaboomContext = (fallBack?: any): KaboomCtx => {\n    if (!ctx) {\n        throw new Error(\n            \"You are trying to access to Kaboom Context before their initialization.\",\n        );\n    }\n\n    if (isKaboomCtx(fallBack)) {\n        return fallBack;\n    }\n\n    return ctx;\n};\n\n/**\n * Initialize KAPLAY context. The starting point of all KAPLAY games.\n *\n * @example\n * ```js\n * // Start KAPLAY with default options (will create a fullscreen canvas under <body>)\n * kaplay()\n *\n * // Init with some options\n * kaplay({\n *     width: 320,\n *     height: 240,\n *     font: \"sans-serif\",\n *     canvas: document.querySelector(\"#mycanvas\"),\n *     background: [ 0, 0, 255, ],\n * })\n *\n * // All KAPLAY functions are imported to global after calling kaplay()\n * add()\n * onUpdate()\n * onKeyPress()\n * vec2()\n *\n * // If you want to prevent KAPLAY from importing all functions to global and use a context handle for all KAPLAY functions\n * const k = kaplay({ global: false })\n *\n * k.add(...)\n * k.onUpdate(...)\n * k.onKeyPress(...)\n * k.vec2(...)\n * ```\n *\n * @group Start\n */\nconst kaplay = <\n    TPlugins extends PluginList<unknown> = [undefined],\n    TButtons extends ButtonsDef = {},\n    TButtonsName extends string = keyof TButtons & string,\n>(\n    gopt: KaboomOpt<TPlugins, TButtons> = {},\n): TPlugins extends [undefined] ? KaboomCtx<TButtons, TButtonsName>\n    : KaboomCtx<TButtons, TButtonsName> & MergePlugins<TPlugins> =>\n{\n    const root = gopt.root ?? document.body;\n\n    // if root is not defined (which falls back to <body>) we assume user is using kaboom on a clean page, and modify <body> to better fit a full screen canvas\n    if (root === document.body) {\n        document.body.style[\"width\"] = \"100%\";\n        document.body.style[\"height\"] = \"100%\";\n        document.body.style[\"margin\"] = \"0px\";\n        document.documentElement.style[\"width\"] = \"100%\";\n        document.documentElement.style[\"height\"] = \"100%\";\n    }\n\n    // create a <canvas> if user didn't provide one\n    const canvas = gopt.canvas\n        ?? root.appendChild(document.createElement(\"canvas\"));\n\n    // global pixel scale\n    const gscale = gopt.scale ?? 1;\n    const fixedSize = gopt.width && gopt.height && !gopt.stretch\n        && !gopt.letterbox;\n\n    // adjust canvas size according to user size / viewport settings\n    if (fixedSize) {\n        canvas.width = gopt.width * gscale;\n        canvas.height = gopt.height * gscale;\n    } else {\n        canvas.width = canvas.parentElement.offsetWidth;\n        canvas.height = canvas.parentElement.offsetHeight;\n    }\n\n    // canvas css styles\n    const styles = [\n        \"outline: none\",\n        \"cursor: default\",\n    ];\n\n    if (fixedSize) {\n        const cw = canvas.width;\n        const ch = canvas.height;\n        styles.push(`width: ${cw}px`);\n        styles.push(`height: ${ch}px`);\n    } else {\n        styles.push(\"width: 100%\");\n        styles.push(\"height: 100%\");\n    }\n\n    if (gopt.crisp) {\n        // chrome only supports pixelated and firefox only supports crisp-edges\n        styles.push(\"image-rendering: pixelated\");\n        styles.push(\"image-rendering: crisp-edges\");\n    }\n\n    canvas.style.cssText = styles.join(\";\");\n\n    const pixelDensity = gopt.pixelDensity || window.devicePixelRatio;\n\n    canvas.width *= pixelDensity;\n    canvas.height *= pixelDensity;\n    // make canvas focusable\n    canvas.tabIndex = 0;\n\n    const fontCacheCanvas = document.createElement(\"canvas\");\n    fontCacheCanvas.width = MAX_TEXT_CACHE_SIZE;\n    fontCacheCanvas.height = MAX_TEXT_CACHE_SIZE;\n    const fontCacheC2d = fontCacheCanvas.getContext(\"2d\", {\n        willReadFrequently: true,\n    });\n\n    const app = initApp({\n        canvas: canvas,\n        touchToMouse: gopt.touchToMouse,\n        gamepads: gopt.gamepads,\n        pixelDensity: gopt.pixelDensity,\n        maxFPS: gopt.maxFPS,\n        buttons: gopt.buttons,\n    });\n\n    const gc: Array<() => void> = [];\n\n    const gl = app.canvas\n        .getContext(\"webgl\", {\n            antialias: true,\n            depth: true,\n            stencil: true,\n            alpha: true,\n            preserveDrawingBuffer: true,\n        });\n\n    const ggl = initGfx(gl, {\n        texFilter: gopt.texFilter,\n    });\n\n    const gfx = (() => {\n        const defShader = makeShader(DEF_VERT, DEF_FRAG);\n\n        // a 1x1 white texture to draw raw shapes like rectangles and polygons\n        // we use a texture for those so we can use only 1 pipeline for drawing sprites + shapes\n        const emptyTex = Texture.fromImage(\n            ggl,\n            new ImageData(new Uint8ClampedArray([255, 255, 255, 255]), 1, 1),\n        );\n\n        const frameBuffer = (gopt.width && gopt.height)\n            ? new FrameBuffer(\n                ggl,\n                gopt.width * pixelDensity * gscale,\n                gopt.height * pixelDensity * gscale,\n            )\n            : new FrameBuffer(\n                ggl,\n                gl.drawingBufferWidth,\n                gl.drawingBufferHeight,\n            );\n\n        let bgColor: null | Color = null;\n        let bgAlpha = 1;\n\n        if (gopt.background) {\n            bgColor = rgb(gopt.background);\n            bgAlpha = Array.isArray(gopt.background)\n                ? gopt.background[3]\n                : 1;\n            gl.clearColor(\n                bgColor.r / 255,\n                bgColor.g / 255,\n                bgColor.b / 255,\n                bgAlpha ?? 1,\n            );\n        }\n\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(\n            gl.SRC_ALPHA,\n            gl.ONE_MINUS_SRC_ALPHA,\n            gl.ONE,\n            gl.ONE_MINUS_SRC_ALPHA,\n        );\n\n        const renderer = new BatchRenderer(\n            ggl,\n            VERTEX_FORMAT,\n            MAX_BATCHED_VERTS,\n            MAX_BATCHED_INDICES,\n        );\n\n        // a checkerboard texture used for the default background\n        const bgTex = Texture.fromImage(\n            ggl,\n            new ImageData(\n                new Uint8ClampedArray([\n                    128,\n                    128,\n                    128,\n                    255,\n                    190,\n                    190,\n                    190,\n                    255,\n                    190,\n                    190,\n                    190,\n                    255,\n                    128,\n                    128,\n                    128,\n                    255,\n                ]),\n                2,\n                2,\n            ),\n            {\n                wrap: \"repeat\",\n                filter: \"nearest\",\n            },\n        );\n\n        return {\n            // how many draw calls we're doing last frame, this is the number we give to users\n            lastDrawCalls: 0,\n\n            // gfx states\n            defShader: defShader,\n            defTex: emptyTex,\n            frameBuffer: frameBuffer,\n            postShader: null,\n            postShaderUniform: null,\n            renderer: renderer,\n\n            transform: new Mat4(),\n            transformStack: [],\n\n            bgTex: bgTex,\n            bgColor: bgColor,\n            bgAlpha: bgAlpha,\n\n            width: gopt.width\n                ?? gl.drawingBufferWidth / pixelDensity / gscale,\n            height: gopt.height\n                ?? gl.drawingBufferHeight / pixelDensity / gscale,\n\n            viewport: {\n                x: 0,\n                y: 0,\n                width: gl.drawingBufferWidth,\n                height: gl.drawingBufferHeight,\n            },\n\n            fixed: false,\n        };\n    })();\n\n    class SpriteData {\n        tex: Texture;\n        frames: Quad[] = [new Quad(0, 0, 1, 1)];\n        anims: SpriteAnims = {};\n        slice9: NineSlice | null = null;\n\n        constructor(\n            tex: Texture,\n            frames?: Quad[],\n            anims: SpriteAnims = {},\n            slice9: NineSlice = null,\n        ) {\n            this.tex = tex;\n            if (frames) this.frames = frames;\n            this.anims = anims;\n            this.slice9 = slice9;\n        }\n\n        get width() {\n            return this.tex.width * this.frames[0].w;\n        }\n\n        get height() {\n            return this.tex.height * this.frames[0].h;\n        }\n\n        static from(\n            src: LoadSpriteSrc,\n            opt: LoadSpriteOpt = {},\n        ): Promise<SpriteData> {\n            return typeof src === \"string\"\n                ? SpriteData.fromURL(src, opt)\n                : Promise.resolve(SpriteData.fromImage(src, opt));\n        }\n\n        static fromImage(\n            data: ImageSource,\n            opt: LoadSpriteOpt = {},\n        ): SpriteData {\n            const [tex, quad] = assets.packer.add(data);\n            const frames = opt.frames\n                ? opt.frames.map((f) =>\n                    new Quad(\n                        quad.x + f.x * quad.w,\n                        quad.y + f.y * quad.h,\n                        f.w * quad.w,\n                        f.h * quad.h,\n                    )\n                )\n                : slice(\n                    opt.sliceX || 1,\n                    opt.sliceY || 1,\n                    quad.x,\n                    quad.y,\n                    quad.w,\n                    quad.h,\n                );\n            return new SpriteData(tex, frames, opt.anims, opt.slice9);\n        }\n\n        static fromURL(\n            url: string,\n            opt: LoadSpriteOpt = {},\n        ): Promise<SpriteData> {\n            return loadImg(url).then((img) => SpriteData.fromImage(img, opt));\n        }\n    }\n\n    class SoundData {\n        buf: AudioBuffer;\n\n        constructor(buf: AudioBuffer) {\n            this.buf = buf;\n        }\n\n        static fromArrayBuffer(buf: ArrayBuffer): Promise<SoundData> {\n            return new Promise((resolve, reject) =>\n                audio.ctx.decodeAudioData(buf, resolve, reject)\n            ).then((buf: AudioBuffer) => new SoundData(buf));\n        }\n\n        static fromURL(url: string): Promise<SoundData> {\n            if (isDataURL(url)) {\n                return SoundData.fromArrayBuffer(dataURLToArrayBuffer(url));\n            } else {\n                return fetchArrayBuffer(url).then((buf) =>\n                    SoundData.fromArrayBuffer(buf)\n                );\n            }\n        }\n    }\n\n    const audio = (() => {\n        const ctx = new (\n            window.AudioContext || (window as any).webkitAudioContext\n        )() as AudioContext;\n\n        const masterNode = ctx.createGain();\n        masterNode.connect(ctx.destination);\n\n        // by default browsers can only load audio async, we don't deal with that and just start with an empty audio buffer\n        const burpSnd = new SoundData(createEmptyAudioBuffer(ctx));\n\n        // load that burp sound\n        ctx.decodeAudioData(burpSoundSrc.buffer.slice(0)).then((buf) => {\n            burpSnd.buf = buf;\n        }).catch((err) => {\n            console.error(\"Failed to load burp: \", err);\n        });\n\n        return {\n            ctx,\n            masterNode,\n            burpSnd,\n        };\n    })();\n\n    const assets = {\n        urlPrefix: \"\",\n        // asset holders\n        sprites: new AssetBucket<SpriteData>(),\n        fonts: new AssetBucket<FontData>(),\n        bitmapFonts: new AssetBucket<BitmapFontData>(),\n        sounds: new AssetBucket<SoundData>(),\n        shaders: new AssetBucket<ShaderData>(),\n        custom: new AssetBucket<any>(),\n        music: {},\n        packer: new TexPacker(ggl, SPRITE_ATLAS_WIDTH, SPRITE_ATLAS_HEIGHT),\n        // if we finished initially loading all assets\n        loaded: false,\n    };\n\n    function fixURL<D>(url: D): D {\n        if (typeof url !== \"string\" || isDataURL(url)) return url;\n        return assets.urlPrefix + url as D;\n    }\n\n    const game = {\n        // general events\n        events: new KEventHandler<{\n            mouseMove: [];\n            mouseDown: [MouseButton];\n            mousePress: [MouseButton];\n            mouseRelease: [MouseButton];\n            charInput: [string];\n            keyPress: [Key];\n            keyDown: [Key];\n            keyPressRepeat: [Key];\n            keyRelease: [Key];\n            touchStart: [Vec2, Touch];\n            touchMove: [Vec2, Touch];\n            touchEnd: [Vec2, Touch];\n            gamepadButtonDown: [string];\n            gamepadButtonPress: [string];\n            gamepadButtonRelease: [string];\n            gamepadStick: [string, Vec2];\n            gamepadConnect: [Gamepad];\n            gamepadDisconnect: [Gamepad];\n            scroll: [Vec2];\n            add: [GameObj];\n            destroy: [GameObj];\n            load: [];\n            loading: [number];\n            error: [Error];\n            input: [];\n            frameEnd: [];\n            resize: [];\n            sceneLeave: [string];\n        }>(),\n\n        // object events\n        objEvents: new KEventHandler(),\n\n        // root game object\n        root: make([]),\n\n        // misc\n        gravity: null,\n        scenes: {},\n        currentScene: null,\n        layers: null,\n        defaultLayerIndex: 0,\n\n        // on screen log\n        logs: [],\n\n        // camera\n        cam: {\n            pos: null,\n            scale: new Vec2(1),\n            angle: 0,\n            shake: 0,\n            transform: new Mat4(),\n        },\n    };\n\n    game.root.use(timer());\n\n    // wrap individual loaders with global loader counter, for stuff like progress bar\n    function load<T>(prom: Promise<T>): Asset<T> {\n        return assets.custom.add(null, prom);\n    }\n\n    // get current load progress\n    function loadProgress(): number {\n        const buckets = [\n            assets.sprites,\n            assets.sounds,\n            assets.shaders,\n            assets.fonts,\n            assets.bitmapFonts,\n            assets.custom,\n        ];\n        return buckets.reduce((n, bucket) => n + bucket.progress(), 0)\n            / buckets.length;\n    }\n\n    // global load path prefix\n    function loadRoot(path?: string): string {\n        if (path !== undefined) {\n            assets.urlPrefix = path;\n        }\n        return assets.urlPrefix;\n    }\n\n    function loadJSON(name, url) {\n        return assets.custom.add(name, fetchJSON(url));\n    }\n\n    // TODO: pass in null src to store opt for default fonts like \"monospace\"\n    function loadFont(\n        name: string,\n        src: string | BinaryData,\n        opt: LoadFontOpt = {},\n    ): Asset<FontData> {\n        const font = new FontFace(\n            name,\n            typeof src === \"string\" ? `url(${src})` : src,\n        );\n        document.fonts.add(font);\n        return assets.fonts.add(\n            name,\n            font.load().catch((err) => {\n                throw new Error(`Failed to load font from \"${src}\": ${err}`);\n            }).then((face) => new FontData(face, opt)),\n        );\n    }\n\n    // TODO: support outline\n    // TODO: support LoadSpriteSrc\n    function loadBitmapFont(\n        name: string | null,\n        src: string,\n        gw: number,\n        gh: number,\n        opt: LoadBitmapFontOpt = {},\n    ): Asset<BitmapFontData> {\n        return assets.bitmapFonts.add(\n            name,\n            loadImg(src)\n                .then((img) => {\n                    return makeFont(\n                        Texture.fromImage(ggl, img, opt),\n                        gw,\n                        gh,\n                        opt.chars ?? ASCII_CHARS,\n                    );\n                }),\n        );\n    }\n\n    // get an array of frames based on configuration on how to slice the image\n    function slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n        const frames = [];\n        const qw = w / x;\n        const qh = h / y;\n        for (let j = 0; j < y; j++) {\n            for (let i = 0; i < x; i++) {\n                frames.push(\n                    new Quad(\n                        dx + i * qw,\n                        dy + j * qh,\n                        qw,\n                        qh,\n                    ),\n                );\n            }\n        }\n        return frames;\n    }\n\n    // TODO: load synchronously if passed ImageSource\n    function loadSpriteAtlas(\n        src: LoadSpriteSrc,\n        data: SpriteAtlasData | string,\n    ): Asset<Record<string, SpriteData>> {\n        src = fixURL(src);\n        if (typeof data === \"string\") {\n            return load(\n                new Promise((res, rej) => {\n                    fetchJSON(data).then((json) => {\n                        loadSpriteAtlas(src, json).then(res).catch(rej);\n                    });\n                }),\n            );\n        }\n        return load(\n            SpriteData.from(src).then((atlas) => {\n                const map = {};\n                for (const name in data) {\n                    const info = data[name];\n                    const quad = atlas.frames[0];\n                    const w = SPRITE_ATLAS_WIDTH * quad.w;\n                    const h = SPRITE_ATLAS_HEIGHT * quad.h;\n                    const frames = info.frames\n                        ? info.frames.map((f) =>\n                            new Quad(\n                                quad.x + (info.x + f.x) / w * quad.w,\n                                quad.y + (info.y + f.y) / h * quad.h,\n                                f.w / w * quad.w,\n                                f.h / h * quad.h,\n                            )\n                        )\n                        : slice(\n                            info.sliceX || 1,\n                            info.sliceY || 1,\n                            quad.x + info.x / w * quad.w,\n                            quad.y + info.y / h * quad.h,\n                            info.width / w * quad.w,\n                            info.height / h * quad.h,\n                        );\n                    const spr = new SpriteData(atlas.tex, frames, info.anims);\n                    assets.sprites.addLoaded(name, spr);\n                    map[name] = spr;\n                }\n                return map;\n            }),\n        );\n    }\n\n    function createSpriteSheet(\n        images: ImageSource[],\n        opt: LoadSpriteOpt = {},\n    ): SpriteData {\n        const canvas = document.createElement(\"canvas\");\n        const width = images[0].width;\n        const height = images[0].height;\n        canvas.width = width * images.length;\n        canvas.height = height;\n        const c2d = canvas.getContext(\"2d\");\n        images.forEach((img, i) => {\n            if (img instanceof ImageData) {\n                c2d.putImageData(img, i * width, 0);\n            } else {\n                c2d.drawImage(img, i * width, 0);\n            }\n        });\n        const merged = c2d.getImageData(0, 0, images.length * width, height);\n        return SpriteData.fromImage(merged, {\n            ...opt,\n            sliceX: images.length,\n            sliceY: 1,\n        });\n    }\n\n    // load a sprite to asset manager\n    function loadSprite(\n        name: string | null,\n        src: LoadSpriteSrc | LoadSpriteSrc[],\n        opt: LoadSpriteOpt = {\n            sliceX: 1,\n            sliceY: 1,\n            anims: {},\n        },\n    ): Asset<SpriteData> {\n        src = fixURL(src);\n        if (Array.isArray(src)) {\n            if (src.some((s) => typeof s === \"string\")) {\n                return assets.sprites.add(\n                    name,\n                    Promise.all(src.map((s) => {\n                        return typeof s === \"string\"\n                            ? loadImg(s)\n                            : Promise.resolve(s);\n                    })).then((images) => createSpriteSheet(images, opt)),\n                );\n            } else {\n                return assets.sprites.addLoaded(\n                    name,\n                    createSpriteSheet(src as ImageSource[], opt),\n                );\n            }\n        } else {\n            if (typeof src === \"string\") {\n                return assets.sprites.add(name, SpriteData.from(src, opt));\n            } else {\n                return assets.sprites.addLoaded(\n                    name,\n                    SpriteData.fromImage(src, opt),\n                );\n            }\n        }\n    }\n\n    function loadPedit(\n        name: string | null,\n        src: string | PeditFile,\n    ): Asset<SpriteData> {\n        src = fixURL(src);\n\n        return assets.sprites.add(\n            name,\n            new Promise(async (resolve) => {\n                const data = typeof src === \"string\"\n                    ? await fetchJSON(src)\n                    : src;\n                const images = await Promise.all(data.frames.map(loadImg));\n                const canvas = document.createElement(\"canvas\");\n                canvas.width = data.width;\n                canvas.height = data.height * data.frames.length;\n\n                const c2d = canvas.getContext(\"2d\");\n\n                images.forEach((img: HTMLImageElement, i) => {\n                    c2d.drawImage(img, 0, i * data.height);\n                });\n\n                const spr = await loadSprite(null, canvas, {\n                    sliceY: data.frames.length,\n                    anims: data.anims,\n                });\n\n                resolve(spr);\n            }),\n        );\n    }\n\n    function loadAseprite(\n        name: string | null,\n        imgSrc: LoadSpriteSrc,\n        jsonSrc: string | AsepriteData,\n    ): Asset<SpriteData> {\n        imgSrc = fixURL(imgSrc);\n        jsonSrc = fixURL(jsonSrc);\n\n        if (typeof imgSrc === \"string\" && !jsonSrc) {\n            jsonSrc = getFileName(imgSrc) + \".json\";\n        }\n\n        const resolveJSON = typeof jsonSrc === \"string\"\n            ? fetchJSON(jsonSrc)\n            : Promise.resolve(jsonSrc);\n\n        return assets.sprites.add(\n            name,\n            resolveJSON.then((data: AsepriteData) => {\n                const size = data.meta.size;\n                const frames = data.frames.map((f: any) => {\n                    return new Quad(\n                        f.frame.x / size.w,\n                        f.frame.y / size.h,\n                        f.frame.w / size.w,\n                        f.frame.h / size.h,\n                    );\n                });\n                const anims = {};\n                for (const anim of data.meta.frameTags) {\n                    if (anim.from === anim.to) {\n                        anims[anim.name] = anim.from;\n                    } else {\n                        anims[anim.name] = {\n                            from: anim.from,\n                            to: anim.to,\n                            speed: 10,\n                            loop: true,\n                            pingpong: anim.direction === \"pingpong\",\n                        };\n                    }\n                }\n                return SpriteData.from(imgSrc, {\n                    frames: frames,\n                    anims: anims,\n                });\n            }),\n        );\n    }\n\n    function loadShader(\n        name: string | null,\n        vert?: string,\n        frag?: string,\n    ) {\n        return assets.shaders.addLoaded(name, makeShader(vert, frag));\n    }\n\n    function loadShaderURL(\n        name: string | null,\n        vert?: string,\n        frag?: string,\n    ): Asset<ShaderData> {\n        vert = fixURL(vert);\n        frag = fixURL(frag);\n        const resolveUrl = (url?: string) =>\n            url\n                ? fetchText(url)\n                : Promise.resolve(null);\n        const load = Promise.all([resolveUrl(vert), resolveUrl(frag)])\n            .then(([vcode, fcode]: [string | null, string | null]) => {\n                return makeShader(vcode, fcode);\n            });\n        return assets.shaders.add(name, load);\n    }\n\n    // load a sound to asset manager\n    function loadSound(\n        name: string | null,\n        src: string | ArrayBuffer,\n    ): Asset<SoundData> {\n        src = fixURL(src);\n        return assets.sounds.add(\n            name,\n            typeof src === \"string\"\n                ? SoundData.fromURL(src)\n                : SoundData.fromArrayBuffer(src),\n        );\n    }\n\n    function loadMusic(\n        name: string | null,\n        url: string,\n    ) {\n        const a = new Audio(url);\n        a.preload = \"auto\";\n        return assets.music[name] = fixURL(url);\n    }\n\n    function loadBean(name: string = \"bean\"): Asset<SpriteData> {\n        return loadSprite(name, beanSpriteSrc);\n    }\n\n    function getSprite(name: string): Asset<SpriteData> | null {\n        return assets.sprites.get(name);\n    }\n\n    function getSound(name: string): Asset<SoundData> | null {\n        return assets.sounds.get(name);\n    }\n\n    function getFont(name: string): Asset<FontData> | null {\n        return assets.fonts.get(name);\n    }\n\n    function getBitmapFont(name: string): Asset<BitmapFontData> | null {\n        return assets.bitmapFonts.get(name);\n    }\n\n    function getShader(name: string): Asset<ShaderData> | null {\n        return assets.shaders.get(name);\n    }\n\n    function getAsset(name: string): Asset<any> | null {\n        return assets.custom.get(name);\n    }\n\n    function resolveSprite(\n        src: DrawSpriteOpt[\"sprite\"],\n    ): Asset<SpriteData> | null {\n        if (typeof src === \"string\") {\n            const spr = getSprite(src);\n            if (spr) {\n                // if it's already loaded or being loading, return it\n                return spr;\n            } else if (loadProgress() < 1) {\n                // if there's any other ongoing loading task we return empty and don't error yet\n                return null;\n            } else {\n                // if all other assets are loaded and we still haven't found this sprite, throw\n                throw new Error(`Sprite not found: ${src}`);\n            }\n        } else if (src instanceof SpriteData) {\n            return Asset.loaded(src);\n        } else if (src instanceof Asset) {\n            return src;\n        } else {\n            throw new Error(`Invalid sprite: ${src}`);\n        }\n    }\n\n    function resolveSound(\n        src: string | SoundData | Asset<SoundData>,\n    ): Asset<SoundData> | null {\n        if (typeof src === \"string\") {\n            const snd = getSound(src);\n            if (snd) {\n                return snd;\n            } else if (loadProgress() < 1) {\n                return null;\n            } else {\n                throw new Error(`Sound not found: ${src}`);\n            }\n        } else if (src instanceof SoundData) {\n            return Asset.loaded(src);\n        } else if (src instanceof Asset) {\n            return src;\n        } else {\n            throw new Error(`Invalid sound: ${src}`);\n        }\n    }\n\n    function resolveShader(\n        src: RenderProps[\"shader\"],\n    ): ShaderData | Asset<ShaderData> | null {\n        if (!src) {\n            return gfx.defShader;\n        }\n        if (typeof src === \"string\") {\n            const shader = getShader(src);\n            if (shader) {\n                return shader.data ?? shader;\n            } else if (loadProgress() < 1) {\n                return null;\n            } else {\n                throw new Error(`Shader not found: ${src}`);\n            }\n        } else if (src instanceof Asset) {\n            return src.data ? src.data : src;\n        }\n\n        return src;\n    }\n\n    function resolveFont(\n        src: DrawTextOpt[\"font\"],\n    ):\n        | FontData\n        | Asset<FontData>\n        | BitmapFontData\n        | Asset<BitmapFontData>\n        | string\n        | void\n    {\n        if (!src) {\n            return resolveFont(gopt.font ?? DEF_FONT);\n        }\n        if (typeof src === \"string\") {\n            const bfont = getBitmapFont(src);\n            const font = getFont(src);\n            if (bfont) {\n                return bfont.data ?? bfont;\n            } else if (font) {\n                return font.data ?? font;\n            } else if (\n                document.fonts.check(`${DEF_TEXT_CACHE_SIZE}px ${src}`)\n            ) {\n                return src;\n            } else if (loadProgress() < 1) {\n                return null;\n            } else {\n                throw new Error(`Font not found: ${src}`);\n            }\n        } else if (src instanceof Asset) {\n            return src.data ? src.data : src;\n        }\n\n        return src;\n    }\n\n    // get / set master volume\n    function volume(v?: number): number {\n        if (v !== undefined) {\n            audio.masterNode.gain.value = v;\n        }\n        return audio.masterNode.gain.value;\n    }\n\n    function playMusic(url: string, opt: AudioPlayOpt = {}): AudioPlay {\n        const onEndEvents = new KEvent();\n        const el = new Audio(url);\n        const src = audio.ctx.createMediaElementSource(el);\n\n        src.connect(audio.masterNode);\n\n        function resumeAudioCtx() {\n            if (debug.paused) return;\n            if (app.isHidden() && !gopt.backgroundAudio) return;\n            audio.ctx.resume();\n        }\n\n        function play() {\n            resumeAudioCtx();\n            el.play();\n        }\n\n        if (!opt.paused) {\n            play();\n        }\n\n        el.onended = () => onEndEvents.trigger();\n\n        return {\n            play() {\n                play();\n            },\n\n            seek(time: number) {\n                el.currentTime = time;\n            },\n\n            stop() {\n                el.pause();\n                this.seek(0);\n            },\n\n            set loop(l: boolean) {\n                el.loop = l;\n            },\n\n            get loop() {\n                return el.loop;\n            },\n\n            set paused(p: boolean) {\n                if (p) {\n                    el.pause();\n                } else {\n                    play();\n                }\n            },\n\n            get paused() {\n                return el.paused;\n            },\n\n            time() {\n                return el.currentTime;\n            },\n\n            duration() {\n                return el.duration;\n            },\n\n            set volume(val: number) {\n                el.volume = clamp(val, 0, 1);\n            },\n\n            get volume() {\n                return el.volume;\n            },\n\n            set speed(s) {\n                el.playbackRate = Math.max(s, 0);\n            },\n\n            get speed() {\n                return el.playbackRate;\n            },\n\n            set detune(d) {\n                // TODO\n            },\n\n            get detune() {\n                // TODO\n                return 0;\n            },\n\n            onEnd(action: () => void) {\n                return onEndEvents.add(action);\n            },\n\n            then(action: () => void) {\n                return this.onEnd(action);\n            },\n        };\n    }\n\n    function play(\n        src:\n            | string\n            | SoundData\n            | Asset<SoundData>\n            | MusicData\n            | Asset<MusicData>,\n        opt: AudioPlayOpt = {},\n    ): AudioPlay {\n        if (typeof src === \"string\" && assets.music[src]) {\n            return playMusic(assets.music[src], opt);\n        }\n\n        const ctx = audio.ctx;\n        let paused = opt.paused ?? false;\n        let srcNode = ctx.createBufferSource();\n        const onEndEvents = new KEvent();\n        const gainNode = ctx.createGain();\n        const pos = opt.seek ?? 0;\n        let startTime = 0;\n        let stopTime = 0;\n        let started = false;\n\n        srcNode.loop = Boolean(opt.loop);\n        srcNode.detune.value = opt.detune ?? 0;\n        srcNode.playbackRate.value = opt.speed ?? 1;\n        srcNode.connect(gainNode);\n        srcNode.onended = () => {\n            if (\n                getTime()\n                    >= (srcNode.buffer?.duration ?? Number.POSITIVE_INFINITY)\n            ) {\n                onEndEvents.trigger();\n            }\n        };\n        gainNode.connect(audio.masterNode);\n        gainNode.gain.value = opt.volume ?? 1;\n\n        const start = (data: SoundData) => {\n            srcNode.buffer = data.buf;\n            if (!paused) {\n                startTime = ctx.currentTime;\n                srcNode.start(0, pos);\n                started = true;\n            }\n        };\n\n        // @ts-ignore\n        const snd = resolveSound(src);\n\n        if (snd instanceof Asset) {\n            snd.onLoad(start);\n        }\n\n        const getTime = () => {\n            if (!srcNode.buffer) return 0;\n            const t = paused\n                ? stopTime - startTime\n                : ctx.currentTime - startTime;\n            const d = srcNode.buffer.duration;\n            return srcNode.loop ? t % d : Math.min(t, d);\n        };\n\n        const cloneNode = (oldNode: AudioBufferSourceNode) => {\n            const newNode = ctx.createBufferSource();\n            newNode.buffer = oldNode.buffer;\n            newNode.loop = oldNode.loop;\n            newNode.playbackRate.value = oldNode.playbackRate.value;\n            newNode.detune.value = oldNode.detune.value;\n            newNode.onended = oldNode.onended;\n            newNode.connect(gainNode);\n            return newNode;\n        };\n\n        return {\n            stop() {\n                this.paused = true;\n                this.seek(0);\n            },\n\n            set paused(p: boolean) {\n                if (paused === p) return;\n                paused = p;\n                if (p) {\n                    if (started) {\n                        srcNode.stop();\n                        started = false;\n                    }\n                    stopTime = ctx.currentTime;\n                } else {\n                    srcNode = cloneNode(srcNode);\n                    const pos = stopTime - startTime;\n                    srcNode.start(0, pos);\n                    started = true;\n                    startTime = ctx.currentTime - pos;\n                    stopTime = 0;\n                }\n            },\n\n            get paused() {\n                return paused;\n            },\n\n            play(time: number = 0) {\n                this.seek(time);\n                this.paused = false;\n            },\n\n            seek(time: number) {\n                if (!srcNode.buffer?.duration) return;\n                if (time > srcNode.buffer.duration) return;\n                if (paused) {\n                    srcNode = cloneNode(srcNode);\n                    startTime = stopTime - time;\n                } else {\n                    srcNode.stop();\n                    srcNode = cloneNode(srcNode);\n                    startTime = ctx.currentTime - time;\n                    srcNode.start(0, time);\n                    started = true;\n                    stopTime = 0;\n                }\n            },\n\n            // TODO: affect time()\n            set speed(val: number) {\n                srcNode.playbackRate.value = val;\n            },\n\n            get speed() {\n                return srcNode.playbackRate.value;\n            },\n\n            set detune(val: number) {\n                srcNode.detune.value = val;\n            },\n\n            get detune() {\n                return srcNode.detune.value;\n            },\n\n            set volume(val: number) {\n                gainNode.gain.value = Math.max(val, 0);\n            },\n\n            get volume() {\n                return gainNode.gain.value;\n            },\n\n            set loop(l: boolean) {\n                srcNode.loop = l;\n            },\n\n            get loop() {\n                return srcNode.loop;\n            },\n\n            duration(): number {\n                return srcNode.buffer?.duration ?? 0;\n            },\n\n            time(): number {\n                return getTime() % this.duration();\n            },\n\n            onEnd(action: () => void) {\n                return onEndEvents.add(action);\n            },\n\n            then(action: () => void) {\n                return this.onEnd(action);\n            },\n        };\n    }\n\n    // core kaboom logic\n    function burp(opt?: AudioPlayOpt): AudioPlay {\n        return play(audio.burpSnd, opt);\n    }\n\n    function makeCanvas(w: number, h: number) {\n        const fb = new FrameBuffer(ggl, w, h);\n        return {\n            clear: () => fb.clear(),\n            free: () => fb.free(),\n            toDataURL: () => fb.toDataURL(),\n            toImageData: () => fb.toImageData(),\n            width: fb.width,\n            height: fb.height,\n            draw: (action) => {\n                flush();\n                fb.bind();\n                action();\n                flush();\n                fb.unbind();\n            },\n        };\n    }\n\n    function makeShader(\n        vertSrc: string | null = DEF_VERT,\n        fragSrc: string | null = DEF_FRAG,\n    ): Shader {\n        const vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT);\n        const fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG);\n        try {\n            return new Shader(\n                ggl,\n                vcode,\n                fcode,\n                VERTEX_FORMAT.map((vert) => vert.name),\n            );\n        } catch (e) {\n            const lineOffset = 14;\n            const fmt =\n                /(?<type>^\\w+) SHADER ERROR: 0:(?<line>\\d+): (?<msg>.+)/;\n            const match = getErrorMessage(e).match(fmt);\n            const line = Number(match.groups.line) - lineOffset;\n            const msg = match.groups.msg.trim();\n            const ty = match.groups.type.toLowerCase();\n            throw new Error(`${ty} shader line ${line}: ${msg}`);\n        }\n    }\n\n    function makeFont(\n        tex: Texture,\n        gw: number,\n        gh: number,\n        chars: string,\n    ): GfxFont {\n        const cols = tex.width / gw;\n        const map: Record<string, Quad> = {};\n        const charMap = chars.split(\"\").entries();\n\n        for (const [i, ch] of charMap) {\n            map[ch] = new Quad(\n                (i % cols) * gw,\n                Math.floor(i / cols) * gh,\n                gw,\n                gh,\n            );\n        }\n\n        return {\n            tex: tex,\n            map: map,\n            size: gh,\n        };\n    }\n\n    // TODO: expose\n    function drawRaw(\n        verts: Vertex[],\n        indices: number[],\n        fixed: boolean,\n        tex: Texture = gfx.defTex,\n        shaderSrc: RenderProps[\"shader\"] = gfx.defShader,\n        uniform: Uniform = {},\n    ) {\n        const shader = resolveShader(shaderSrc);\n\n        if (!shader || shader instanceof Asset) {\n            return;\n        }\n\n        const transform = (gfx.fixed || fixed)\n            ? gfx.transform\n            : game.cam.transform.mult(gfx.transform);\n\n        const vv = [];\n\n        for (const v of verts) {\n            // normalized world space coordinate [-1.0 ~ 1.0]\n            const pt = screen2ndc(transform.multVec2(v.pos));\n            vv.push(\n                pt.x,\n                pt.y,\n                v.uv.x,\n                v.uv.y,\n                v.color.r / 255,\n                v.color.g / 255,\n                v.color.b / 255,\n                v.opacity,\n            );\n        }\n\n        gfx.renderer.push(gl.TRIANGLES, vv, indices, shader, tex, uniform);\n    }\n\n    // draw all batched shapes\n    function flush() {\n        gfx.renderer.flush();\n    }\n\n    // start a rendering frame, reset some states\n    function frameStart() {\n        // clear backbuffer\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gfx.frameBuffer.bind();\n        // clear framebuffer\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        if (!gfx.bgColor) {\n            drawUnscaled(() => {\n                drawUVQuad({\n                    width: width(),\n                    height: height(),\n                    quad: new Quad(\n                        0,\n                        0,\n                        width() / BG_GRID_SIZE,\n                        height() / BG_GRID_SIZE,\n                    ),\n                    tex: gfx.bgTex,\n                    fixed: true,\n                });\n            });\n        }\n\n        gfx.renderer.numDraws = 0;\n        gfx.fixed = false;\n        gfx.transformStack.length = 0;\n        gfx.transform = new Mat4();\n    }\n\n    function usePostEffect(name: string, uniform?: Uniform | (() => Uniform)) {\n        gfx.postShader = name;\n        gfx.postShaderUniform = uniform ?? null;\n    }\n\n    function frameEnd() {\n        // TODO: don't render debug UI with framebuffer\n        // TODO: polish framebuffer rendering / sizing issues\n        flush();\n        gfx.lastDrawCalls = gfx.renderer.numDraws;\n        gfx.frameBuffer.unbind();\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n        const ow = gfx.width;\n        const oh = gfx.height;\n        gfx.width = gl.drawingBufferWidth / pixelDensity;\n        gfx.height = gl.drawingBufferHeight / pixelDensity;\n\n        drawTexture({\n            flipY: true,\n            tex: gfx.frameBuffer.tex,\n            pos: new Vec2(gfx.viewport.x, gfx.viewport.y),\n            width: gfx.viewport.width,\n            height: gfx.viewport.height,\n            shader: gfx.postShader,\n            uniform: typeof gfx.postShaderUniform === \"function\"\n                ? gfx.postShaderUniform()\n                : gfx.postShaderUniform,\n            fixed: true,\n        });\n\n        flush();\n        gfx.width = ow;\n        gfx.height = oh;\n    }\n\n    // convert a screen space coordinate to webgl normalized device coordinate\n    function screen2ndc(pt: Vec2): Vec2 {\n        return new Vec2(\n            pt.x / width() * 2 - 1,\n            -pt.y / height() * 2 + 1,\n        );\n    }\n\n    function pushMatrix(m: Mat4) {\n        gfx.transform = m.clone();\n    }\n\n    function pushTranslate(...args: Vec2Args) {\n        if (args[0] === undefined) return;\n        const p = vec2(...args);\n        if (p.x === 0 && p.y === 0) return;\n        gfx.transform.translate(p);\n    }\n\n    function pushScale(...args: Vec2Args) {\n        if (args[0] === undefined) return;\n        const p = vec2(...args);\n        if (p.x === 1 && p.y === 1) return;\n        gfx.transform.scale(p);\n    }\n\n    function pushRotate(a: number) {\n        if (!a) return;\n        gfx.transform.rotate(a);\n    }\n\n    function pushTransform() {\n        gfx.transformStack.push(gfx.transform.clone());\n    }\n\n    function popTransform() {\n        if (gfx.transformStack.length > 0) {\n            gfx.transform = gfx.transformStack.pop();\n        }\n    }\n\n    // draw a uv textured quad\n    function drawUVQuad(opt: DrawUVQuadOpt) {\n        if (opt.width === undefined || opt.height === undefined) {\n            throw new Error(\n                \"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\",\n            );\n        }\n\n        if (opt.width <= 0 || opt.height <= 0) {\n            return;\n        }\n\n        const w = opt.width;\n        const h = opt.height;\n        const anchor = anchorPt(opt.anchor || DEF_ANCHOR);\n        const offset = anchor.scale(new Vec2(w, h).scale(-0.5));\n        const q = opt.quad || new Quad(0, 0, 1, 1);\n        const color = opt.color || rgb(255, 255, 255);\n        const opacity = opt.opacity ?? 1;\n\n        // apply uv padding to avoid artifacts\n        const uvPadX = opt.tex ? UV_PAD / opt.tex.width : 0;\n        const uvPadY = opt.tex ? UV_PAD / opt.tex.height : 0;\n        const qx = q.x + uvPadX;\n        const qy = q.y + uvPadY;\n        const qw = q.w - uvPadX * 2;\n        const qh = q.h - uvPadY * 2;\n\n        pushTransform();\n        pushTranslate(opt.pos);\n        pushRotate(opt.angle);\n        pushScale(opt.scale);\n        pushTranslate(offset);\n\n        drawRaw(\n            [\n                {\n                    pos: new Vec2(-w / 2, h / 2),\n                    uv: new Vec2(\n                        opt.flipX ? qx + qw : qx,\n                        opt.flipY ? qy : qy + qh,\n                    ),\n                    color: color,\n                    opacity: opacity,\n                },\n                {\n                    pos: new Vec2(-w / 2, -h / 2),\n                    uv: new Vec2(\n                        opt.flipX ? qx + qw : qx,\n                        opt.flipY ? qy + qh : qy,\n                    ),\n                    color: color,\n                    opacity: opacity,\n                },\n                {\n                    pos: new Vec2(w / 2, -h / 2),\n                    uv: new Vec2(\n                        opt.flipX ? qx : qx + qw,\n                        opt.flipY ? qy + qh : qy,\n                    ),\n                    color: color,\n                    opacity: opacity,\n                },\n                {\n                    pos: new Vec2(w / 2, h / 2),\n                    uv: new Vec2(\n                        opt.flipX ? qx : qx + qw,\n                        opt.flipY ? qy : qy + qh,\n                    ),\n                    color: color,\n                    opacity: opacity,\n                },\n            ],\n            [0, 1, 3, 1, 2, 3],\n            opt.fixed,\n            opt.tex,\n            opt.shader,\n            opt.uniform,\n        );\n\n        popTransform();\n    }\n\n    // TODO: clean\n    function drawTexture(opt: DrawTextureOpt) {\n        if (!opt.tex) {\n            throw new Error(\"drawTexture() requires property \\\"tex\\\".\");\n        }\n\n        const q = opt.quad ?? new Quad(0, 0, 1, 1);\n        const w = opt.tex.width * q.w;\n        const h = opt.tex.height * q.h;\n        const scale = new Vec2(1);\n\n        if (opt.tiled) {\n            // TODO: draw fract\n            const repX = Math.ceil((opt.width || w) / w);\n            const repY = Math.ceil((opt.height || h) / h);\n            const anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(\n                new Vec2(1, 1),\n            ).scale(0.5);\n            const offset = anchor.scale(repX * w, repY * h);\n\n            // TODO: rotation\n            for (let i = 0; i < repX; i++) {\n                for (let j = 0; j < repY; j++) {\n                    drawUVQuad(Object.assign({}, opt, {\n                        pos: (opt.pos || new Vec2(0)).add(\n                            new Vec2(w * i, h * j),\n                        ).sub(offset),\n                        scale: scale.scale(opt.scale || new Vec2(1)),\n                        tex: opt.tex,\n                        quad: q,\n                        width: w,\n                        height: h,\n                        anchor: \"topleft\",\n                    }));\n                }\n            }\n        } else {\n            // TODO: should this ignore scale?\n            if (opt.width && opt.height) {\n                scale.x = opt.width / w;\n                scale.y = opt.height / h;\n            } else if (opt.width) {\n                scale.x = opt.width / w;\n                scale.y = scale.x;\n            } else if (opt.height) {\n                scale.y = opt.height / h;\n                scale.x = scale.y;\n            }\n\n            drawUVQuad(Object.assign({}, opt, {\n                scale: scale.scale(opt.scale || new Vec2(1)),\n                tex: opt.tex,\n                quad: q,\n                width: w,\n                height: h,\n            }));\n        }\n    }\n\n    function drawSprite(opt: DrawSpriteOpt) {\n        if (!opt.sprite) {\n            throw new Error(\"drawSprite() requires property \\\"sprite\\\"\");\n        }\n\n        // TODO: slow\n        const spr = resolveSprite(opt.sprite);\n\n        if (!spr || !spr.data) {\n            return;\n        }\n\n        const q = spr.data.frames[opt.frame ?? 0];\n\n        if (!q) {\n            throw new Error(`Frame not found: ${opt.frame ?? 0}`);\n        }\n\n        drawTexture(Object.assign({}, opt, {\n            tex: spr.data.tex,\n            quad: q.scale(opt.quad ?? new Quad(0, 0, 1, 1)),\n        }));\n    }\n\n    // generate vertices to form an arc\n    function getArcPts(\n        pos: Vec2,\n        radiusX: number,\n        radiusY: number,\n        start: number,\n        end: number,\n        res: number = 1,\n    ): Vec2[] {\n        // normalize and turn start and end angles to radians\n        start = deg2rad(start % 360);\n        end = deg2rad(end % 360);\n        if (end <= start) end += Math.PI * 2;\n\n        const pts = [];\n        const nverts = Math.ceil((end - start) / deg2rad(8) * res);\n        const step = (end - start) / nverts;\n\n        // Rotate vector v by r nverts+1 times\n        let v = vec2(Math.cos(start), Math.sin(start));\n        const r = vec2(Math.cos(step), Math.sin(step));\n        for (let i = 0; i <= nverts; i++) {\n            pts.push(pos.add(radiusX * v.x, radiusY * v.y));\n            // cos(a + b) = cos(a)cos(b) - sin(a)sin(b)\n            // sin(a + b) = cos(a)sin(b) + sin(a)cos(b)\n            v = vec2(v.x * r.x - v.y * r.y, v.x * r.y + v.y * r.x);\n        }\n\n        return pts;\n    }\n\n    function drawRect(opt: DrawRectOpt) {\n        if (opt.width === undefined || opt.height === undefined) {\n            throw new Error(\n                \"drawRect() requires property \\\"width\\\" and \\\"height\\\".\",\n            );\n        }\n\n        if (opt.width <= 0 || opt.height <= 0) {\n            return;\n        }\n\n        const w = opt.width;\n        const h = opt.height;\n        const anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(1, 1);\n        const offset = anchor.scale(new Vec2(w, h).scale(-0.5));\n\n        let pts = [\n            new Vec2(0, 0),\n            new Vec2(w, 0),\n            new Vec2(w, h),\n            new Vec2(0, h),\n        ];\n\n        // TODO: gradient for rounded rect\n        // TODO: drawPolygon should handle generic rounded corners\n        if (opt.radius) {\n            // maximum radius is half the shortest side\n            const maxRadius = Math.min(w, h) / 2;\n            const r = Array.isArray(opt.radius)\n                ? opt.radius.map(r => Math.min(maxRadius, r))\n                : new Array(4).fill(Math.min(maxRadius, opt.radius));\n\n            pts = [\n                new Vec2(r[0], 0),\n                ...(r[1]\n                    ? getArcPts(new Vec2(w - r[1], r[1]), r[1], r[1], 270, 360)\n                    : [vec2(w, 0)]),\n                ...(r[2]\n                    ? getArcPts(new Vec2(w - r[2], h - r[2]), r[2], r[2], 0, 90)\n                    : [vec2(w, h)]),\n                ...(r[3]\n                    ? getArcPts(new Vec2(r[3], h - r[3]), r[3], r[3], 90, 180)\n                    : [vec2(0, h)]),\n                ...(r[0]\n                    ? getArcPts(new Vec2(r[0], r[0]), r[0], r[0], 180, 270)\n                    : []),\n            ];\n        }\n\n        drawPolygon(Object.assign({}, opt, {\n            offset,\n            pts,\n            ...(opt.gradient\n                ? {\n                    colors: opt.horizontal\n                        ? [\n                            opt.gradient[0],\n                            opt.gradient[1],\n                            opt.gradient[1],\n                            opt.gradient[0],\n                        ]\n                        : [\n                            opt.gradient[0],\n                            opt.gradient[0],\n                            opt.gradient[1],\n                            opt.gradient[1],\n                        ],\n                }\n                : {}),\n        }));\n    }\n\n    function drawLine(opt: DrawLineOpt) {\n        const { p1, p2 } = opt;\n\n        if (!p1 || !p2) {\n            throw new Error(\n                \"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\",\n            );\n        }\n\n        const w = opt.width || 1;\n\n        // the displacement from the line end point to the corner point\n        const dis = p2.sub(p1).unit().normal().scale(w * 0.5);\n\n        // calculate the 4 corner points of the line polygon\n        const verts = [\n            p1.sub(dis),\n            p1.add(dis),\n            p2.add(dis),\n            p2.sub(dis),\n        ].map((p) => ({\n            pos: new Vec2(p.x, p.y),\n            uv: new Vec2(0),\n            color: opt.color ?? Color.WHITE,\n            opacity: opt.opacity ?? 1,\n        }));\n\n        drawRaw(\n            verts,\n            [0, 1, 3, 1, 2, 3],\n            opt.fixed,\n            gfx.defTex,\n            opt.shader,\n            opt.uniform,\n        );\n    }\n\n    function _drawLinesBevel(opt: DrawLinesOpt) {\n        const pts = opt.pts;\n        const vertices = [];\n        const halfWidth = (opt.width || 1) * 0.5;\n        const isLoop = pts[0] === pts[pts.length - 1]\n            || pts[0].eq(pts[pts.length - 1]);\n        const offset = opt.pos || vec2(0, 0);\n        let segment;\n\n        if (isLoop) {\n            segment = pts[0].sub(pts[pts.length - 2]);\n        } else {\n            segment = pts[1].sub(pts[0]);\n        }\n\n        let length = segment.len();\n        let normal = segment.normal().scale(-halfWidth / length);\n\n        let pt1;\n        let pt2 = pts[0];\n\n        if (!isLoop) {\n            switch (opt.cap) {\n                case \"square\": {\n                    const dir = segment.scale(-halfWidth / length);\n                    vertices.push(pt2.add(dir).add(normal));\n                    vertices.push(pt2.add(dir).sub(normal));\n                    break;\n                }\n                case \"round\": {\n                    const n = Math.max(halfWidth, 10);\n                    const angle = Math.PI / n;\n                    let vector = normal.scale(-1);\n                    const cs = Math.cos(angle);\n                    const sn = Math.sin(angle);\n                    for (let j = 0; j < n; j++) {\n                        vertices.push(pt2);\n                        vertices.push(pt2.sub(vector));\n                        vector = vec2(\n                            vector.x * cs - vector.y * sn,\n                            vector.x * sn + vector.y * cs,\n                        );\n                    }\n                }\n            }\n        }\n\n        for (let i = 1; i < pts.length; i++) {\n            if (pt2 === pts[i] || pt2.eq(pts[i])) continue;\n            pt1 = pt2;\n            pt2 = pts[i];\n\n            const nextSegment = pt2.sub(pt1);\n            const nextLength = nextSegment.len();\n            const nextNormal = nextSegment.normal().scale(\n                -halfWidth / nextLength,\n            );\n\n            const det = segment.cross(nextSegment);\n\n            if (Math.abs(det) / (length * nextLength) < 0.05) {\n                // Parallel\n                vertices.push(pt1.add(normal));\n                vertices.push(pt1.sub(normal));\n\n                if (segment.dot(nextSegment) < 0) {\n                    vertices.push(pt1.sub(normal));\n                    vertices.push(pt1.add(normal));\n                }\n\n                segment = nextSegment;\n                length = nextLength;\n                normal = nextNormal;\n                continue;\n            }\n\n            const lambda = (nextNormal.sub(normal)).cross(nextSegment) / det;\n            const d = normal.add(segment.scale(lambda));\n\n            if (det > 0) {\n                vertices.push(pt1.add(d));\n                vertices.push(pt1.sub(normal));\n                vertices.push(pt1.add(d));\n                vertices.push(pt1.sub(nextNormal));\n            } else {\n                vertices.push(pt1.add(normal));\n                vertices.push(pt1.sub(d));\n                vertices.push(pt1.add(nextNormal));\n                vertices.push(pt1.sub(d));\n            }\n\n            segment = nextSegment;\n            length = nextLength;\n            normal = nextNormal;\n        }\n\n        if (!isLoop) {\n            vertices.push(pt2.add(normal));\n            vertices.push(pt2.sub(normal));\n            switch (opt.cap) {\n                case \"square\": {\n                    const dir = segment.scale(halfWidth / length);\n                    vertices.push(pt2.add(dir).add(normal));\n                    vertices.push(pt2.add(dir).sub(normal));\n                    break;\n                }\n                case \"round\": {\n                    const n = Math.max(halfWidth, 10);\n                    const angle = Math.PI / n;\n                    let vector = normal.scale(1);\n                    const cs = Math.cos(angle);\n                    const sn = Math.sin(angle);\n                    for (let j = 0; j < n; j++) {\n                        vector = vec2(\n                            vector.x * cs - vector.y * sn,\n                            vector.x * sn + vector.y * cs,\n                        );\n                        vertices.push(pt2);\n                        vertices.push(pt2.sub(vector));\n                    }\n                }\n            }\n        }\n\n        if (vertices.length < 4) return;\n\n        const verts = vertices.map(v => ({\n            pos: offset.add(v),\n            uv: vec2(),\n            color: opt.color || Color.WHITE,\n            opacity: opt.opacity ?? 1,\n        }));\n\n        const indices = [];\n        let index = 0;\n        for (let i = 0; i < vertices.length - 2; i += 2) {\n            indices[index++] = i + 1;\n            indices[index++] = i;\n            indices[index++] = i + 2;\n            indices[index++] = i + 2;\n            indices[index++] = i + 3;\n            indices[index++] = i + 1;\n        }\n\n        if (isLoop) {\n            indices[index++] = vertices.length - 1;\n            indices[index++] = vertices.length - 2;\n            indices[index++] = 0;\n            indices[index++] = 0;\n            indices[index++] = 1;\n            indices[index++] = vertices.length - 1;\n        }\n\n        drawRaw(\n            verts,\n            indices,\n            opt.fixed,\n            gfx.defTex,\n            opt.shader,\n            opt.uniform,\n        );\n    }\n\n    function _drawLinesRound(opt: DrawLinesOpt) {\n        const pts = opt.pts;\n        const vertices = [];\n        const halfWidth = (opt.width || 1) * 0.5;\n        const isLoop = pts[0] === pts[pts.length - 1]\n            || pts[0].eq(pts[pts.length - 1]);\n        const offset = opt.pos || vec2(0, 0);\n        let segment;\n\n        if (isLoop) {\n            segment = pts[0].sub(pts[pts.length - 2]);\n        } else {\n            segment = pts[1].sub(pts[0]);\n        }\n\n        let length = segment.len();\n        let normal = segment.normal().scale(-halfWidth / length);\n\n        let pt1;\n        let pt2 = pts[0];\n\n        if (!isLoop) {\n            switch (opt.cap) {\n                case \"square\": {\n                    const dir = segment.scale(-halfWidth / length);\n                    vertices.push(pt2.add(dir).add(normal));\n                    vertices.push(pt2.add(dir).sub(normal));\n                    break;\n                }\n                case \"round\": {\n                    const n = Math.max(halfWidth, 10);\n                    const angle = Math.PI / n;\n                    let vector = normal.scale(-1);\n                    const cs = Math.cos(angle);\n                    const sn = Math.sin(angle);\n                    for (let j = 0; j < n; j++) {\n                        vertices.push(pt2);\n                        vertices.push(pt2.sub(vector));\n                        vector = vec2(\n                            vector.x * cs - vector.y * sn,\n                            vector.x * sn + vector.y * cs,\n                        );\n                    }\n                }\n            }\n        }\n\n        for (let i = 1; i < pts.length; i++) {\n            if (pt2 === pts[i] || pt2.eq(pts[i])) continue;\n            pt1 = pt2;\n            pt2 = pts[i];\n\n            const nextSegment = pt2.sub(pt1);\n            const nextLength = nextSegment.len();\n            const nextNormal = nextSegment.normal().scale(\n                -halfWidth / nextLength,\n            );\n\n            const det = segment.cross(nextSegment);\n\n            if (Math.abs(det) / (length * nextLength) < 0.05) {\n                // Parallel\n                vertices.push(pt1.add(normal));\n                vertices.push(pt1.sub(normal));\n\n                if (segment.dot(nextSegment) < 0) {\n                    vertices.push(pt1.sub(normal));\n                    vertices.push(pt1.add(normal));\n                }\n\n                segment = nextSegment;\n                length = nextLength;\n                normal = nextNormal;\n                continue;\n            }\n\n            const lambda = (nextNormal.sub(normal)).cross(nextSegment) / det;\n            const d = normal.add(segment.scale(lambda));\n\n            if (det > 0) {\n                const fixedPoint = pt1.add(d);\n                const n = Math.max(halfWidth, 10);\n                const angle = deg2rad(normal.angleBetween(nextNormal) / n);\n                let vector = normal;\n                const cs = Math.cos(angle);\n                const sn = Math.sin(angle);\n                for (let j = 0; j < n; j++) {\n                    vertices.push(fixedPoint);\n                    vertices.push(pt1.sub(vector));\n                    vector = vec2(\n                        vector.x * cs - vector.y * sn,\n                        vector.x * sn + vector.y * cs,\n                    );\n                }\n            } else {\n                const fixedPoint = pt1.sub(d);\n                const n = Math.max(halfWidth, 10);\n                const angle = deg2rad(normal.angleBetween(nextNormal) / n);\n                let vector = normal;\n                const cs = Math.cos(angle);\n                const sn = Math.sin(angle);\n                for (let j = 0; j < n; j++) {\n                    vertices.push(pt1.add(vector));\n                    vertices.push(fixedPoint);\n                    vector = vec2(\n                        vector.x * cs - vector.y * sn,\n                        vector.x * sn + vector.y * cs,\n                    );\n                }\n            }\n\n            segment = nextSegment;\n            length = nextLength;\n            normal = nextNormal;\n        }\n\n        if (!isLoop) {\n            vertices.push(pt2.add(normal));\n            vertices.push(pt2.sub(normal));\n            switch (opt.cap) {\n                case \"square\": {\n                    const dir = segment.scale(halfWidth / length);\n                    vertices.push(pt2.add(dir).add(normal));\n                    vertices.push(pt2.add(dir).sub(normal));\n                    break;\n                }\n                case \"round\": {\n                    const n = Math.max(halfWidth, 10);\n                    const angle = Math.PI / n;\n                    let vector = normal.scale(1);\n                    const cs = Math.cos(angle);\n                    const sn = Math.sin(angle);\n                    for (let j = 0; j < n; j++) {\n                        vector = vec2(\n                            vector.x * cs - vector.y * sn,\n                            vector.x * sn + vector.y * cs,\n                        );\n                        vertices.push(pt2);\n                        vertices.push(pt2.sub(vector));\n                    }\n                }\n            }\n        }\n\n        if (vertices.length < 4) return;\n\n        const verts = vertices.map(v => ({\n            pos: offset.add(v),\n            uv: vec2(),\n            color: opt.color || Color.WHITE,\n            opacity: opt.opacity ?? 1,\n        }));\n\n        const indices = [];\n        let index = 0;\n        for (let i = 0; i < vertices.length - 2; i += 2) {\n            indices[index++] = i + 1;\n            indices[index++] = i;\n            indices[index++] = i + 2;\n            indices[index++] = i + 2;\n            indices[index++] = i + 3;\n            indices[index++] = i + 1;\n        }\n\n        if (isLoop) {\n            indices[index++] = vertices.length - 1;\n            indices[index++] = vertices.length - 2;\n            indices[index++] = 0;\n            indices[index++] = 0;\n            indices[index++] = 1;\n            indices[index++] = vertices.length - 1;\n        }\n\n        drawRaw(\n            verts,\n            indices,\n            opt.fixed,\n            gfx.defTex,\n            opt.shader,\n            opt.uniform,\n        );\n    }\n\n    function _drawLinesMiter(opt: DrawLinesOpt) {\n        const pts = opt.pts;\n        const vertices = [];\n        const halfWidth = (opt.width || 1) * 0.5;\n        const isLoop = pts[0] === pts[pts.length - 1]\n            || pts[0].eq(pts[pts.length - 1]);\n        const offset = opt.pos || vec2(0, 0);\n        let segment;\n\n        if (isLoop) {\n            segment = pts[0].sub(pts[pts.length - 2]);\n        } else {\n            segment = pts[1].sub(pts[0]);\n        }\n\n        let length = segment.len();\n        let normal = segment.normal().scale(-halfWidth / length);\n\n        let pt1;\n        let pt2 = pts[0];\n\n        if (!isLoop) {\n            switch (opt.cap) {\n                case \"square\": {\n                    const dir = segment.scale(-halfWidth / length);\n                    vertices.push(pt2.add(dir).add(normal));\n                    vertices.push(pt2.add(dir).sub(normal));\n                    break;\n                }\n                case \"round\": {\n                    const n = Math.max(halfWidth, 10);\n                    const angle = Math.PI / n;\n                    let vector = normal.scale(-1);\n                    const cs = Math.cos(angle);\n                    const sn = Math.sin(angle);\n                    for (let j = 0; j < n; j++) {\n                        vertices.push(pt2);\n                        vertices.push(pt2.sub(vector));\n                        vector = vec2(\n                            vector.x * cs - vector.y * sn,\n                            vector.x * sn + vector.y * cs,\n                        );\n                    }\n                }\n            }\n        }\n\n        for (let i = 1; i < pts.length; i++) {\n            if (pt2 === pts[i] || pt2.eq(pts[i])) continue;\n            pt1 = pt2;\n            pt2 = pts[i];\n\n            const nextSegment = pt2.sub(pt1);\n            const nextLength = nextSegment.len();\n            const nextNormal = nextSegment.normal().scale(\n                -halfWidth / nextLength,\n            );\n\n            const det = segment.cross(nextSegment);\n\n            if (Math.abs(det) / (length * nextLength) < 0.05) {\n                // Parallel\n                vertices.push(pt1.add(normal));\n                vertices.push(pt1.sub(normal));\n\n                if (segment.dot(nextSegment) < 0) {\n                    vertices.push(pt1.sub(normal));\n                    vertices.push(pt1.add(normal));\n                }\n\n                segment = nextSegment;\n                length = nextLength;\n                normal = nextNormal;\n                continue;\n            }\n\n            const lambda = (nextNormal.sub(normal)).cross(nextSegment) / det;\n            const d = normal.add(segment.scale(lambda));\n\n            vertices.push(pt1.add(d));\n            vertices.push(pt1.sub(d));\n\n            segment = nextSegment;\n            length = nextLength;\n            normal = nextNormal;\n        }\n\n        if (!isLoop) {\n            vertices.push(pt2.add(normal));\n            vertices.push(pt2.sub(normal));\n            switch (opt.cap) {\n                case \"square\": {\n                    const dir = segment.scale(halfWidth / length);\n                    vertices.push(pt2.add(dir).add(normal));\n                    vertices.push(pt2.add(dir).sub(normal));\n                    break;\n                }\n                case \"round\": {\n                    const n = Math.max(halfWidth, 10);\n                    const angle = Math.PI / n;\n                    let vector = normal.scale(1);\n                    const cs = Math.cos(angle);\n                    const sn = Math.sin(angle);\n                    for (let j = 0; j < n; j++) {\n                        vector = vec2(\n                            vector.x * cs - vector.y * sn,\n                            vector.x * sn + vector.y * cs,\n                        );\n                        vertices.push(pt2);\n                        vertices.push(pt2.sub(vector));\n                    }\n                }\n            }\n        }\n\n        if (vertices.length < 4) return;\n\n        const verts = vertices.map(v => ({\n            pos: offset.add(v),\n            uv: vec2(),\n            color: opt.color || Color.WHITE,\n            opacity: opt.opacity ?? 1,\n        }));\n\n        const indices = [];\n        let index = 0;\n        for (let i = 0; i < vertices.length - 2; i += 2) {\n            indices[index++] = i + 1;\n            indices[index++] = i;\n            indices[index++] = i + 2;\n            indices[index++] = i + 2;\n            indices[index++] = i + 3;\n            indices[index++] = i + 1;\n        }\n\n        if (isLoop) {\n            indices[index++] = vertices.length - 1;\n            indices[index++] = vertices.length - 2;\n            indices[index++] = 0;\n            indices[index++] = 0;\n            indices[index++] = 1;\n            indices[index++] = vertices.length - 1;\n        }\n\n        drawRaw(\n            verts,\n            indices,\n            opt.fixed,\n            gfx.defTex,\n            opt.shader,\n            opt.uniform,\n        );\n    }\n\n    function drawLines(opt: DrawLinesOpt) {\n        const pts = opt.pts;\n\n        if (!pts) {\n            throw new Error(\"drawLines() requires property \\\"pts\\\".\");\n        }\n\n        if (pts.length < 2) {\n            return;\n        }\n\n        if (pts.length > 2) {\n            switch (opt.join) {\n                case \"bevel\":\n                    return _drawLinesBevel(opt);\n                case \"round\":\n                    return _drawLinesRound(opt);\n                case \"miter\":\n                    return _drawLinesMiter(opt);\n            }\n        }\n\n        if (opt.radius && pts.length >= 3) {\n            // TODO: line joines\n            // TODO: rounded vertices for arbitrary polygonic shape\n            drawLine(Object.assign({}, opt, { p1: pts[0], p2: pts[1] }));\n\n            for (let i = 1; i < pts.length - 2; i++) {\n                const p1 = pts[i];\n                const p2 = pts[i + 1];\n                drawLine(Object.assign({}, opt, {\n                    p1: p1,\n                    p2: p2,\n                }));\n            }\n\n            drawLine(Object.assign({}, opt, {\n                p1: pts[pts.length - 2],\n                p2: pts[pts.length - 1],\n            }));\n        } else {\n            for (let i = 0; i < pts.length - 1; i++) {\n                drawLine(Object.assign({}, opt, {\n                    p1: pts[i],\n                    p2: pts[i + 1],\n                }));\n                // TODO: other line join types\n                if (opt.join !== \"none\") {\n                    drawCircle(Object.assign({}, opt, {\n                        pos: pts[i],\n                        radius: opt.width / 2,\n                    }));\n                }\n            }\n        }\n    }\n\n    function drawCurve(curve: (t: number) => Vec2, opt: DrawCurveOpt) {\n        const segments = opt.segments ?? 16;\n        const p: Vec2[] = [];\n        for (let i = 0; i <= segments; i++) {\n            p.push(curve(i / segments));\n        }\n        drawLines({\n            pts: p,\n            width: opt.width || 1,\n            pos: opt.pos,\n            color: opt.color,\n            opacity: opt.opacity,\n        });\n    }\n\n    function drawBezier(opt: DrawBezierOpt) {\n        drawCurve(\n            t => evaluateBezier(opt.pt1, opt.pt2, opt.pt3, opt.pt4, t),\n            opt,\n        );\n    }\n\n    function drawTriangle(opt: DrawTriangleOpt) {\n        if (!opt.p1 || !opt.p2 || !opt.p3) {\n            throw new Error(\n                \"drawTriangle() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\",\n            );\n        }\n        return drawPolygon(Object.assign({}, opt, {\n            pts: [opt.p1, opt.p2, opt.p3],\n        }));\n    }\n\n    function drawCircle(opt: DrawCircleOpt) {\n        if (typeof opt.radius !== \"number\") {\n            throw new Error(\"drawCircle() requires property \\\"radius\\\".\");\n        }\n\n        if (opt.radius === 0) {\n            return;\n        }\n\n        drawEllipse(Object.assign({}, opt, {\n            radiusX: opt.radius,\n            radiusY: opt.radius,\n            angle: 0,\n        }));\n    }\n\n    function drawEllipse(opt: DrawEllipseOpt) {\n        if (opt.radiusX === undefined || opt.radiusY === undefined) {\n            throw new Error(\n                \"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\",\n            );\n        }\n\n        if (opt.radiusX === 0 || opt.radiusY === 0) {\n            return;\n        }\n\n        const start = opt.start ?? 0;\n        const end = opt.end ?? 360;\n        const offset = anchorPt(opt.anchor ?? \"center\").scale(\n            new Vec2(-opt.radiusX, -opt.radiusY),\n        );\n\n        const pts = getArcPts(\n            offset,\n            opt.radiusX,\n            opt.radiusY,\n            start,\n            end,\n            opt.resolution,\n        );\n\n        // center\n        pts.unshift(offset);\n\n        const polyOpt = Object.assign({}, opt, {\n            pts,\n            radius: 0,\n            ...(opt.gradient\n                ? {\n                    colors: [\n                        opt.gradient[0],\n                        ...Array(pts.length - 1).fill(opt.gradient[1]),\n                    ],\n                }\n                : {}),\n        });\n\n        // full circle with outline shouldn't have the center point\n        if (end - start >= 360 && opt.outline) {\n            if (opt.fill !== false) {\n                drawPolygon(Object.assign({}, polyOpt, {\n                    outline: null,\n                }));\n            }\n            drawPolygon(Object.assign({}, polyOpt, {\n                pts: pts.slice(1),\n                fill: false,\n            }));\n            return;\n        }\n\n        drawPolygon(polyOpt);\n    }\n\n    function drawPolygon(opt: DrawPolygonOpt) {\n        if (!opt.pts) {\n            throw new Error(\"drawPolygon() requires property \\\"pts\\\".\");\n        }\n\n        const npts = opt.pts.length;\n\n        if (npts < 3) {\n            return;\n        }\n\n        pushTransform();\n        pushTranslate(opt.pos);\n        pushScale(opt.scale);\n        pushRotate(opt.angle);\n        pushTranslate(opt.offset);\n\n        if (opt.fill !== false) {\n            const color = opt.color ?? Color.WHITE;\n\n            const verts = opt.pts.map((pt, i) => ({\n                pos: new Vec2(pt.x, pt.y),\n                uv: opt.uv\n                    ? opt.uv[i]\n                    : new Vec2(0, 0),\n                color: opt.colors\n                    ? (opt.colors[i] ? opt.colors[i].mult(color) : color)\n                    : color,\n                opacity: opt.opacity ?? 1,\n            }));\n\n            let indices;\n\n            if (opt.triangulate /* && !isConvex(opt.pts)*/) {\n                const triangles = triangulate(opt.pts);\n                // TODO rewrite triangulate to just return new indices\n                indices = triangles.map(t => t.map(p => opt.pts.indexOf(p)))\n                    .flat();\n            } else {\n                indices = [...Array(npts - 2).keys()]\n                    .map((n) => [0, n + 1, n + 2])\n                    .flat();\n            }\n\n            drawRaw(\n                verts,\n                opt.indices ?? indices,\n                opt.fixed,\n                opt.uv ? opt.tex : gfx.defTex,\n                opt.shader,\n                opt.uniform,\n            );\n        }\n\n        if (opt.outline) {\n            drawLines({\n                pts: [...opt.pts, opt.pts[0]],\n                radius: opt.radius,\n                width: opt.outline.width,\n                color: opt.outline.color,\n                join: opt.outline.join,\n                uniform: opt.uniform,\n                fixed: opt.fixed,\n                opacity: opt.opacity ?? opt.outline.opacity,\n            });\n        }\n\n        popTransform();\n    }\n\n    function drawStenciled(\n        content: () => void,\n        mask: () => void,\n        test: number,\n    ) {\n        flush();\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        gl.enable(gl.STENCIL_TEST);\n\n        // don't perform test, pure write\n        gl.stencilFunc(\n            gl.NEVER,\n            1,\n            0xFF,\n        );\n\n        // always replace since we're writing to the buffer\n        gl.stencilOp(\n            gl.REPLACE,\n            gl.REPLACE,\n            gl.REPLACE,\n        );\n\n        mask();\n        flush();\n\n        // perform test\n        gl.stencilFunc(\n            test,\n            1,\n            0xFF,\n        );\n\n        // don't write since we're only testing\n        gl.stencilOp(\n            gl.KEEP,\n            gl.KEEP,\n            gl.KEEP,\n        );\n\n        content();\n        flush();\n        gl.disable(gl.STENCIL_TEST);\n    }\n\n    function drawMasked(content: () => void, mask: () => void) {\n        drawStenciled(content, mask, gl.EQUAL);\n    }\n\n    function drawSubtracted(content: () => void, mask: () => void) {\n        drawStenciled(content, mask, gl.NOTEQUAL);\n    }\n\n    function getViewportScale() {\n        return (gfx.viewport.width + gfx.viewport.height)\n            / (gfx.width + gfx.height);\n    }\n\n    function drawUnscaled(content: () => void) {\n        flush();\n        const ow = gfx.width;\n        const oh = gfx.height;\n        gfx.width = gfx.viewport.width;\n        gfx.height = gfx.viewport.height;\n        content();\n        flush();\n        gfx.width = ow;\n        gfx.height = oh;\n    }\n\n    function applyCharTransform(fchar: FormattedChar, tr: CharTransform) {\n        if (tr.pos) fchar.pos = fchar.pos.add(tr.pos);\n        if (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale));\n        if (tr.angle) fchar.angle += tr.angle;\n        if (tr.color && fchar.ch.length === 1) {\n            fchar.color = fchar.color.mult(tr.color);\n        }\n        if (tr.opacity) fchar.opacity *= tr.opacity;\n    }\n\n    // TODO: handle nested\n    function compileStyledText(text: string): {\n        charStyleMap: Record<number, string[]>;\n        text: string;\n    } {\n        const charStyleMap = {};\n        // get the text without the styling syntax\n        const renderText = text.replace(TEXT_STYLE_RE, \"$2\");\n        let idxOffset = 0;\n\n        // put each styled char index into a map for easy access when iterating each char\n        for (const match of text.matchAll(TEXT_STYLE_RE)) {\n            const origIdx = match.index - idxOffset;\n            for (let i = 0; i < match.groups.text.length; i++) {\n                charStyleMap[i + origIdx] = [match.groups.style];\n            }\n            // omit the style syntax in format string when calculating index\n            idxOffset += match[0].length - match.groups.text.length;\n        }\n\n        return {\n            charStyleMap: charStyleMap,\n            text: renderText,\n        };\n    }\n\n    type FontAtlas = {\n        font: BitmapFontData;\n        cursor: Vec2;\n        outline: Outline | null;\n    };\n\n    const fontAtlases: Record<string, FontAtlas> = {};\n\n    // TODO: cache formatted text\n    // format text and return a list of chars with their calculated position\n    function formatText(opt: DrawTextOpt): FormattedText {\n        if (opt.text === undefined) {\n            throw new Error(\"formatText() requires property \\\"text\\\".\");\n        }\n\n        let font = resolveFont(opt.font);\n\n        // if it's still loading\n        if (opt.text === \"\" || font instanceof Asset || !font) {\n            return {\n                width: 0,\n                height: 0,\n                chars: [],\n                opt: opt,\n            };\n        }\n\n        const { charStyleMap, text } = compileStyledText(opt.text + \"\");\n        const chars = runes(text);\n\n        // if it's not bitmap font, we draw it with 2d canvas or use cached image\n        if (font instanceof FontData || typeof font === \"string\") {\n            const fontName = font instanceof FontData\n                ? font.fontface.family\n                : font;\n            const opts: {\n                outline: Outline | null;\n                filter: TexFilter;\n            } = font instanceof FontData\n                ? {\n                    outline: font.outline,\n                    filter: font.filter,\n                }\n                : {\n                    outline: null,\n                    filter: DEF_FONT_FILTER,\n                };\n\n            // TODO: customizable font tex filter\n            const atlas: FontAtlas = fontAtlases[fontName] ?? {\n                font: {\n                    tex: new Texture(ggl, FONT_ATLAS_WIDTH, FONT_ATLAS_HEIGHT, {\n                        filter: opts.filter,\n                    }),\n                    map: {},\n                    size: DEF_TEXT_CACHE_SIZE,\n                },\n                cursor: new Vec2(0),\n                outline: opts.outline,\n            };\n\n            if (!fontAtlases[fontName]) {\n                fontAtlases[fontName] = atlas;\n            }\n\n            font = atlas.font;\n\n            for (const ch of chars) {\n                if (!atlas.font.map[ch]) {\n                    // TODO: use assets.packer to pack font texture\n                    const c2d = fontCacheC2d;\n                    c2d.clearRect(\n                        0,\n                        0,\n                        fontCacheCanvas.width,\n                        fontCacheCanvas.height,\n                    );\n                    c2d.font = `${font.size}px ${fontName}`;\n                    c2d.textBaseline = \"top\";\n                    c2d.textAlign = \"left\";\n                    c2d.fillStyle = \"#ffffff\";\n                    const m = c2d.measureText(ch);\n                    let w = Math.ceil(m.width);\n                    if (!w) continue;\n                    let h = font.size;\n                    if (atlas.outline) {\n                        c2d.lineJoin = \"round\";\n                        c2d.lineWidth = atlas.outline.width * 2;\n                        c2d.strokeStyle = atlas.outline.color.toHex();\n                        c2d.strokeText(\n                            ch,\n                            atlas.outline.width,\n                            atlas.outline.width,\n                        );\n                        w += atlas.outline.width * 2;\n                        h += atlas.outline.width * 3;\n                    }\n                    c2d.fillText(\n                        ch,\n                        atlas.outline?.width ?? 0,\n                        atlas.outline?.width ?? 0,\n                    );\n\n                    const img = c2d.getImageData(0, 0, w, h);\n\n                    // if we are about to exceed the X axis of the texture, go to another line\n                    if (atlas.cursor.x + w > FONT_ATLAS_WIDTH) {\n                        atlas.cursor.x = 0;\n                        atlas.cursor.y += h;\n                        if (atlas.cursor.y > FONT_ATLAS_HEIGHT) {\n                            // TODO: create another atlas\n                            throw new Error(\n                                \"Font atlas exceeds character limit\",\n                            );\n                        }\n                    }\n\n                    font.tex.update(img, atlas.cursor.x, atlas.cursor.y);\n                    font.map[ch] = new Quad(\n                        atlas.cursor.x,\n                        atlas.cursor.y,\n                        w,\n                        h,\n                    );\n                    atlas.cursor.x += w;\n                }\n            }\n        }\n\n        const size = opt.size || font.size;\n        const scale = vec2(opt.scale ?? 1).scale(size / font.size);\n        const lineSpacing = opt.lineSpacing ?? 0;\n        const letterSpacing = opt.letterSpacing ?? 0;\n        let curX = 0;\n        let tw = 0;\n        let th = 0;\n        const lines: Array<{\n            width: number;\n            chars: FormattedChar[];\n        }> = [];\n        let curLine: FormattedChar[] = [];\n        let cursor = 0;\n        let lastSpace = null;\n        let lastSpaceWidth = null;\n\n        // TODO: word break\n        while (cursor < chars.length) {\n            let ch = chars[cursor];\n\n            // always new line on '\\n'\n            if (ch === \"\\n\") {\n                th += size + lineSpacing;\n\n                lines.push({\n                    width: curX - letterSpacing,\n                    chars: curLine,\n                });\n\n                lastSpace = null;\n                lastSpaceWidth = null;\n                curX = 0;\n                curLine = [];\n            } else {\n                let q = font.map[ch];\n\n                // TODO: leave space if character not found?\n                if (q) {\n                    let gw = q.w * scale.x;\n\n                    if (opt.width && curX + gw > opt.width) {\n                        // new line on last word if width exceeds\n                        th += size + lineSpacing;\n                        if (lastSpace != null) {\n                            cursor -= curLine.length - lastSpace;\n                            ch = chars[cursor];\n                            q = font.map[ch];\n                            gw = q.w * scale.x;\n                            // omit trailing space\n                            curLine = curLine.slice(0, lastSpace - 1);\n                            curX = lastSpaceWidth;\n                        }\n                        lastSpace = null;\n                        lastSpaceWidth = null;\n                        lines.push({\n                            width: curX - letterSpacing,\n                            chars: curLine,\n                        });\n                        curX = 0;\n                        curLine = [];\n                    }\n\n                    // push char\n                    curLine.push({\n                        tex: font.tex,\n                        width: q.w,\n                        height: q.h,\n                        // without some padding there'll be visual artifacts on edges\n                        quad: new Quad(\n                            q.x / font.tex.width,\n                            q.y / font.tex.height,\n                            q.w / font.tex.width,\n                            q.h / font.tex.height,\n                        ),\n                        ch: ch,\n                        pos: new Vec2(curX, th),\n                        opacity: opt.opacity ?? 1,\n                        color: opt.color ?? Color.WHITE,\n                        scale: vec2(scale),\n                        angle: 0,\n                    });\n\n                    if (ch === \" \") {\n                        lastSpace = curLine.length;\n                        lastSpaceWidth = curX;\n                    }\n\n                    curX += gw;\n                    tw = Math.max(tw, curX);\n                    curX += letterSpacing;\n                }\n            }\n\n            cursor++;\n        }\n\n        lines.push({\n            width: curX - letterSpacing,\n            chars: curLine,\n        });\n\n        th += size;\n\n        if (opt.width) {\n            tw = opt.width;\n        }\n\n        const fchars: FormattedChar[] = [];\n\n        for (let i = 0; i < lines.length; i++) {\n            const ox = (tw - lines[i].width) * alignPt(opt.align ?? \"left\");\n\n            for (const fchar of lines[i].chars) {\n                const q = font.map[fchar.ch];\n                const idx = fchars.length + i;\n\n                fchar.pos = fchar.pos.add(ox, 0).add(\n                    q.w * scale.x * 0.5,\n                    q.h * scale.y * 0.5,\n                );\n\n                if (opt.transform) {\n                    const tr = typeof opt.transform === \"function\"\n                        ? opt.transform(idx, fchar.ch)\n                        : opt.transform;\n                    if (tr) {\n                        applyCharTransform(fchar, tr);\n                    }\n                }\n\n                if (charStyleMap[idx]) {\n                    const styles = charStyleMap[idx];\n                    for (const name of styles) {\n                        const style = opt.styles[name];\n                        const tr = typeof style === \"function\"\n                            ? style(idx, fchar.ch)\n                            : style;\n                        if (tr) {\n                            applyCharTransform(fchar, tr);\n                        }\n                    }\n                }\n\n                fchars.push(fchar);\n            }\n        }\n\n        return {\n            width: tw,\n            height: th,\n            chars: fchars,\n            opt: opt,\n        };\n    }\n\n    function drawText(opt: DrawTextOpt) {\n        drawFormattedText(formatText(opt));\n    }\n\n    function drawFormattedText(ftext: FormattedText) {\n        pushTransform();\n        pushTranslate(ftext.opt.pos);\n        pushRotate(ftext.opt.angle);\n        pushTranslate(\n            anchorPt(ftext.opt.anchor ?? \"topleft\").add(1, 1).scale(\n                ftext.width,\n                ftext.height,\n            ).scale(-0.5),\n        );\n        ftext.chars.forEach((ch) => {\n            drawUVQuad({\n                tex: ch.tex,\n                width: ch.width,\n                height: ch.height,\n                pos: ch.pos,\n                scale: ch.scale,\n                angle: ch.angle,\n                color: ch.color,\n                opacity: ch.opacity,\n                quad: ch.quad,\n                anchor: \"center\",\n                uniform: ftext.opt.uniform,\n                shader: ftext.opt.shader,\n                fixed: ftext.opt.fixed,\n            });\n        });\n        popTransform();\n    }\n\n    // get game width\n    function width(): number {\n        return gfx.width;\n    }\n\n    // get game height\n    function height(): number {\n        return gfx.height;\n    }\n\n    // get game root\n    function getTreeRoot(): GameObj {\n        return game.root;\n    }\n\n    // transform a point from window space to content space\n    function windowToContent(pt: Vec2) {\n        return new Vec2(\n            (pt.x - gfx.viewport.x) * width() / gfx.viewport.width,\n            (pt.y - gfx.viewport.y) * height() / gfx.viewport.height,\n        );\n    }\n\n    // transform a point from content space to view space\n    function contentToView(pt: Vec2) {\n        return new Vec2(\n            pt.x * gfx.viewport.width / gfx.width,\n            pt.y * gfx.viewport.height / gfx.height,\n        );\n    }\n\n    function mousePos() {\n        return windowToContent(app.mousePos());\n    }\n\n    let debugPaused = false;\n\n    const debug: Debug = {\n        inspect: false,\n        timeScale: 1,\n        showLog: true,\n        fps: () => app.fps(),\n        numFrames: () => app.numFrames(),\n        stepFrame: updateFrame,\n        drawCalls: () => gfx.lastDrawCalls,\n        clearLog: () => game.logs = [],\n        log: (msg) => {\n            const max = gopt.logMax ?? LOG_MAX;\n            game.logs.unshift({\n                msg: msg,\n                time: app.time(),\n            });\n            if (game.logs.length > max) {\n                game.logs = game.logs.slice(0, max);\n            }\n        },\n        error: (msg) =>\n            debug.log(new Error(msg.toString ? msg.toString() : msg as string)),\n        curRecording: null,\n        numObjects: () => get(\"*\", { recursive: true }).length,\n        get paused() {\n            return debugPaused;\n        },\n        set paused(v) {\n            debugPaused = v;\n            if (v) {\n                audio.ctx.suspend();\n            } else {\n                audio.ctx.resume();\n            }\n        },\n    };\n\n    function dt() {\n        return app.dt() * debug.timeScale;\n    }\n\n    function camPos(...pos: Vec2Args): Vec2 {\n        if (pos.length > 0) {\n            game.cam.pos = vec2(...pos);\n        }\n        return game.cam.pos ? game.cam.pos.clone() : center();\n    }\n\n    function camScale(...scale: Vec2Args): Vec2 {\n        if (scale.length > 0) {\n            game.cam.scale = vec2(...scale);\n        }\n        return game.cam.scale.clone();\n    }\n\n    function camRot(angle: number): number {\n        if (angle !== undefined) {\n            game.cam.angle = angle;\n        }\n        return game.cam.angle;\n    }\n\n    function camFlash(\n        flashColor: Color = rgb(255, 255, 255),\n        fadeOutTime: number = 1,\n    ) {\n        let flash = add([\n            rect(width(), height()),\n            color(flashColor),\n            opacity(1),\n            fixed(),\n        ]);\n        let fade = flash.fadeOut(fadeOutTime);\n        fade.onEnd(() => destroy(flash));\n        return fade;\n    }\n\n    function camTransform(): Mat4 {\n        return game.cam.transform.clone();\n    }\n\n    function shake(intensity: number = 12) {\n        game.cam.shake += intensity;\n    }\n\n    function toScreen(p: Vec2): Vec2 {\n        return game.cam.transform.multVec2(p);\n    }\n\n    function toWorld(p: Vec2): Vec2 {\n        return game.cam.transform.invert().multVec2(p);\n    }\n\n    function calcTransform(obj: GameObj): Mat4 {\n        const tr = new Mat4();\n        if (obj.pos) tr.translate(obj.pos);\n        if (obj.scale) tr.scale(obj.scale);\n        if (obj.angle) tr.rotate(obj.angle);\n        return obj.parent ? tr.mult(obj.parent.transform) : tr;\n    }\n\n    function make<T>(comps: CompList<T> = []): GameObj<T> {\n        const compStates = new Map();\n        const cleanups = {};\n        const events = new KEventHandler();\n        const inputEvents: KEventController[] = [];\n        let onCurCompCleanup = null;\n        let paused = false;\n\n        // @ts-ignore\n        const obj: GameObj = {\n            id: uid(),\n            // TODO: a nice way to hide / pause when add()-ing\n            hidden: false,\n            transform: new Mat4(),\n            children: [],\n            parent: null,\n\n            set paused(p) {\n                if (p === paused) return;\n                paused = p;\n                for (const e of inputEvents) {\n                    e.paused = p;\n                }\n            },\n\n            get paused() {\n                return paused;\n            },\n\n            get tags() {\n                const tags = [];\n                for (const [key, value] of compStates.entries()) {\n                    if (Object.keys(value).length == 1) {\n                        tags.push(key);\n                    }\n                }\n                return tags;\n            },\n\n            add<T2>(a: CompList<T2> | GameObj<T2> = []): GameObj<T2> {\n                const obj = Array.isArray(a) ? make(a) : a;\n                if (obj.parent) {\n                    throw new Error(\n                        \"Cannot add a game obj that already has a parent.\",\n                    );\n                }\n                obj.parent = this;\n                obj.transform = calcTransform(obj);\n                this.children.push(obj);\n                // TODO: trigger add for children\n                obj.trigger(\"add\", obj);\n                game.events.trigger(\"add\", obj);\n                return obj;\n            },\n\n            readd(obj: GameObj): GameObj {\n                const idx = this.children.indexOf(obj);\n                if (idx !== -1) {\n                    this.children.splice(idx, 1);\n                    this.children.push(obj);\n                }\n                return obj;\n            },\n\n            remove(obj: GameObj): void {\n                const idx = this.children.indexOf(obj);\n                if (idx !== -1) {\n                    obj.parent = null;\n                    this.children.splice(idx, 1);\n                    const trigger = (o) => {\n                        o.trigger(\"destroy\");\n                        game.events.trigger(\"destroy\", o);\n                        o.children.forEach((child) => trigger(child));\n                    };\n                    trigger(obj);\n                }\n            },\n\n            // TODO: recursive\n            removeAll(tag?: Tag) {\n                if (tag) {\n                    this.get(tag).forEach((obj) => this.remove(obj));\n                } else {\n                    for (const child of [...this.children]) this.remove(child);\n                }\n            },\n\n            update() {\n                if (this.paused) return;\n                this.children\n                    /*.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))*/\n                    .forEach((child) => child.update());\n                this.trigger(\"update\");\n            },\n\n            draw(\n                this: GameObj<\n                    PosComp | ScaleComp | RotateComp | FixedComp | MaskComp\n                >,\n            ) {\n                if (this.hidden) return;\n                if (this.canvas) {\n                    flush();\n                    this.canvas.bind();\n                }\n                const f = gfx.fixed;\n                if (this.fixed) gfx.fixed = true;\n                pushTransform();\n                pushTranslate(this.pos);\n                pushScale(this.scale);\n                pushRotate(this.angle);\n                const children = this.children.sort((o1, o2) => {\n                    const l1 = o1.layerIndex ?? game.defaultLayerIndex;\n                    const l2 = o2.layerIndex ?? game.defaultLayerIndex;\n                    return (l1 - l2) || (o1.z ?? 0) - (o2.z ?? 0);\n                });\n                // TODO: automatically don't draw if offscreen\n                if (this.mask) {\n                    const maskFunc = {\n                        intersect: drawMasked,\n                        subtract: drawSubtracted,\n                    }[this.mask];\n                    if (!maskFunc) {\n                        throw new Error(`Invalid mask func: \"${this.mask}\"`);\n                    }\n                    maskFunc(() => {\n                        children.forEach((child) => child.draw());\n                    }, () => {\n                        this.trigger(\"draw\");\n                    });\n                } else {\n                    this.trigger(\"draw\");\n                    children.forEach((child) => child.draw());\n                }\n                popTransform();\n                gfx.fixed = f;\n                if (this.canvas) {\n                    flush();\n                    this.canvas.unbind();\n                }\n            },\n\n            drawInspect(this: GameObj<PosComp | ScaleComp | RotateComp>) {\n                if (this.hidden) return;\n                pushTransform();\n                pushTranslate(this.pos);\n                pushScale(this.scale);\n                pushRotate(this.angle);\n                this.children\n                    /*.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))*/\n                    .forEach((child) => child.drawInspect());\n                this.trigger(\"drawInspect\");\n                popTransform();\n            },\n\n            // use a comp, or tag\n            use(comp: Comp | Tag) {\n                if (!comp) {\n                    return;\n                }\n\n                // class object\n                if (isClass(comp)) comp = new (comp as any)(this);\n\n                // function object\n                if (typeof comp === \"function\") {\n                    return this.use(\n                        (comp as (v: any) => any)(this),\n                    );\n                }\n\n                // tag\n                if (typeof comp === \"string\") {\n                    return this.use({\n                        id: comp,\n                    });\n                }\n\n                let gc = [];\n\n                // clear if overwrite\n                if (comp.id) {\n                    this.unuse(comp.id);\n                    cleanups[comp.id] = [];\n                    gc = cleanups[comp.id];\n                    compStates.set(comp.id, comp);\n                }\n\n                for (const k in comp) {\n                    if (COMP_DESC.has(k)) {\n                        continue;\n                    }\n\n                    const prop = Object.getOwnPropertyDescriptor(comp, k);\n\n                    if (typeof prop.value === \"function\") {\n                        comp[k] = comp[k].bind(this);\n                    }\n\n                    if (prop.set) {\n                        Object.defineProperty(comp, k, {\n                            set: prop.set.bind(this),\n                        });\n                    }\n\n                    if (prop.get) {\n                        Object.defineProperty(comp, k, {\n                            get: prop.get.bind(this),\n                        });\n                    }\n\n                    if (COMP_EVENTS.has(k)) {\n                        // automatically clean up events created by components in add() stage\n                        const func = k === \"add\"\n                            ? () => {\n                                onCurCompCleanup = (c) => gc.push(c);\n                                comp[k]();\n                                onCurCompCleanup = null;\n                            }\n                            : comp[k];\n                        gc.push(this.on(k, func).cancel);\n                    } else {\n                        if (this[k] === undefined) {\n                            // assign comp fields to game obj\n                            Object.defineProperty(this, k, {\n                                get: () => comp[k],\n                                set: (val) => comp[k] = val,\n                                configurable: true,\n                                enumerable: true,\n                            });\n                            gc.push(() => delete this[k]);\n                        } else {\n                            throw new Error(\n                                `Duplicate component property: \"${k}\"`,\n                            );\n                        }\n                    }\n                }\n\n                // check for component dependencies\n                const checkDeps = () => {\n                    if (!comp.require) return;\n                    for (const dep of comp.require) {\n                        if (!this.c(dep)) {\n                            throw new Error(\n                                `Component \"${comp.id}\" requires component \"${dep}\"`,\n                            );\n                        }\n                    }\n                };\n\n                if (comp.destroy) {\n                    gc.push(comp.destroy.bind(this));\n                }\n\n                // manually trigger add event if object already exist\n                if (this.exists()) {\n                    checkDeps();\n                    if (comp.add) {\n                        onCurCompCleanup = (c) => gc.push(c);\n                        comp.add.call(this);\n                        onCurCompCleanup = null;\n                    }\n                } else {\n                    if (comp.require) {\n                        gc.push(this.on(\"add\", checkDeps).cancel);\n                    }\n                }\n            },\n\n            unuse(id: Tag) {\n                if (cleanups[id]) {\n                    cleanups[id].forEach((e) => e());\n                    delete cleanups[id];\n                }\n                if (compStates.has(id)) {\n                    compStates.delete(id);\n                }\n            },\n\n            c(id: Tag): Comp {\n                return compStates.get(id);\n            },\n\n            get(t: Tag | Tag[], opts: GetOpt = {}): GameObj[] {\n                let list: GameObj[] = opts.recursive\n                    ? this.children.flatMap(function recurse(child) {\n                        return [child, ...child.children.flatMap(recurse)];\n                    })\n                    : this.children;\n                list = list.filter((child) => t ? child.is(t) : true);\n                if (opts.liveUpdate) {\n                    const isChild = (obj) => {\n                        return opts.recursive\n                            ? this.isAncestorOf(obj)\n                            : obj.parent === this;\n                    };\n                    const events = [];\n                    // TODO: handle when object add / remove tags\n                    // TODO: clean up when obj destroyed\n                    events.push(onAdd((obj) => {\n                        if (isChild(obj) && obj.is(t)) {\n                            list.push(obj);\n                        }\n                    }));\n                    events.push(onDestroy((obj) => {\n                        if (isChild(obj) && obj.is(t)) {\n                            const idx = list.findIndex((o) => o.id === obj.id);\n                            if (idx !== -1) {\n                                list.splice(idx, 1);\n                            }\n                        }\n                    }));\n                    this.onDestroy(() => {\n                        for (const ev of events) {\n                            ev.cancel();\n                        }\n                    });\n                }\n                return list;\n            },\n\n            query(opt: QueryOpt) {\n                const hierarchy = opt.hierarchy || \"children\";\n                let list = [];\n                switch (hierarchy) {\n                    case \"children\":\n                        list = this.children;\n                        break;\n                    case \"siblings\":\n                        list = this.parent\n                            ? this.parent.children.filter((o: GameObj) =>\n                                o !== this\n                            )\n                            : [];\n                        break;\n                    case \"ancestors\":\n                        let parent = this.parent;\n                        while (parent) {\n                            list.push(parent);\n                            parent = parent.parent;\n                        }\n                        break;\n                    case \"descendants\":\n                        list = this.children.flatMap(\n                            function recurse(child: GameObj) {\n                                return [\n                                    child,\n                                    ...child.children.flatMap(recurse),\n                                ];\n                            },\n                        );\n                        break;\n                }\n                if (opt.include) {\n                    const includeOp = opt.includeOp || \"and\";\n                    if (includeOp === \"and\" || !Array.isArray(opt.include)) {\n                        // Accept if all match\n                        list = list.filter(o => o.is(opt.include));\n                    } else { // includeOp == \"or\"\n                        // Accept if some match\n                        list = list.filter(o =>\n                            (opt.include as string[]).some(t => o.is(t))\n                        );\n                    }\n                }\n                if (opt.exclude) {\n                    const excludeOp = opt.includeOp || \"and\";\n                    if (excludeOp === \"and\" || !Array.isArray(opt.include)) {\n                        // Reject if all match\n                        list = list.filter(o => !o.is(opt.exclude));\n                    } else { // includeOp == \"or\"\n                        // Reject if some match\n                        list = list.filter(o =>\n                            !(opt.exclude as string[]).some(t => o.is(t))\n                        );\n                    }\n                }\n                if (opt.visible === true) {\n                    list = list.filter(o => o.visible);\n                }\n                if (opt.distance) {\n                    if (!this.pos) {\n                        throw Error(\n                            \"Can't do a distance query from an object without pos\",\n                        );\n                    }\n                    const distanceOp = opt.distanceOp || \"near\";\n                    const sdist = opt.distance * opt.distance;\n                    if (distanceOp === \"near\") {\n                        list = list.filter(o =>\n                            o.pos && this.pos.sdist(o.pos) <= sdist\n                        );\n                    } else { // distanceOp === \"far\"\n                        list = list.filter(o =>\n                            o.pos && this.pos.sdist(o.pos) > sdist\n                        );\n                    }\n                }\n                if (opt.name) {\n                    list = list.filter(o => o.name === opt.name);\n                }\n                return list;\n            },\n\n            isAncestorOf(obj: GameObj) {\n                if (!obj.parent) {\n                    return false;\n                }\n                return obj.parent === this || this.isAncestorOf(obj.parent);\n            },\n\n            exists(): boolean {\n                return game.root.isAncestorOf(this);\n            },\n\n            is(tag: Tag | Tag[]): boolean {\n                if (tag === \"*\") {\n                    return true;\n                }\n                if (Array.isArray(tag)) {\n                    for (const t of tag) {\n                        if (!this.c(t)) {\n                            return false;\n                        }\n                    }\n                    return true;\n                } else {\n                    return this.c(tag) != null;\n                }\n            },\n\n            on(name: string, action: (...args) => void): KEventController {\n                const ctrl = events.on(name, action.bind(this));\n                if (onCurCompCleanup) {\n                    onCurCompCleanup(() => ctrl.cancel());\n                }\n                return ctrl;\n            },\n\n            trigger(name: string, ...args): void {\n                events.trigger(name, ...args);\n                game.objEvents.trigger(name, this, ...args);\n            },\n\n            destroy() {\n                if (this.parent) {\n                    this.parent.remove(this);\n                }\n            },\n\n            inspect() {\n                const info = {};\n                for (const [tag, comp] of compStates) {\n                    info[tag] = comp.inspect ? comp.inspect() : null;\n                }\n                return info;\n            },\n\n            onAdd(cb: () => void): KEventController {\n                return this.on(\"add\", cb);\n            },\n\n            onUpdate(cb: () => void): KEventController {\n                return this.on(\"update\", cb);\n            },\n\n            onDraw(cb: () => void): KEventController {\n                return this.on(\"draw\", cb);\n            },\n\n            onDestroy(action: () => void): KEventController {\n                return this.on(\"destroy\", action);\n            },\n\n            clearEvents() {\n                events.clear();\n            },\n        };\n\n        const evs = [\n            \"onKeyPress\",\n            \"onKeyPressRepeat\",\n            \"onKeyDown\",\n            \"onKeyRelease\",\n            \"onMousePress\",\n            \"onMouseDown\",\n            \"onMouseRelease\",\n            \"onMouseMove\",\n            \"onCharInput\",\n            \"onMouseMove\",\n            \"onTouchStart\",\n            \"onTouchMove\",\n            \"onTouchEnd\",\n            \"onScroll\",\n            \"onGamepadButtonPress\",\n            \"onGamepadButtonDown\",\n            \"onGamepadButtonRelease\",\n            \"onGamepadStick\",\n            \"onButtonPress\",\n            \"onButtonDown\",\n            \"onButtonRelease\",\n        ] as const;\n\n        for (const e of evs) {\n            obj[e] = (...args: unknown[]) => {\n                const ev = app[e as any]?.(...args);\n                inputEvents.push(ev);\n\n                // TODO: what if the game object is destroy and re-added\n                obj.onDestroy(() => ev.cancel());\n                return ev;\n            };\n        }\n\n        for (const comp of comps) {\n            obj.use(comp);\n        }\n\n        return obj as unknown as GameObj<T>;\n    }\n\n    // add an event to a tag\n    function on(\n        event: string,\n        tag: Tag,\n        cb: (obj: GameObj, ...args) => void,\n    ): KEventController {\n        if (!game.objEvents[event]) {\n            game.objEvents[event] = new Registry();\n        }\n        return game.objEvents.on(event, (obj, ...args) => {\n            if (obj.is(tag)) {\n                cb(obj, ...args);\n            }\n        });\n    }\n\n    const onUpdate = overload2((action: () => void): KEventController => {\n        const obj = add([{ update: action }]);\n        return {\n            get paused() {\n                return obj.paused;\n            },\n            set paused(p) {\n                obj.paused = p;\n            },\n            cancel: () => obj.destroy(),\n        };\n    }, (tag: Tag, action: (obj: GameObj) => void) => {\n        return on(\"update\", tag, action);\n    });\n\n    const onDraw = overload2((action: () => void): KEventController => {\n        const obj = add([{ draw: action }]);\n        return {\n            get paused() {\n                return obj.hidden;\n            },\n            set paused(p) {\n                obj.hidden = p;\n            },\n            cancel: () => obj.destroy(),\n        };\n    }, (tag: Tag, action: (obj: GameObj) => void) => {\n        return on(\"draw\", tag, action);\n    });\n\n    const onAdd = overload2((action: (obj: GameObj) => void) => {\n        return game.events.on(\"add\", action);\n    }, (tag: Tag, action: (obj: GameObj) => void) => {\n        return on(\"add\", tag, action);\n    });\n\n    const onDestroy = overload2((action: (obj: GameObj) => void) => {\n        return game.events.on(\"destroy\", action);\n    }, (tag: Tag, action: (obj: GameObj) => void) => {\n        return on(\"destroy\", tag, action);\n    });\n\n    // add an event that runs with objs with t1 collides with objs with t2\n    function onCollide(\n        t1: Tag,\n        t2: Tag,\n        f: (a: GameObj, b: GameObj, col?: Collision) => void,\n    ): KEventController {\n        return on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col));\n    }\n\n    function onCollideUpdate(\n        t1: Tag,\n        t2: Tag,\n        f: (a: GameObj, b: GameObj, col?: Collision) => void,\n    ): KEventController {\n        return on(\"collideUpdate\", t1, (a, b, col) => b.is(t2) && f(a, b, col));\n    }\n\n    function onCollideEnd(\n        t1: Tag,\n        t2: Tag,\n        f: (a: GameObj, b: GameObj, col?: Collision) => void,\n    ): KEventController {\n        return on(\"collideEnd\", t1, (a, b, col) => b.is(t2) && f(a, b, col));\n    }\n\n    function forAllCurrentAndFuture(t: Tag, action: (obj: GameObj) => void) {\n        get(t, { recursive: true }).forEach(action);\n        onAdd(t, action);\n    }\n\n    const onClick = overload2((action: () => void) => {\n        return app.onMousePress(action);\n    }, (tag: Tag, action: (obj: GameObj) => void) => {\n        const events = [];\n        forAllCurrentAndFuture(tag, (obj) => {\n            if (!obj.area) {\n                throw new Error(\n                    \"onClick() requires the object to have area() component\",\n                );\n            }\n            events.push(obj.onClick(() => action(obj)));\n        });\n        return KEventController.join(events);\n    });\n\n    // add an event that runs once when objs with tag t is hovered\n    function onHover(t: Tag, action: (obj: GameObj) => void): KEventController {\n        const events = [];\n        forAllCurrentAndFuture(t, (obj) => {\n            if (!obj.area) {\n                throw new Error(\n                    \"onHover() requires the object to have area() component\",\n                );\n            }\n            events.push(obj.onHover(() => action(obj)));\n        });\n        return KEventController.join(events);\n    }\n\n    // add an event that runs once when objs with tag t is hovered\n    function onHoverUpdate(\n        t: Tag,\n        action: (obj: GameObj) => void,\n    ): KEventController {\n        const events = [];\n        forAllCurrentAndFuture(t, (obj) => {\n            if (!obj.area) {\n                throw new Error(\n                    \"onHoverUpdate() requires the object to have area() component\",\n                );\n            }\n            events.push(obj.onHoverUpdate(() => action(obj)));\n        });\n        return KEventController.join(events);\n    }\n\n    // add an event that runs once when objs with tag t is unhovered\n    function onHoverEnd(\n        t: Tag,\n        action: (obj: GameObj) => void,\n    ): KEventController {\n        const events = [];\n        forAllCurrentAndFuture(t, (obj) => {\n            if (!obj.area) {\n                throw new Error(\n                    \"onHoverEnd() requires the object to have area() component\",\n                );\n            }\n            events.push(obj.onHoverEnd(() => action(obj)));\n        });\n        return KEventController.join(events);\n    }\n\n    function setGravity(g: number) {\n        // If g > 0 use either the current direction or use (0, 1)\n        // Else null\n        game.gravity = g ? (game.gravity || vec2(0, 1)).unit().scale(g) : null;\n    }\n\n    function getGravity() {\n        // If gravity > 0 return magnitude\n        // Else 0\n        return game.gravity ? game.gravity.len() : 0;\n    }\n\n    function setGravityDirection(d: Vec2) {\n        // If gravity > 0 keep magnitude, otherwise use 1\n        game.gravity = d.unit().scale(game.gravity ? game.gravity.len() : 1);\n    }\n\n    function getGravityDirection() {\n        // If gravity != null return unit vector, otherwise return (0, 1)\n        return game.gravity ? game.gravity.unit() : vec2(0, 1);\n    }\n\n    function setBackground(...args) {\n        if (args.length === 1 || args.length === 2) {\n            gfx.bgColor = rgb(args[0]);\n            if (args[1]) gfx.bgAlpha = args[1];\n        } else if (args.length === 3 || args.length === 4) {\n            gfx.bgColor = rgb(args[0], args[1], args[2]);\n            if (args[3]) gfx.bgAlpha = args[3];\n        }\n        gl.clearColor(\n            gfx.bgColor.r / 255,\n            gfx.bgColor.g / 255,\n            gfx.bgColor.b / 255,\n            gfx.bgAlpha,\n        );\n    }\n\n    function getBackground() {\n        return gfx.bgColor.clone();\n    }\n\n    function toFixed(n: number, f: number) {\n        return Number(n.toFixed(f));\n    }\n\n    function isFixed(obj: GameObj) {\n        if (obj.fixed) return true;\n        return obj.parent ? isFixed(obj.parent) : false;\n    }\n\n    function getRenderProps(obj: GameObj<any>) {\n        return {\n            color: obj.color,\n            opacity: obj.opacity,\n            anchor: obj.anchor,\n            outline: obj.outline,\n            shader: obj.shader,\n            uniform: obj.uniform,\n        };\n    }\n\n    function onLoad(cb: () => void): void {\n        if (assets.loaded) {\n            cb();\n        } else {\n            game.events.on(\"load\", cb);\n        }\n    }\n\n    function scene(id: SceneName, def: SceneDef) {\n        game.scenes[id] = def;\n    }\n\n    function go(name: SceneName, ...args) {\n        if (!game.scenes[name]) {\n            throw new Error(`Scene not found: ${name}`);\n        }\n\n        game.events.onOnce(\"frameEnd\", () => {\n            game.events.trigger(\"sceneLeave\", name);\n            app.events.clear();\n            game.events.clear();\n            game.objEvents.clear();\n            [...game.root.children].forEach((obj) => {\n                if (\n                    !obj.stay\n                    || (obj.scenesToStay && !obj.scenesToStay.includes(name))\n                ) {\n                    game.root.remove(obj);\n                }\n            });\n\n            game.root.clearEvents();\n            initEvents();\n\n            // cam\n            game.cam = {\n                pos: null,\n                scale: vec2(1),\n                angle: 0,\n                shake: 0,\n                transform: new Mat4(),\n            };\n\n            game.scenes[name](...args);\n        });\n\n        game.currentScene = name;\n    }\n\n    function onSceneLeave(\n        action: (newScene?: string) => void,\n    ): KEventController {\n        return game.events.on(\"sceneLeave\", action);\n    }\n\n    function getSceneName() {\n        return game.currentScene;\n    }\n\n    function getData<T>(key: string, def?: T): T {\n        try {\n            return JSON.parse(window.localStorage[key]);\n        } catch {\n            if (def) {\n                setData(key, def);\n                return def;\n            } else {\n                return null;\n            }\n        }\n    }\n\n    function setData(key: string, data: any) {\n        window.localStorage[key] = JSON.stringify(data);\n    }\n\n    function plug<T extends Record<string, any>>(\n        plugin: KaboomPlugin<T>,\n        ...args: any\n    ): KaboomCtx & T {\n        const funcs = plugin(ctx);\n        let funcsObj: T;\n        if (typeof funcs === \"function\") {\n            const plugWithOptions = funcs(...args);\n            funcsObj = plugWithOptions(ctx);\n        } else {\n            funcsObj = funcs;\n        }\n        for (const k in funcsObj) {\n            // @ts-ignore\n            ctx[k] = funcsObj[k];\n            if (gopt.global !== false) {\n                // @ts-ignore\n                window[k] = funcsObj[k];\n            }\n        }\n        return ctx as KaboomCtx & T;\n    }\n\n    function center(): Vec2 {\n        return vec2(width() / 2, height() / 2);\n    }\n\n    enum EdgeMask {\n        None = 0,\n        Left = 1,\n        Top = 2,\n        LeftTop = 3,\n        Right = 4,\n        Horizontal = 5,\n        RightTop = 6,\n        HorizontalTop = 7,\n        Bottom = 8,\n        LeftBottom = 9,\n        Vertical = 10,\n        LeftVertical = 11,\n        RightBottom = 12,\n        HorizontalBottom = 13,\n        RightVertical = 14,\n        All = 15,\n    }\n\n    function addLevel(\n        map: string[],\n        opt: LevelOpt,\n    ): GameObj<PosComp | LevelComp> {\n        if (!opt.tileWidth || !opt.tileHeight) {\n            throw new Error(\"Must provide tileWidth and tileHeight.\");\n        }\n\n        // TODO: custom parent\n        const level = add([\n            pos(opt.pos ?? vec2(0)),\n        ]) as GameObj<PosComp | LevelComp>;\n\n        const numRows = map.length;\n        let numColumns = 0;\n\n        // The spatial map keeps track of the objects at each location\n        let spatialMap: GameObj[][] | null = null;\n        let costMap: number[] | null = null;\n        let edgeMap: number[] | null = null;\n        let connectivityMap: number[] | null = null;\n\n        const tile2Hash = (tilePos: Vec2) => tilePos.x + tilePos.y * numColumns;\n        const hash2Tile = (hash: number) =>\n            vec2(\n                Math.floor(hash % numColumns),\n                Math.floor(hash / numColumns),\n            );\n\n        const createSpatialMap = () => {\n            spatialMap = [];\n            for (const child of level.children) {\n                insertIntoSpatialMap(child);\n            }\n        };\n\n        const insertIntoSpatialMap = (obj: GameObj) => {\n            const i = tile2Hash(obj.tilePos);\n            if (spatialMap[i]) {\n                spatialMap[i].push(obj);\n            } else {\n                spatialMap[i] = [obj];\n            }\n        };\n\n        const removeFromSpatialMap = (obj: GameObj) => {\n            const i = tile2Hash(obj.tilePos);\n            if (spatialMap[i]) {\n                const index = spatialMap[i].indexOf(obj);\n                if (index >= 0) {\n                    spatialMap[i].splice(index, 1);\n                }\n            }\n        };\n\n        const updateSpatialMap = () => {\n            let spatialMapChanged = false;\n            for (const child of level.children) {\n                const tilePos = level.pos2Tile(child.pos);\n                if (\n                    child.tilePos.x != tilePos.x || child.tilePos.y != tilePos.y\n                ) {\n                    spatialMapChanged = true;\n                    removeFromSpatialMap(child);\n                    child.tilePos.x = tilePos.x;\n                    child.tilePos.y = tilePos.y;\n                    insertIntoSpatialMap(child);\n                }\n            }\n            if (spatialMapChanged) {\n                level.trigger(\"spatial_map_changed\");\n            }\n        };\n\n        // The obstacle map tells which tiles are accessible\n        // Cost: accessible with cost\n        // Infinite: inaccessible\n        const createCostMap = () => {\n            const spatialMap = level.getSpatialMap();\n            const size = level.numRows() * level.numColumns();\n            if (!costMap) {\n                costMap = new Array<number>(size);\n            } else {\n                costMap.length = size;\n            }\n            costMap.fill(1, 0, size);\n            for (let i = 0; i < spatialMap.length; i++) {\n                const objects = spatialMap[i];\n                if (objects) {\n                    let cost = 0;\n                    for (const obj of objects) {\n                        if (obj.isObstacle) {\n                            cost = Infinity;\n                            break;\n                        } else {\n                            cost += obj.cost;\n                        }\n                    }\n                    costMap[i] = cost || 1;\n                }\n            }\n        };\n\n        // The edge map tells which edges between nodes are walkable\n        const createEdgeMap = () => {\n            const spatialMap = level.getSpatialMap();\n            const size = level.numRows() * level.numColumns();\n            if (!edgeMap) {\n                edgeMap = new Array<number>(size);\n            } else {\n                edgeMap.length = size;\n            }\n            edgeMap.fill(EdgeMask.All, 0, size);\n            for (let i = 0; i < spatialMap.length; i++) {\n                const objects = spatialMap[i];\n                if (objects) {\n                    const len = objects.length;\n                    let mask = EdgeMask.All;\n                    for (let j = 0; j < len; j++) {\n                        mask |= objects[j].edgeMask;\n                    }\n                    edgeMap[i] = mask;\n                }\n            }\n        };\n\n        // The connectivity map is used to see whether two locations are connected\n        // -1: inaccesible n: connectivity group\n        const createConnectivityMap = () => {\n            const size = level.numRows() * level.numColumns();\n            const traverse = (i: number, index: number) => {\n                const frontier: number[] = [];\n                frontier.push(i);\n                while (frontier.length > 0) {\n                    const i = frontier.pop();\n                    getNeighbours(i).forEach((i) => {\n                        if (connectivityMap[i] < 0) {\n                            connectivityMap[i] = index;\n                            frontier.push(i);\n                        }\n                    });\n                }\n            };\n            if (!connectivityMap) {\n                connectivityMap = new Array<number>(size);\n            } else {\n                connectivityMap.length = size;\n            }\n            connectivityMap.fill(-1, 0, size);\n            let index = 0;\n            for (let i = 0; i < costMap.length; i++) {\n                if (connectivityMap[i] >= 0) {\n                    index++;\n                    continue;\n                }\n                traverse(i, index);\n                index++;\n            }\n        };\n\n        const getCost = (node: number, neighbour: number) => {\n            // Cost of destination tile\n            return costMap[neighbour];\n        };\n\n        const getHeuristic = (node: number, goal: number) => {\n            // Euclidian distance to target\n            const p1 = hash2Tile(node);\n            const p2 = hash2Tile(goal);\n            return p1.dist(p2);\n        };\n\n        const getNeighbours = (node: number, diagonals?: boolean) => {\n            const n = [];\n            const x = Math.floor(node % numColumns);\n            const left = x > 0\n                && (edgeMap[node] & EdgeMask.Left)\n                && costMap[node - 1] !== Infinity;\n            const top = node >= numColumns\n                && (edgeMap[node] & EdgeMask.Top)\n                && costMap[node - numColumns] !== Infinity;\n            const right = x < numColumns - 1\n                && (edgeMap[node] & EdgeMask.Right)\n                && costMap[node + 1] !== Infinity;\n            const bottom = node < numColumns * numRows - numColumns - 1\n                && (edgeMap[node] & EdgeMask.Bottom)\n                && costMap[node + numColumns] !== Infinity;\n            if (diagonals) {\n                if (left) {\n                    if (top) n.push(node - numColumns - 1);\n                    n.push(node - 1);\n                    if (bottom) n.push(node + numColumns - 1);\n                }\n                if (top) {\n                    n.push(node - numColumns);\n                }\n                if (right) {\n                    if (top) n.push(node - numColumns + 1);\n                    n.push(node + 1);\n                    if (bottom) n.push(node + numColumns + 1);\n                }\n                if (bottom) {\n                    n.push(node + numColumns);\n                }\n            } else {\n                if (left) {\n                    n.push(node - 1);\n                }\n                if (top) {\n                    n.push(node - numColumns);\n                }\n                if (right) {\n                    n.push(node + 1);\n                }\n                if (bottom) {\n                    n.push(node + numColumns);\n                }\n            }\n            return n;\n        };\n\n        const levelComp: LevelComp = {\n            id: \"level\",\n\n            tileWidth() {\n                return opt.tileWidth;\n            },\n\n            tileHeight() {\n                return opt.tileHeight;\n            },\n\n            spawn(\n                this: GameObj<LevelComp>,\n                key: string | CompList<any>,\n                ...args: Vec2Args\n            ): GameObj | null {\n                const p = vec2(...args);\n\n                const comps = (() => {\n                    if (typeof key === \"string\") {\n                        if (opt.tiles[key]) {\n                            if (typeof opt.tiles[key] !== \"function\") {\n                                throw new Error(\n                                    \"Level symbol def must be a function returning a component list\",\n                                );\n                            }\n                            return opt.tiles[key](p);\n                        } else if (opt.wildcardTile) {\n                            return opt.wildcardTile(key, p);\n                        }\n                    } else if (Array.isArray(key)) {\n                        return key;\n                    } else {\n                        throw new Error(\n                            \"Expected a symbol or a component list\",\n                        );\n                    }\n                })();\n\n                // empty tile\n                if (!comps) {\n                    return null;\n                }\n\n                let hasPos = false;\n                let hasTile = false;\n\n                for (const comp of comps) {\n                    if (comp.id === \"tile\") hasTile = true;\n                    if (comp.id === \"pos\") hasPos = true;\n                }\n\n                if (!hasPos) comps.push(pos());\n                if (!hasTile) comps.push(tile());\n\n                const obj = level.add(comps);\n\n                if (hasPos) {\n                    obj.tilePosOffset = obj.pos.clone();\n                }\n\n                obj.tilePos = p;\n\n                if (spatialMap) {\n                    insertIntoSpatialMap(obj);\n                    this.trigger(\"spatial_map_changed\");\n                    this.trigger(\"navigation_map_invalid\");\n                }\n\n                return obj;\n            },\n\n            numColumns() {\n                return numColumns;\n            },\n\n            numRows() {\n                return numRows;\n            },\n\n            levelWidth() {\n                return numColumns * this.tileWidth();\n            },\n\n            levelHeight() {\n                return numRows * this.tileHeight();\n            },\n\n            tile2Pos(...args: Vec2Args) {\n                return vec2(...args).scale(this.tileWidth(), this.tileHeight());\n            },\n\n            pos2Tile(...args: Vec2Args) {\n                const p = vec2(...args);\n                return vec2(\n                    Math.floor(p.x / this.tileWidth()),\n                    Math.floor(p.y / this.tileHeight()),\n                );\n            },\n\n            getSpatialMap() {\n                if (!spatialMap) {\n                    createSpatialMap();\n                }\n                return spatialMap;\n            },\n\n            onSpatialMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n                return this.on(\"spatial_map_changed\", cb);\n            },\n\n            onNavigationMapInvalid(this: GameObj<LevelComp>, cb: () => void) {\n                return this.on(\"navigation_map_invalid\", cb);\n            },\n\n            getAt(tilePos: Vec2) {\n                if (!spatialMap) {\n                    createSpatialMap();\n                }\n                const hash = tile2Hash(tilePos);\n                return spatialMap[hash] || [];\n            },\n\n            raycast(origin: Vec2, direction: Vec2) {\n                origin = origin.scale(\n                    1 / this.tileWidth(),\n                    1 / this.tileHeight(),\n                );\n                const hit = raycastGrid(origin, direction, (tilePos: Vec2) => {\n                    const tiles = this.getAt(tilePos);\n                    if (tiles.some(t => t.isObstacle)) {\n                        return true;\n                    }\n                    let minHit: RaycastResult;\n                    for (const tile of tiles) {\n                        if (tile.is(\"area\")) {\n                            const shape = tile.worldArea();\n                            const hit = shape.raycast(origin, direction);\n                            if (minHit) {\n                                if (hit.fraction < minHit.fraction) {\n                                    minHit = hit;\n                                    minHit.object = tile;\n                                }\n                            } else {\n                                minHit = hit;\n                                minHit.object = tile;\n                            }\n                        }\n                    }\n                    return minHit || false;\n                }, 64);\n                if (hit) {\n                    hit.point = hit.point.scale(\n                        this.tileWidth(),\n                        this.tileHeight(),\n                    );\n                }\n                return hit;\n            },\n\n            update() {\n                if (spatialMap) {\n                    updateSpatialMap();\n                }\n            },\n\n            invalidateNavigationMap() {\n                costMap = null;\n                edgeMap = null;\n                connectivityMap = null;\n            },\n\n            onNavigationMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n                return this.on(\"navigation_map_changed\", cb);\n            },\n\n            getTilePath(\n                this: GameObj<LevelComp>,\n                from: Vec2,\n                to: Vec2,\n                opts: PathFindOpt = {},\n            ) {\n                if (!costMap) {\n                    createCostMap();\n                }\n                if (!edgeMap) {\n                    createEdgeMap();\n                }\n                if (!connectivityMap) {\n                    createConnectivityMap();\n                }\n\n                // Tiles are outside the grid\n                if (\n                    from.x < 0 || from.x >= numColumns\n                    || from.y < 0 || from.y >= numRows\n                ) {\n                    return null;\n                }\n                if (\n                    to.x < 0 || to.x >= numColumns\n                    || to.y < 0 || to.y >= numRows\n                ) {\n                    return null;\n                }\n\n                const start = tile2Hash(from);\n                const goal = tile2Hash(to);\n\n                // Tiles are not accessible\n                // If we test the start tile, we may get stuck\n                /*if (costMap[start] === Infinity) {\n                    return null\n                }*/\n                if (costMap[goal] === Infinity) {\n                    return null;\n                }\n\n                // Same Tile, no waypoints needed\n                if (start === goal) {\n                    return [];\n                }\n\n                // Tiles are not within the same section\n                // If we test the start tile when invalid, we may get stuck\n                if (\n                    connectivityMap[start] != -1\n                    && connectivityMap[start] !== connectivityMap[goal]\n                ) {\n                    return null;\n                }\n\n                // Find a path\n                interface CostNode {\n                    cost: number;\n                    node: number;\n                }\n                const frontier = new BinaryHeap<CostNode>((a, b) =>\n                    a.cost < b.cost\n                );\n                frontier.insert({ cost: 0, node: start });\n\n                const cameFrom = new Map<number, number>();\n                cameFrom.set(start, start);\n                const costSoFar = new Map<number, number>();\n                costSoFar.set(start, 0);\n\n                while (frontier.length !== 0) {\n                    const current = frontier.remove()?.node;\n\n                    if (current === goal) {\n                        break;\n                    }\n\n                    const neighbours = getNeighbours(\n                        current,\n                        opts.allowDiagonals,\n                    );\n                    for (const next of neighbours) {\n                        const newCost = (costSoFar.get(current) || 0)\n                            + getCost(current, next)\n                            + getHeuristic(next, goal);\n                        if (\n                            !costSoFar.has(next)\n                            || newCost < costSoFar.get(next)\n                        ) {\n                            costSoFar.set(next, newCost);\n                            frontier.insert({ cost: newCost, node: next });\n                            cameFrom.set(next, current);\n                        }\n                    }\n                }\n\n                const path = [];\n                let node = goal;\n                const p = hash2Tile(node);\n                path.push(p);\n                while (node !== start) {\n                    node = cameFrom.get(node);\n                    const p = hash2Tile(node);\n                    path.push(p);\n                }\n                return path.reverse();\n            },\n\n            getPath(\n                this: GameObj<LevelComp>,\n                from: Vec2,\n                to: Vec2,\n                opts: PathFindOpt = {},\n            ) {\n                const tw = this.tileWidth();\n                const th = this.tileHeight();\n                const path = this.getTilePath(\n                    this.pos2Tile(from),\n                    this.pos2Tile(to),\n                    opts,\n                );\n                if (path) {\n                    return [\n                        from,\n                        ...path\n                            .slice(1, -1)\n                            .map((tilePos) =>\n                                tilePos.scale(tw, th).add(tw / 2, th / 2)\n                            ),\n                        to,\n                    ];\n                } else {\n                    return null;\n                }\n            },\n        };\n\n        level.use(levelComp);\n\n        level.onNavigationMapInvalid(() => {\n            level.invalidateNavigationMap();\n            level.trigger(\"navigation_map_changed\");\n        });\n\n        map.forEach((row, i) => {\n            const keys = row.split(\"\");\n            numColumns = Math.max(keys.length, numColumns);\n            keys.forEach((key, j) => {\n                level.spawn(key, vec2(j, i));\n            });\n        });\n\n        return level;\n    }\n\n    type RaycastHit = BaseRaycastHit & {\n        object?: GameObj;\n    };\n\n    type RaycastResult = RaycastHit | null;\n\n    function record(frameRate?): Recording {\n        const stream = app.canvas.captureStream(frameRate);\n        const audioDest = audio.ctx.createMediaStreamDestination();\n\n        audio.masterNode.connect(audioDest);\n\n        // TODO: Enabling audio results in empty video if no audio received\n        // const audioStream = audioDest.stream\n        // const [firstAudioTrack] = audioStream.getAudioTracks()\n\n        // stream.addTrack(firstAudioTrack);\n\n        const recorder = new MediaRecorder(stream);\n        const chunks = [];\n\n        recorder.ondataavailable = (e) => {\n            if (e.data.size > 0) {\n                chunks.push(e.data);\n            }\n        };\n\n        recorder.onerror = () => {\n            audio.masterNode.disconnect(audioDest);\n            stream.getTracks().forEach(t => t.stop());\n        };\n\n        recorder.start();\n\n        return {\n            resume() {\n                recorder.resume();\n            },\n\n            pause() {\n                recorder.pause();\n            },\n\n            stop(): Promise<Blob> {\n                recorder.stop();\n                // cleanup\n                audio.masterNode.disconnect(audioDest);\n                stream.getTracks().forEach(t => t.stop());\n                return new Promise((resolve) => {\n                    recorder.onstop = () => {\n                        resolve(\n                            new Blob(chunks, {\n                                type: \"video/mp4\",\n                            }),\n                        );\n                    };\n                });\n            },\n\n            download(filename = \"kaboom.mp4\") {\n                this.stop().then((blob) => downloadBlob(filename, blob));\n            },\n        };\n    }\n\n    function isFocused(): boolean {\n        return document.activeElement === app.canvas;\n    }\n\n    function destroy(obj: GameObj) {\n        obj.destroy();\n    }\n\n    // aliases for root game obj operations\n    const add = game.root.add.bind(game.root);\n    const readd = game.root.readd.bind(game.root);\n    const destroyAll = game.root.removeAll.bind(game.root);\n    const get = game.root.get.bind(game.root);\n    const wait = game.root.wait.bind(game.root);\n    const loop = game.root.loop.bind(game.root);\n    const query = game.root.query.bind(game.root);\n    const tween = game.root.tween.bind(game.root);\n    const layers = function(layerNames: string[], defaultLayer: string) {\n        if (game.layers) {\n            throw Error(\"Layers can only be assigned once.\");\n        }\n        const defaultLayerIndex = layerNames.indexOf(defaultLayer);\n        if (defaultLayerIndex == -1) {\n            throw Error(\n                \"The default layer name should be present in the layers list.\",\n            );\n        }\n        game.layers = layerNames;\n        game.defaultLayerIndex = defaultLayerIndex;\n    };\n\n    function boom(speed: number = 2, size: number = 1): Comp {\n        let time = 0;\n        return {\n            require: [\"scale\"],\n            update(this: GameObj<ScaleComp>) {\n                const s = Math.sin(time * speed) * size;\n                if (s < 0) {\n                    this.destroy();\n                }\n                this.scale = vec2(s);\n                time += dt();\n            },\n        };\n    }\n\n    const kaSprite = loadSprite(null, kaSpriteSrc);\n    const boomSprite = loadSprite(null, boomSpriteSrc);\n\n    function addKaboom(p: Vec2, opt: BoomOpt = {}): GameObj {\n        const kaboom = add([\n            pos(p),\n            stay(),\n        ]);\n\n        const speed = (opt.speed || 1) * 5;\n        const s = opt.scale || 1;\n\n        kaboom.add([\n            sprite(boomSprite),\n            scale(0),\n            anchor(\"center\"),\n            boom(speed, s),\n            ...opt.comps ?? [],\n        ]);\n\n        const ka = kaboom.add([\n            sprite(kaSprite),\n            scale(0),\n            anchor(\"center\"),\n            timer(),\n            ...opt.comps ?? [],\n        ]);\n\n        ka.wait(0.4 / speed, () => ka.use(boom(speed, s)));\n        ka.onDestroy(() => kaboom.destroy());\n\n        return kaboom;\n    }\n\n    function updateFrame() {\n        // update every obj\n        game.root.update();\n    }\n\n    class Collision {\n        source: GameObj;\n        target: GameObj;\n        displacement: Vec2;\n        resolved: boolean = false;\n        constructor(\n            source: GameObj,\n            target: GameObj,\n            dis: Vec2,\n            resolved = false,\n        ) {\n            this.source = source;\n            this.target = target;\n            this.displacement = dis;\n            this.resolved = resolved;\n        }\n        reverse() {\n            return new Collision(\n                this.target,\n                this.source,\n                this.displacement.scale(-1),\n                this.resolved,\n            );\n        }\n        hasOverlap() {\n            return !this.displacement.isZero();\n        }\n        isLeft() {\n            return this.displacement.cross(game.gravity || vec2(0, 1)) > 0;\n        }\n        isRight() {\n            return this.displacement.cross(game.gravity || vec2(0, 1)) < 0;\n        }\n        isTop() {\n            return this.displacement.dot(game.gravity || vec2(0, 1)) > 0;\n        }\n        isBottom() {\n            return this.displacement.dot(game.gravity || vec2(0, 1)) < 0;\n        }\n        preventResolution() {\n            this.resolved = true;\n        }\n    }\n\n    function checkFrame() {\n        // TODO: persistent grid?\n        // start a spatial hash grid for more efficient collision detection\n        const grid: Record<number, Record<number, GameObj<AreaComp>[]>> = {};\n        const cellSize = gopt.hashGridSize || DEF_HASH_GRID_SIZE;\n\n        // current transform\n        let tr = new Mat4();\n\n        // a local transform stack\n        const stack = [];\n\n        function checkObj(obj: GameObj) {\n            stack.push(tr.clone());\n\n            // Update object transform here. This will be the transform later used in rendering.\n            if (obj.pos) tr.translate(obj.pos);\n            if (obj.scale) tr.scale(obj.scale);\n            if (obj.angle) tr.rotate(obj.angle);\n            obj.transform = tr.clone();\n\n            if (obj.c(\"area\") && !obj.paused) {\n                // TODO: only update worldArea if transform changed\n                const aobj = obj as GameObj<AreaComp>;\n                const area = aobj.worldArea();\n                const bbox = area.bbox();\n\n                // Get spatial hash grid coverage\n                const xmin = Math.floor(bbox.pos.x / cellSize);\n                const ymin = Math.floor(bbox.pos.y / cellSize);\n                const xmax = Math.ceil((bbox.pos.x + bbox.width) / cellSize);\n                const ymax = Math.ceil((bbox.pos.y + bbox.height) / cellSize);\n\n                // Cache objs that are already checked\n                const checked = new Set();\n\n                // insert & check against all covered grids\n                for (let x = xmin; x <= xmax; x++) {\n                    for (let y = ymin; y <= ymax; y++) {\n                        if (!grid[x]) {\n                            grid[x] = {};\n                            grid[x][y] = [aobj];\n                        } else if (!grid[x][y]) {\n                            grid[x][y] = [aobj];\n                        } else {\n                            const cell = grid[x][y];\n                            check: for (const other of cell) {\n                                if (other.paused) continue;\n                                if (!other.exists()) continue;\n                                if (checked.has(other.id)) continue;\n                                for (const tag of aobj.collisionIgnore) {\n                                    if (other.is(tag)) {\n                                        continue check;\n                                    }\n                                }\n                                for (const tag of other.collisionIgnore) {\n                                    if (aobj.is(tag)) {\n                                        continue check;\n                                    }\n                                }\n                                // TODO: cache the world area here\n                                const res = sat(\n                                    aobj.worldArea(),\n                                    other.worldArea(),\n                                );\n                                if (res) {\n                                    // TODO: rehash if the object position is changed after resolution?\n                                    const col1 = new Collision(\n                                        aobj,\n                                        other,\n                                        res,\n                                    );\n                                    aobj.trigger(\"collideUpdate\", other, col1);\n                                    const col2 = col1.reverse();\n                                    // resolution only has to happen once\n                                    col2.resolved = col1.resolved;\n                                    other.trigger(\"collideUpdate\", aobj, col2);\n                                }\n                                checked.add(other.id);\n                            }\n                            cell.push(aobj);\n                        }\n                    }\n                }\n            }\n\n            obj.children.forEach(checkObj);\n            tr = stack.pop();\n        }\n\n        checkObj(game.root);\n    }\n\n    function drawFrame() {\n        // calculate camera matrix\n        const cam = game.cam;\n        const shake = Vec2.fromAngle(rand(0, 360)).scale(cam.shake);\n\n        cam.shake = lerp(cam.shake, 0, 5 * dt());\n        cam.transform = new Mat4()\n            .translate(center())\n            .scale(cam.scale)\n            .rotate(cam.angle)\n            .translate((cam.pos ?? center()).scale(-1).add(shake));\n\n        game.root.draw();\n        flush();\n    }\n\n    function drawLoadScreen() {\n        const progress = loadProgress();\n\n        if (game.events.numListeners(\"loading\") > 0) {\n            game.events.trigger(\"loading\", progress);\n        } else {\n            drawUnscaled(() => {\n                const w = width() / 2;\n                const h = 24;\n                const pos = vec2(width() / 2, height() / 2).sub(\n                    vec2(w / 2, h / 2),\n                );\n                drawRect({\n                    pos: vec2(0),\n                    width: width(),\n                    height: height(),\n                    color: rgb(0, 0, 0),\n                });\n                drawRect({\n                    pos: pos,\n                    width: w,\n                    height: h,\n                    fill: false,\n                    outline: {\n                        width: 4,\n                    },\n                });\n                drawRect({\n                    pos: pos,\n                    width: w * progress,\n                    height: h,\n                });\n            });\n        }\n    }\n\n    function drawInspectText(pos, txt) {\n        drawUnscaled(() => {\n            const pad = vec2(8);\n\n            pushTransform();\n            pushTranslate(pos);\n\n            const ftxt = formatText({\n                text: txt,\n                font: DBG_FONT,\n                size: 16,\n                pos: pad,\n                color: rgb(255, 255, 255),\n                fixed: true,\n            });\n\n            const bw = ftxt.width + pad.x * 2;\n            const bh = ftxt.height + pad.x * 2;\n\n            if (pos.x + bw >= width()) {\n                pushTranslate(vec2(-bw, 0));\n            }\n\n            if (pos.y + bh >= height()) {\n                pushTranslate(vec2(0, -bh));\n            }\n\n            drawRect({\n                width: bw,\n                height: bh,\n                color: rgb(0, 0, 0),\n                radius: 4,\n                opacity: 0.8,\n                fixed: true,\n            });\n\n            drawFormattedText(ftxt);\n            popTransform();\n        });\n    }\n\n    function drawDebug() {\n        if (debug.inspect) {\n            let inspecting = null;\n\n            for (const obj of game.root.get(\"*\", { recursive: true })) {\n                if (obj.c(\"area\") && obj.isHovering()) {\n                    inspecting = obj;\n                    break;\n                }\n            }\n\n            game.root.drawInspect();\n\n            if (inspecting) {\n                const lines = [];\n                const data = inspecting.inspect();\n\n                for (const tag in data) {\n                    if (data[tag]) {\n                        // pushes the inspect function (eg: `sprite: \"bean\"`)\n                        lines.push(`${data[tag]}`);\n                    }\n\n                    else {\n                        // pushes only the tag (name of the component)\n                        lines.push(`${tag}`);\n                    }\n                }\n\n                drawInspectText(contentToView(mousePos()), lines.join(\"\\n\"));\n            }\n\n            drawInspectText(vec2(8), `FPS: ${debug.fps()}`);\n        }\n\n        if (debug.paused) {\n            drawUnscaled(() => {\n                // top right corner\n                pushTransform();\n                pushTranslate(width(), 0);\n                pushTranslate(-8, 8);\n\n                const size = 32;\n\n                // bg\n                drawRect({\n                    width: size,\n                    height: size,\n                    anchor: \"topright\",\n                    color: rgb(0, 0, 0),\n                    opacity: 0.8,\n                    radius: 4,\n                    fixed: true,\n                });\n\n                // pause icon\n                for (let i = 1; i <= 2; i++) {\n                    drawRect({\n                        width: 4,\n                        height: size * 0.6,\n                        anchor: \"center\",\n                        pos: vec2(-size / 3 * i, size * 0.5),\n                        color: rgb(255, 255, 255),\n                        radius: 2,\n                        fixed: true,\n                    });\n                }\n\n                popTransform();\n            });\n        }\n\n        if (debug.timeScale !== 1) {\n            drawUnscaled(() => {\n                // bottom right corner\n                pushTransform();\n                pushTranslate(width(), height());\n                pushTranslate(-8, -8);\n\n                const pad = 8;\n\n                // format text first to get text size\n                const ftxt = formatText({\n                    text: debug.timeScale.toFixed(1),\n                    font: DBG_FONT,\n                    size: 16,\n                    color: rgb(255, 255, 255),\n                    pos: vec2(-pad),\n                    anchor: \"botright\",\n                    fixed: true,\n                });\n\n                // bg\n                drawRect({\n                    width: ftxt.width + pad * 2 + pad * 4,\n                    height: ftxt.height + pad * 2,\n                    anchor: \"botright\",\n                    color: rgb(0, 0, 0),\n                    opacity: 0.8,\n                    radius: 4,\n                    fixed: true,\n                });\n\n                // fast forward / slow down icon\n                for (let i = 0; i < 2; i++) {\n                    const flipped = debug.timeScale < 1;\n                    drawTriangle({\n                        p1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n                        p2: vec2(\n                            -ftxt.width - pad * (flipped ? 2 : 3.5),\n                            -pad - ftxt.height,\n                        ),\n                        p3: vec2(\n                            -ftxt.width - pad * (flipped ? 3.5 : 2),\n                            -pad - ftxt.height / 2,\n                        ),\n                        pos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n                        color: rgb(255, 255, 255),\n                        fixed: true,\n                    });\n                }\n\n                // text\n                drawFormattedText(ftxt);\n\n                popTransform();\n            });\n        }\n\n        if (debug.curRecording) {\n            drawUnscaled(() => {\n                pushTransform();\n                pushTranslate(0, height());\n                pushTranslate(24, -24);\n\n                drawCircle({\n                    radius: 12,\n                    color: rgb(255, 0, 0),\n                    opacity: wave(0, 1, app.time() * 4),\n                    fixed: true,\n                });\n\n                popTransform();\n            });\n        }\n\n        if (debug.showLog && game.logs.length > 0) {\n            drawUnscaled(() => {\n                pushTransform();\n                pushTranslate(0, height());\n                pushTranslate(8, -8);\n\n                const pad = 8;\n                const logs = [];\n\n                for (const log of game.logs) {\n                    let str = \"\";\n                    const style = log.msg instanceof Error ? \"error\" : \"info\";\n                    str += `[time]${log.time.toFixed(2)}[/time]`;\n                    str += \" \";\n                    str += `[${style}]${\n                        log.msg?.toString ? log.msg.toString() : log.msg\n                    }[/${style}]`;\n                    logs.push(str);\n                }\n\n                game.logs = game.logs\n                    .filter((log) =>\n                        app.time() - log.time < (gopt.logTime || LOG_TIME)\n                    );\n\n                const ftext = formatText({\n                    text: logs.join(\"\\n\"),\n                    font: DBG_FONT,\n                    pos: vec2(pad, -pad),\n                    anchor: \"botleft\",\n                    size: 16,\n                    width: width() * 0.6,\n                    lineSpacing: pad / 2,\n                    fixed: true,\n                    styles: {\n                        \"time\": { color: rgb(127, 127, 127) },\n                        \"info\": { color: rgb(255, 255, 255) },\n                        \"error\": { color: rgb(255, 0, 127) },\n                    },\n                });\n\n                drawRect({\n                    width: ftext.width + pad * 2,\n                    height: ftext.height + pad * 2,\n                    anchor: \"botleft\",\n                    color: rgb(0, 0, 0),\n                    radius: 4,\n                    opacity: 0.8,\n                    fixed: true,\n                });\n\n                drawFormattedText(ftext);\n                popTransform();\n            });\n        }\n    }\n\n    function onLoading(action: (progress: number) => void) {\n        game.events.on(\"loading\", action);\n    }\n\n    function onResize(action: () => void) {\n        app.onResize(action);\n    }\n\n    function onError(action: (err: Error) => void) {\n        game.events.on(\"error\", action);\n    }\n\n    function handleErr(err: Error) {\n        console.error(err);\n        audio.ctx.suspend();\n\n        // TODO: this should only run once\n        app.run(() => {\n            frameStart();\n\n            drawUnscaled(() => {\n                const pad = 32;\n                const gap = 16;\n                const gw = width();\n                const gh = height();\n\n                const textStyle = {\n                    size: 36,\n                    width: gw - pad * 2,\n                    letterSpacing: 4,\n                    lineSpacing: 4,\n                    font: DBG_FONT,\n                    fixed: true,\n                };\n\n                drawRect({\n                    width: gw,\n                    height: gh,\n                    color: rgb(0, 0, 255),\n                    fixed: true,\n                });\n\n                const title = formatText({\n                    ...textStyle,\n                    text: \"Error\",\n                    pos: vec2(pad),\n                    color: rgb(255, 128, 0),\n                    fixed: true,\n                });\n\n                drawFormattedText(title);\n\n                drawText({\n                    ...textStyle,\n                    text: err.message,\n                    pos: vec2(pad, pad + title.height + gap),\n                    fixed: true,\n                });\n\n                popTransform();\n                game.events.trigger(\"error\", err);\n            });\n\n            frameEnd();\n        });\n    }\n\n    function onCleanup(action: () => void) {\n        gc.push(action);\n    }\n\n    function quit() {\n        game.events.onOnce(\"frameEnd\", () => {\n            app.quit();\n\n            // clear canvas\n            gl.clear(\n                gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT\n                    | gl.STENCIL_BUFFER_BIT,\n            );\n\n            // unbind everything\n            const numTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\n            for (let unit = 0; unit < numTextureUnits; unit++) {\n                gl.activeTexture(gl.TEXTURE0 + unit);\n                gl.bindTexture(gl.TEXTURE_2D, null);\n                gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\n            }\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, null);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n            // run all scattered gc events\n            ggl.destroy();\n            gc.forEach((f) => f());\n        });\n    }\n\n    let isFirstFrame = true;\n\n    // main game loop\n    app.run(() => {\n        try {\n            if (!assets.loaded) {\n                if (loadProgress() === 1 && !isFirstFrame) {\n                    assets.loaded = true;\n                    game.events.trigger(\"load\");\n                }\n            }\n\n            if (\n                !assets.loaded && gopt.loadingScreen !== false\n                || isFirstFrame\n            ) {\n                frameStart();\n                // TODO: Currently if assets are not initially loaded no updates or timers will be run, however they will run if loadingScreen is set to false. What's the desired behavior or should we make them consistent?\n                drawLoadScreen();\n                frameEnd();\n            } else {\n                if (!debug.paused) updateFrame();\n                checkFrame();\n                frameStart();\n                drawFrame();\n                if (gopt.debug !== false) drawDebug();\n                frameEnd();\n            }\n\n            if (isFirstFrame) {\n                isFirstFrame = false;\n            }\n\n            game.events.trigger(\"frameEnd\");\n        } catch (e) {\n            handleErr(e);\n        }\n    });\n\n    // update viewport based on user setting and fullscreen state\n    function updateViewport() {\n        // content size (scaled content size, with scale, stretch and letterbox)\n        // view size (unscaled viewport size)\n        // window size (will be the same as view size except letterbox mode)\n\n        // canvas size\n        const pd = pixelDensity;\n        const cw = gl.drawingBufferWidth / pd;\n        const ch = gl.drawingBufferHeight / pd;\n\n        if (gopt.letterbox) {\n            if (!gopt.width || !gopt.height) {\n                throw new Error(\n                    \"Letterboxing requires width and height defined.\",\n                );\n            }\n\n            const rc = cw / ch;\n            const rg = gopt.width / gopt.height;\n\n            if (rc > rg) {\n                const sw = ch * rg;\n                const x = (cw - sw) / 2;\n                gfx.viewport = {\n                    x: x,\n                    y: 0,\n                    width: sw,\n                    height: ch,\n                };\n            } else {\n                const sh = cw / rg;\n                const y = (ch - sh) / 2;\n                gfx.viewport = {\n                    x: 0,\n                    y: y,\n                    width: cw,\n                    height: sh,\n                };\n            }\n\n            return;\n        }\n\n        if (gopt.stretch) {\n            if (!gopt.width || !gopt.height) {\n                throw new Error(\n                    \"Stretching requires width and height defined.\",\n                );\n            }\n        }\n\n        gfx.viewport = {\n            x: 0,\n            y: 0,\n            width: cw,\n            height: ch,\n        };\n    }\n\n    function initEvents() {\n        app.onHide(() => {\n            if (!gopt.backgroundAudio) {\n                audio.ctx.suspend();\n            }\n        });\n\n        app.onShow(() => {\n            if (!gopt.backgroundAudio && !debug.paused) {\n                audio.ctx.resume();\n            }\n        });\n\n        app.onResize(() => {\n            if (app.isFullscreen()) return;\n            const fixedSize = gopt.width && gopt.height;\n            if (fixedSize && !gopt.stretch && !gopt.letterbox) return;\n            canvas.width = canvas.offsetWidth * pixelDensity;\n            canvas.height = canvas.offsetHeight * pixelDensity;\n            updateViewport();\n            if (!fixedSize) {\n                gfx.frameBuffer.free();\n                gfx.frameBuffer = new FrameBuffer(\n                    ggl,\n                    gl.drawingBufferWidth,\n                    gl.drawingBufferHeight,\n                );\n                gfx.width = gl.drawingBufferWidth / pixelDensity / gscale;\n                gfx.height = gl.drawingBufferHeight / pixelDensity / gscale;\n            }\n        });\n\n        if (gopt.debug !== false) {\n            app.onKeyPress(\n                gopt.debugKey ?? \"f1\",\n                () => debug.inspect = !debug.inspect,\n            );\n            app.onKeyPress(\"f2\", () => debug.clearLog());\n            app.onKeyPress(\"f8\", () => debug.paused = !debug.paused);\n            app.onKeyPress(\"f7\", () => {\n                debug.timeScale = toFixed(\n                    clamp(debug.timeScale - 0.2, 0, 2),\n                    1,\n                );\n            });\n            app.onKeyPress(\"f9\", () => {\n                debug.timeScale = toFixed(\n                    clamp(debug.timeScale + 0.2, 0, 2),\n                    1,\n                );\n            });\n            app.onKeyPress(\"f10\", () => debug.stepFrame());\n        }\n\n        if (gopt.burp) {\n            app.onKeyPress(\"b\", () => burp());\n        }\n    }\n\n    updateViewport();\n    initEvents();\n\n    const internalCtx = {\n        kaboomCtx: ctx,\n        app,\n        game,\n        isFixed,\n        toFixed,\n        getViewportScale,\n        getRenderProps,\n        resolveSprite,\n        drawTexture,\n        drawRaw,\n        calcTransform,\n    } satisfies InternalCtx;\n\n    // the exported ctx handle\n    ctx = {\n        _k: internalCtx,\n        VERSION,\n        // asset load\n        loadRoot,\n        loadProgress,\n        loadSprite,\n        loadSpriteAtlas,\n        loadSound,\n        loadMusic,\n        loadBitmapFont,\n        loadFont,\n        loadShader,\n        loadShaderURL,\n        loadAseprite,\n        loadPedit,\n        loadBean,\n        loadJSON,\n        load,\n        getSprite,\n        getSound,\n        getFont,\n        getBitmapFont,\n        getShader,\n        getAsset,\n        Asset,\n        SpriteData,\n        SoundData,\n        // query\n        width,\n        height,\n        center,\n        dt,\n        time: app.time,\n        screenshot: app.screenshot,\n        record,\n        isFocused,\n        setCursor: app.setCursor,\n        getCursor: app.getCursor,\n        setCursorLocked: app.setCursorLocked,\n        isCursorLocked: app.isCursorLocked,\n        setFullscreen: app.setFullscreen,\n        isFullscreen: app.isFullscreen,\n        isTouchscreen: app.isTouchscreen,\n        onLoad,\n        onLoading,\n        onResize,\n        onGamepadConnect: app.onGamepadConnect,\n        onGamepadDisconnect: app.onGamepadDisconnect,\n        onError,\n        onCleanup,\n        // misc\n        camPos,\n        camScale,\n        camFlash,\n        camRot,\n        camTransform,\n        shake,\n        toScreen,\n        toWorld,\n        setGravity,\n        getGravity,\n        setGravityDirection,\n        getGravityDirection,\n        setBackground,\n        getBackground,\n        getGamepads: app.getGamepads,\n        // obj\n        getTreeRoot,\n        add,\n        make,\n        destroy,\n        destroyAll,\n        get,\n        query,\n        readd,\n        // comps\n        pos,\n        scale,\n        rotate,\n        color,\n        opacity,\n        anchor,\n        area,\n        sprite,\n        text,\n        polygon,\n        rect,\n        circle,\n        uvquad,\n        outline,\n        particles,\n        body,\n        doubleJump,\n        shader,\n        timer,\n        fixed,\n        stay,\n        health,\n        lifespan,\n        named,\n        state,\n        z,\n        layer,\n        move,\n        offscreen,\n        follow,\n        fadeIn,\n        mask,\n        drawon,\n        raycast,\n        tile,\n        agent,\n        sentry,\n        patrol,\n        navigation,\n        // group events\n        on,\n        onUpdate,\n        onDraw,\n        onAdd,\n        onDestroy,\n        onClick,\n        onCollide,\n        onCollideUpdate,\n        onCollideEnd,\n        onHover,\n        onHoverUpdate,\n        onHoverEnd,\n        // input\n        onKeyDown: app.onKeyDown,\n        onKeyPress: app.onKeyPress,\n        onKeyPressRepeat: app.onKeyPressRepeat,\n        onKeyRelease: app.onKeyRelease,\n        onMouseDown: app.onMouseDown,\n        onMousePress: app.onMousePress,\n        onMouseRelease: app.onMouseRelease,\n        onMouseMove: app.onMouseMove,\n        onCharInput: app.onCharInput,\n        onTouchStart: app.onTouchStart,\n        onTouchMove: app.onTouchMove,\n        onTouchEnd: app.onTouchEnd,\n        onScroll: app.onScroll,\n        onHide: app.onHide,\n        onShow: app.onShow,\n        onGamepadButtonDown: app.onGamepadButtonDown,\n        onGamepadButtonPress: app.onGamepadButtonPress,\n        onGamepadButtonRelease: app.onGamepadButtonRelease,\n        onGamepadStick: app.onGamepadStick,\n        onButtonPress: app.onButtonPress,\n        onButtonDown: app.onButtonDown,\n        onButtonRelease: app.onButtonRelease,\n        mousePos: mousePos,\n        mouseDeltaPos: app.mouseDeltaPos,\n        isKeyDown: app.isKeyDown,\n        isKeyPressed: app.isKeyPressed,\n        isKeyPressedRepeat: app.isKeyPressedRepeat,\n        isKeyReleased: app.isKeyReleased,\n        isMouseDown: app.isMouseDown,\n        isMousePressed: app.isMousePressed,\n        isMouseReleased: app.isMouseReleased,\n        isMouseMoved: app.isMouseMoved,\n        isGamepadButtonPressed: app.isGamepadButtonPressed,\n        isGamepadButtonDown: app.isGamepadButtonDown,\n        isGamepadButtonReleased: app.isGamepadButtonReleased,\n        getGamepadStick: app.getGamepadStick,\n        isButtonPressed: app.isButtonPressed,\n        isButtonDown: app.isButtonDown,\n        isButtonReleased: app.isButtonReleased,\n        setButton: app.setButton,\n        getButton: app.getButton,\n        charInputted: app.charInputted,\n        // timer\n        loop,\n        wait,\n        // audio\n        play,\n        volume,\n        burp,\n        audioCtx: audio.ctx,\n        // math\n        Line,\n        Rect,\n        Circle,\n        Ellipse,\n        Point,\n        Polygon,\n        Vec2,\n        Color,\n        Mat4,\n        Quad,\n        RNG,\n        rand,\n        randi,\n        randSeed,\n        vec2,\n        rgb,\n        hsl2rgb,\n        quad,\n        choose,\n        chooseMultiple,\n        shuffle,\n        chance,\n        lerp,\n        tween,\n        easings,\n        map,\n        mapc,\n        wave,\n        deg2rad,\n        rad2deg,\n        clamp,\n        evaluateQuadratic,\n        evaluateQuadraticFirstDerivative,\n        evaluateQuadraticSecondDerivative,\n        evaluateBezier,\n        evaluateBezierFirstDerivative,\n        evaluateBezierSecondDerivative,\n        evaluateCatmullRom,\n        evaluateCatmullRomFirstDerivative,\n        curveLengthApproximation,\n        normalizedCurve,\n        easingSteps,\n        easingLinear,\n        easingCubicBezier,\n        testLineLine,\n        testRectRect,\n        testRectLine,\n        testRectPoint,\n        testCirclePolygon,\n        testLinePoint,\n        testLineCircle,\n        isConvex,\n        triangulate,\n        NavMesh,\n        // raw draw\n        drawSprite,\n        drawText,\n        formatText,\n        drawRect,\n        drawLine,\n        drawLines,\n        drawTriangle,\n        drawCircle,\n        drawEllipse,\n        drawUVQuad,\n        drawPolygon,\n        drawCurve,\n        drawBezier,\n        drawFormattedText,\n        drawMasked,\n        drawSubtracted,\n        pushTransform,\n        popTransform,\n        pushTranslate,\n        pushScale,\n        pushRotate,\n        pushMatrix,\n        usePostEffect,\n        makeCanvas,\n        // debug\n        debug,\n        // scene\n        scene,\n        getSceneName,\n        go,\n        onSceneLeave,\n        // layers\n        layers,\n        // level\n        addLevel,\n        // storage\n        getData,\n        setData,\n        download,\n        downloadJSON,\n        downloadText,\n        downloadBlob,\n        // plugin\n        plug,\n        // char sets\n        ASCII_CHARS,\n        // dom\n        canvas: app.canvas,\n        // misc\n        addKaboom,\n        // dirs\n        LEFT: Vec2.LEFT,\n        RIGHT: Vec2.RIGHT,\n        UP: Vec2.UP,\n        DOWN: Vec2.DOWN,\n        // colors\n        RED: Color.RED,\n        GREEN: Color.GREEN,\n        BLUE: Color.BLUE,\n        YELLOW: Color.YELLOW,\n        MAGENTA: Color.MAGENTA,\n        CYAN: Color.CYAN,\n        WHITE: Color.WHITE,\n        BLACK: Color.BLACK,\n        quit,\n        // helpers\n        KEvent: KEvent,\n        KEventHandler: KEventHandler,\n        KEventController: KEventController,\n    };\n\n    if (gopt.plugins) {\n        gopt.plugins.forEach(plug);\n    }\n\n    // export everything to window if global is set\n    if (gopt.global !== false) {\n        for (const k in ctx) {\n            window[k] = ctx[k];\n        }\n    }\n\n    if (gopt.focus !== false) {\n        app.canvas.focus();\n    }\n\n    return ctx as TPlugins extends [undefined]\n        ? KaboomCtx<TButtons, TButtonsName>\n        : KaboomCtx<TButtons, TButtonsName> & MergePlugins<TPlugins>;\n};\n\nexport default kaplay;\n", "/* eslint-env browser */\nexport const isMobile = 'ontouchstart' in window\n\n/**\n * @param {Element} element\n * @returns {Object.<string, string>}\n */\nfunction getAttributes (element) {\n  return Object.values(element.attributes)\n    .reduce((carry, current) => ({\n      ...carry,\n      [current.name]: current.value\n    }), {})\n}\n\nexport async function loadAtlasData (url) {\n  const response = await fetch(url)\n  const text = await response.text()\n  const parser = new DOMParser()\n  const xml = parser.parseFromString(text, 'text/xml')\n  const textures = xml.querySelectorAll('SubTexture')\n\n  return Array.from(textures).reduce((carry, current) => {\n    const { name, ...props } = getAttributes(current)\n    const normalized = name.replace(/\\.[^.]+$/, '')\n\n    return { ...carry, [normalized]: props }\n  }, {})\n}\n\nexport async function requestFullscreen () {\n  if (!isMobile || document.fullscreenElement) {\n    return\n  }\n\n  const canvas = document.querySelector('canvas')\n  await canvas.requestFullscreen().catch(console.error)\n}\n", "import kaplay from 'kaplay'\nimport { loadAtlasData } from './util'\n\nconst data = await loadAtlasData('sprites/ships_sheet.xml')\n\nexport const k = window.k = kaplay({\n  background: '#006994',\n  scale: 0.7\n})\n\nk.layers(['below', 'above', 'gui'], 'above')\nk.loadSpriteAtlas('sprites/ships_sheet.png', data)\n", "import { k } from './setup'\n\n/**\n * @param {import('kaplay').Vec2} pos\n * @returns {import('kaplay').Comp}\n */\nexport function towards (pos) {\n  return {\n    id: 'towards',\n    require: ['pos', 'rotate'],\n\n    update () {\n      const dt = k.dt()\n      const destAngle = this.pos.angle(pos) + 90\n      const deltaAngle = destAngle - this.angle\n      const deltaPos = pos.sub(this.pos)\n      const distance = deltaPos.dist()\n      const drift = k.Vec2.fromAngle(this.angle + 90)\n\n      if (distance < 10) {\n        this.unuse('towards')\n      }\n\n      if (Math.abs(deltaAngle) > 180) {\n        this.angle += (deltaAngle - 360) % 360 * dt\n      } else {\n        this.angle += deltaAngle * dt\n      }\n\n      this.pos = this.pos\n        .add(deltaPos.scale(dt / 2))\n        .add(drift.scale(dt * distance / 2))\n    }\n  }\n}\n\n/**\n * @returns {import('kaplay').Comp}\n */\nexport function vanish () {\n  return {\n    id: 'vanish',\n    require: ['color', 'opacity'],\n\n    update () {\n      this.opacity -= Math.min(k.dt(), this.opacity)\n      this.color = k.BLACK.lerp(k.WHITE, this.opacity)\n\n      if (this.opacity === 0) {\n        this.destroy()\n      }\n    }\n  }\n}\n", "import { k } from './setup'\n\n/**\n * @param {Array<import('kaplay').Comp | string>} components\n */\nexport function spawnShip (components) {\n  return k.add([\n    k.anchor('center'),\n    k.area(),\n    k.color(k.WHITE),\n    k.opacity(1),\n    k.rotate(k.rand(360)),\n    'ship',\n    ...components\n  ])\n}\n", "import { vanish, towards } from './components'\nimport { k } from './setup'\nimport { spawnShip } from './spawn'\nimport { requestFullscreen } from './util'\n\nk.scene('start', (score = 0) => {\n  k.add([\n    k.text('Say arrrrr'),\n    k.pos(10, 10)\n  ])\n\n  k.add([\n    k.text(`Sank ${score} ships`, {\n      size: 24\n    }),\n    k.pos(10, 100)\n  ])\n\n  k.onMousePress(async () => {\n    await requestFullscreen()\n    k.go('main')\n  })\n})\n\nk.scene('main', () => {\n  const score = k.add([\n    k.text(0),\n    k.pos(10, 10),\n    k.fixed(),\n    k.layer('gui')\n  ])\n\n  const { textSize } = score\n\n  const player = spawnShip([\n    k.pos(k.camPos()),\n    k.sprite('ship (1)'),\n    'player'\n  ])\n\n  player.onDestroy(() => {\n    k.go('start', score.text)\n  })\n\n  score.onUpdate(() => {\n    if (score.textSize > textSize) {\n      score.textSize -= 0.1\n    }\n  })\n\n  k.onMousePress(() => {\n    if (player.is('ship')) {\n      player.use(towards(k.mousePos()))\n    }\n  })\n\n  k.onCollide('ship', 'ship', (a, b) => {\n    navigator.vibrate(20)\n    k.shake(30)\n\n    for (const current of [a, b]) {\n      current.unuse('ship')\n      current.use(vanish())\n      current.use(k.layer('below'))\n\n      if (current.is('enemy')) {\n        score.text++\n        score.textSize += 10\n      }\n    }\n  })\n\n  k.loop(1, function spawnEnemy () {\n    if (k.get('enemy').length > 5) {\n      return\n    }\n\n    const edge = k.choose([k.UP, k.RIGHT, k.DOWN, k.LEFT])\n    const [width, height] = [k.width(), k.height()]\n    const pos = k.rand(k.vec2(width, height))\n\n    switch (edge) {\n      case k.UP:\n        pos.y = 0\n        break\n      case k.RIGHT:\n        pos.x = width\n        break\n      case k.DOWN:\n        pos.y = height\n        break\n      case k.LEFT:\n        pos.x = 0\n    }\n\n    const enemy = spawnShip([\n      k.sprite('ship (2)'),\n      k.offscreen({ destroy: true }),\n      k.pos(pos),\n      'enemy'\n    ])\n\n    enemy.onUpdate(() => {\n      if (!enemy.is(['vanish', 'towards'])) {\n        enemy.use(towards(player.pos))\n      }\n    })\n  })\n})\n\nk.go('start')\n"],
  "mappings": "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AAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,EAAE,GACrDC,IAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,EAAE,GACrDC,IAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,CAAC,GACpDC,IAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,CAAC,GACpDC,IAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,CAAC,GACpDC,IAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,CAAC,GACpDC,IAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,CAAC,GACpDC,IAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,CAAC,GACpDC,IAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,CAAC,GACpDC,IAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,CAAC,GACpDC,IAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,CAAC,GACpDC,KAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,GACnDC,IAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,GACnDC,IAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,EAAE,IAAI,KAAK,EAAE,CAAC,IAAI,KAAK,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",
  "names": ["deg2rad", "deg", "__name", "rad2deg", "rad", "clamp", "val", "min", "max", "lerp", "a", "b", "t", "Vec2", "Color", "map", "v", "l1", "h1", "l2", "h2", "mapc", "_Vec2", "x", "y", "angle", "args", "p2", "vec2", "s", "len", "normal", "on", "dest", "cos", "sin", "n", "m", "other", "Rect", "_Color", "r", "g", "arr", "hex", "result", "h", "l", "hue2rgb", "p", "q", "d", "rgb", "hsl2rgb", "Quad", "_Quad", "w", "quad", "Mat2", "_Mat2", "c", "point", "det", "e1", "e2", "radians", "Mat3", "_Mat3", "m11", "m12", "m13", "m21", "m22", "m23", "m31", "m32", "m33", "oldA", "oldB", "Mat4", "_Mat4", "m0", "m1", "m4", "m5", "out", "i", "j", "f00", "f01", "f02", "f03", "f04", "f05", "f06", "f07", "f08", "f09", "f10", "f11", "f12", "f13", "f14", "f15", "f16", "f17", "f18", "wave", "lo", "hi", "f", "A", "C", "M", "RNG", "seed", "defRNG", "randSeed", "rand", "randi", "chance", "shuffle", "list", "chooseMultiple", "count", "choose", "testRectRect", "r1", "r2", "testLineLineT", "denom", "ua", "ub", "testLineLine", "testRectLine", "dir", "tmin", "tmax", "tx1", "tx2", "ty1", "ty2", "testRectPoint", "pt", "testRectCircle", "nx", "ny", "testRectPolygon", "testPolygonPolygon", "Polygon", "testLinePoint", "v1", "v2", "testLineCircle", "circle", "centerToOrigin", "dis", "t1", "t2", "testCirclePoint", "testLinePolygon", "testPolygonPoint", "p1", "Line", "testCircleCircle", "c1", "c2", "testCirclePolygon", "prev", "cur", "poly", "testEllipsePoint", "ellipse", "vx", "vy", "testEllipseCircle", "center", "cx", "cy", "Ellipse", "testEllipseLine", "line", "T", "Circle", "testEllipseEllipse", "ellipse1", "ellipse2", "A1", "A2", "x1", "y1", "x2", "y2", "theta1", "theta2", "M1", "M2", "M1inv", "M2inv", "B", "a11", "a12", "a13", "a21", "a22", "a23", "a31", "a32", "a33", "b11", "b12", "b13", "b21", "b22", "b23", "b31", "b32", "b33", "factor", "condition1", "condition2", "condition3", "testEllipseRect", "rect", "testEllipsePolygon", "testPointPoint", "testPointShape", "shape", "testLineShape", "testCircleShape", "testRectShape", "testPolygonShape", "polygon", "testEllipseShape", "raycastLine", "origin", "direction", "ab", "cd", "abxcd", "ac", "raycastRect", "raycastCircle", "disc", "raycastPolygon", "points", "minHit", "hit", "raycastEllipse", "TI", "Torigin", "Tdirection", "R", "fraction", "raycastGrid", "gridPosHit", "maxDistance", "pos", "gridPos", "step", "tDelta", "dist", "tMax", "steppedIndex", "Point", "_Point", "_Line", "_Rect", "width", "height", "dx", "dy", "_Circle", "radius", "tr", "_Ellipse", "rx", "ry", "degrees", "inv", "scale", "ux", "uy", "halfwidth", "halfheight", "_Polygon", "pts", "total", "evaluateQuadratic", "pt1", "pt2", "pt3", "mt", "mt2", "evaluateQuadraticFirstDerivative", "evaluateQuadraticSecondDerivative", "evaluateBezier", "pt4", "t3", "mt3", "evaluateBezierFirstDerivative", "evaluateBezierSecondDerivative", "evaluateCatmullRom", "D", "evaluateCatmullRomFirstDerivative", "normalizedCurve", "curve", "curveLength", "curveLengthApproximation", "length", "entries", "detail", "llut", "tlut", "ddt", "pp", "e", "inverse", "index", "inZeroOneDomain", "approximately", "cubeRoot", "getCubicRoots", "pa", "pb", "pc", "pd", "a2", "p3", "q2", "discriminant", "mp3", "mp33", "cosphi", "phi", "root1", "root2", "root3", "u1", "sd", "cubicBezierYforX", "easingLinear", "keys", "easingCubicBezier", "easingSteps", "steps", "position", "xdist", "jumpStart", "jumpEnd", "ydist", "startY", "sat", "overlap", "displacement", "axisProj", "min1", "max1", "min2", "max2", "o", "o1", "o2", "isOrientedCcw", "isOrientedCcwPolygon", "onSameSide", "px", "py", "pointInTriangle", "someInTriangle", "vertices", "isEar", "triangulate", "nextIdx", "prevIdx", "idx", "lm", "concaveVertices", "triangles", "nVertices", "current", "skipped", "next", "isConvex", "k", "winding", "Registry", "id", "KEventController", "_KEventController", "cancel", "events", "ev", "KEvent", "action", "res", "KEventHandler", "name", "deepEq", "k1", "k2", "base64ToArrayBuffer", "base64", "binstr", "bytes", "dataURLToArrayBuffer", "url", "download", "filename", "downloadText", "text", "downloadJSON", "data", "downloadBlob", "blob", "isDataURL", "str", "getFileName", "overload2", "fn1", "fn2", "al", "uid", "getErrorMessage", "error", "BinaryHeap", "compareFn", "item", "lastItem", "parent", "child", "index1", "index2", "GRAPHEMES", "runes", "string", "increment", "nextUnits", "isGrapheme", "isVariationSelector", "isDiacriticalMark", "isZeroWidthJoiner", "isFirstOfSurrogatePair", "currentPair", "nextPair", "isRegionalIndicator", "isSubdivisionFlag", "isSupplementarySpecialpurposePlane", "isFitzpatrickModifier", "betweenInclusive", "codePointFromSurrogatePair", "codePoint", "pair", "highOffset", "lowOffset", "value", "lower", "upper", "isClass", "obj", "isEqOrIncludes", "listOrSmt", "el", "setHasOrIncludes", "set", "key", "gamepad_default", "ButtonState", "btn", "GamepadState", "FPSCounter", "dt", "app_default", "opt", "state", "isHidden", "time", "fps", "numFrames", "screenshot", "setCursor", "getCursor", "setCursorLocked", "isCursorLocked", "enterFullscreen", "exitFullscreen", "setFullscreen", "isFullscreen", "quit", "canvasEvents", "docEvents", "winEvents", "resizeObserver", "run", "accumulatedDt", "frame", "loopTime", "realDt", "desiredDt", "processInput", "resetInput", "isTouchscreen", "mousePos", "mouseDeltaPos", "isMousePressed", "isMouseDown", "isMouseReleased", "isMouseMoved", "isKeyPressed", "isKeyPressedRepeat", "isKeyDown", "isKeyReleased", "isGamepadButtonPressed", "isGamepadButtonDown", "isGamepadButtonReleased", "isButtonPressed", "isButtonDown", "isButtonReleased", "getButton", "setButton", "binding", "getButtonNameByKey", "getButtonByGamepadButton", "getButtonByMouseButton", "onResize", "onKeyDown", "onKeyPress", "onKeyPressRepeat", "onKeyRelease", "onMouseDown", "mouse", "onMousePress", "onMouseRelease", "onMouseMove", "onCharInput", "onTouchStart", "onTouchMove", "onTouchEnd", "onScroll", "onHide", "onShow", "onGamepadButtonPress", "onGamepadButtonDown", "onGamepadButtonRelease", "onGamepadStick", "stick", "onGamepadConnect", "onGamepadDisconnect", "getGamepadStick", "charInputted", "getGamepads", "onButtonPress", "onButtonDown", "onButtonRelease", "processGamepad", "registerGamepad", "browserGamepad", "gamepad", "removeGamepad", "gamepadState", "gamepadBtn", "browserGamepadBtn", "bindedBtn", "stickName", "cw", "ch", "ww", "wh", "rw", "rc", "ratio", "offset", "MOUSE_BUTTONS", "PREVENT_DEFAULT_KEYS", "KEY_ALIAS", "touches", "box", "lastMousePos", "kbGamepad", "entry", "Texture", "_Texture", "ctx", "gl", "filter", "wrap", "img", "tex", "FrameBuffer", "bytesPerRow", "temp", "topOffset", "bottomOffset", "canvas", "Shader", "vert", "frag", "attribs", "vertShader", "fragShader", "prog", "attrib", "vertError", "fragError", "uniform", "loc", "first", "BatchRenderer", "format", "maxVertices", "maxIndices", "sum", "primitive", "verts", "indices", "shader", "indexOffset", "genStack", "setFunc", "stack", "push", "pop", "initGfx", "opts", "gc", "onDestroy", "destroy", "curVertexFormat", "setVertexFormat", "fmt", "stride", "pushTexture2D", "popTexture2D", "pushArrayBuffer", "popArrayBuffer", "pushElementArrayBuffer", "popElementArrayBuffer", "pushFramebuffer", "popFramebuffer", "pushRenderbuffer", "popRenderbuffer", "pushViewport", "popViewport", "pushProgram", "popProgram", "Asset", "_Asset", "loader", "err", "asset", "AssetBucket", "handle", "loaded", "fetchURL", "fetchJSON", "path", "fetchText", "fetchArrayBuffer", "loadImg", "src", "resolve", "reject", "ASCII_CHARS", "DEF_ANCHOR", "DEF_FONT", "DBG_FONT", "DEF_FONT_FILTER", "VERTEX_FORMAT", "STRIDE", "MAX_BATCHED_QUAD", "MAX_BATCHED_VERTS", "MAX_BATCHED_INDICES", "VERT_TEMPLATE", "FRAG_TEMPLATE", "DEF_VERT", "DEF_FRAG", "COMP_DESC", "COMP_EVENTS", "TEXT_STYLE_RE", "DEF_OFFSCREEN_DIS", "DEF_JUMP_FORCE", "MAX_VEL", "buildPath", "start", "goal", "cameFrom", "node", "aStarSearch", "graph", "frontier", "costSoFar", "neighbours", "newCost", "NavEdge", "NavPolygon", "edges", "centerX", "centerY", "area", "edge", "cross", "NavMesh", "size", "pairEdge", "pairPolygon", "indexA", "indexB", "type", "startPolygon", "goalPolygon", "c3", "c4", "c5", "easings", "easings_default", "TexPacker", "gfx", "curTex", "FontData", "face", "getKaboomContext", "getRenderProps", "color", "drawon", "fadeIn", "finalOpacity", "done", "mask", "opacity", "toFixed", "easeFunc", "outline", "join", "miterLimit", "cap", "Particle", "particles", "popt", "eopt", "emitterLifetime", "colors", "opacities", "quads", "scales", "lifetime", "spread", "speed", "angleRange", "angularVelocityRange", "accelerationRange", "dampingRange", "onEndEvents", "nextFree", "velocityAngle", "vel", "angularVelocity", "acceleration", "damping", "lt", "DT", "progress", "colorIndex", "opacityIndex", "quadIndex", "scaleIndex", "hw", "hh", "raycast", "exclude", "tag", "sprite", "drawTexture", "resolveSprite", "spriteData", "curAnim", "curAnimDir", "spriteLoadedEvent", "calcTexScale", "left", "right", "top", "bottom", "tw", "th", "iw", "ih", "w1", "w3", "w2", "h3", "uv", "transform", "setSpriteData", "spr", "anim", "prevAnim", "update", "ftext", "nt", "uvquad", "agent", "target", "navMapChangedEvent", "cb", "navigation", "patrol", "waypoints", "endBehavior", "finished", "nextWaypoint", "sentry", "candidates", "get", "checkFrequency", "directionVector", "fieldOfView", "fov", "halfAngle", "objects", "tile", "tilePos", "isObstacle", "cost", "getEdgeMask", "loopup", "edgeMask", "level", "is", "health", "hp", "maxHP", "origHP", "lifespan", "fade", "named", "initState", "stateList", "transitions", "initStateEvents", "event", "trigger", "didFirstEnter", "oldState", "available", "from", "to", "stay", "scenesToStay", "timer", "actions", "curTimer", "newAction", "duration", "setValue", "curTime", "app", "isFixed", "getViewportScale", "game", "colliding", "collidingThisFrame", "col", "mpos", "hovering", "onHover", "localArea", "anchorPt", "body", "calcTransform", "curPlatform", "lastPlatformPos", "willFall", "rcol", "tmass", "col2", "addGravity", "prevVel", "maxVel", "force", "doubleJump", "numJumps", "jumpsLeft", "anchor", "fixed", "follow", "layer", "_layerIndex", "move", "offscreen", "distance", "isOut", "screenRect", "diff", "rotate", "z", "VERSION", "orig", "alignPt", "align", "createEmptyAudioBuffer", "isKaboomCtx", "fallBack", "kaplay", "gopt", "root", "gscale", "fixedSize", "styles", "pixelDensity", "fontCacheCanvas", "fontCacheC2d", "ggl", "defShader", "makeShader", "emptyTex", "frameBuffer", "bgColor", "bgAlpha", "renderer", "bgTex", "SpriteData", "frames", "anims", "slice9", "assets", "slice", "SoundData", "buf", "audio", "masterNode", "burpSnd", "burp_default", "fixURL", "make", "load", "prom", "loadProgress", "buckets", "bucket", "loadRoot", "loadJSON", "loadFont", "font", "loadBitmapFont", "gw", "gh", "makeFont", "qw", "qh", "loadSpriteAtlas", "rej", "json", "atlas", "info", "createSpriteSheet", "images", "c2d", "merged", "loadSprite", "loadPedit", "loadAseprite", "imgSrc", "jsonSrc", "resolveJSON", "loadShader", "loadShaderURL", "resolveUrl", "vcode", "fcode", "loadSound", "loadMusic", "loadBean", "bean_default", "getSprite", "getSound", "getFont", "getBitmapFont", "getShader", "getAsset", "resolveSound", "snd", "resolveShader", "resolveFont", "bfont", "volume", "playMusic", "resumeAudioCtx", "debug", "play", "paused", "srcNode", "gainNode", "startTime", "stopTime", "started", "getTime", "cloneNode", "oldNode", "newNode", "burp", "makeCanvas", "fb", "flush", "vertSrc", "fragSrc", "match", "msg", "ty", "chars", "cols", "charMap", "drawRaw", "shaderSrc", "vv", "screen2ndc", "frameStart", "drawUnscaled", "drawUVQuad", "usePostEffect", "frameEnd", "ow", "oh", "pushMatrix", "pushTranslate", "pushScale", "pushRotate", "pushTransform", "popTransform", "uvPadX", "uvPadY", "qx", "qy", "repX", "repY", "drawSprite", "getArcPts", "radiusX", "radiusY", "end", "nverts", "drawRect", "maxRadius", "drawPolygon", "drawLine", "_drawLinesBevel", "halfWidth", "isLoop", "segment", "vector", "cs", "sn", "nextSegment", "nextLength", "nextNormal", "lambda", "_drawLinesRound", "fixedPoint", "_drawLinesMiter", "drawLines", "drawCircle", "drawCurve", "segments", "drawBezier", "drawTriangle", "drawEllipse", "polyOpt", "npts", "drawStenciled", "content", "test", "drawMasked", "drawSubtracted", "applyCharTransform", "fchar", "compileStyledText", "charStyleMap", "renderText", "idxOffset", "origIdx", "fontAtlases", "formatText", "fontName", "lineSpacing", "letterSpacing", "curX", "lines", "curLine", "cursor", "lastSpace", "lastSpaceWidth", "fchars", "ox", "style", "drawText", "drawFormattedText", "getTreeRoot", "windowToContent", "contentToView", "debugPaused", "updateFrame", "camPos", "camScale", "camRot", "camFlash", "flashColor", "fadeOutTime", "flash", "add", "camTransform", "shake", "intensity", "toScreen", "toWorld", "comps", "compStates", "cleanups", "inputEvents", "onCurCompCleanup", "tags", "children", "maskFunc", "comp", "prop", "func", "checkDeps", "dep", "recurse", "isChild", "onAdd", "hierarchy", "distanceOp", "sdist", "ctrl", "evs", "onUpdate", "onDraw", "onCollide", "onCollideUpdate", "onCollideEnd", "forAllCurrentAndFuture", "onClick", "onHoverUpdate", "onHoverEnd", "setGravity", "getGravity", "setGravityDirection", "getGravityDirection", "setBackground", "getBackground", "onLoad", "scene", "def", "go", "initEvents", "onSceneLeave", "getSceneName", "getData", "setData", "plug", "plugin", "funcs", "funcsObj", "EdgeMask", "addLevel", "numRows", "numColumns", "spatialMap", "costMap", "edgeMap", "connectivityMap", "tile2Hash", "hash2Tile", "hash", "createSpatialMap", "insertIntoSpatialMap", "removeFromSpatialMap", "updateSpatialMap", "spatialMapChanged", "createCostMap", "createEdgeMap", "createConnectivityMap", "traverse", "getNeighbours", "getCost", "neighbour", "getHeuristic", "diagonals", "levelComp", "hasPos", "hasTile", "tiles", "row", "record", "frameRate", "stream", "audioDest", "recorder", "chunks", "isFocused", "readd", "destroyAll", "wait", "loop", "query", "tween", "layers", "layerNames", "defaultLayer", "defaultLayerIndex", "boom", "kaSprite", "ka_default", "boomSprite", "boom_default", "addKaboom", "kaboom", "ka", "Collision", "source", "resolved", "checkFrame", "grid", "cellSize", "checkObj", "aobj", "bbox", "xmin", "ymin", "xmax", "ymax", "checked", "cell", "check", "col1", "drawFrame", "cam", "drawLoadScreen", "drawInspectText", "txt", "pad", "ftxt", "bw", "bh", "drawDebug", "inspecting", "flipped", "logs", "log", "onLoading", "onError", "handleErr", "textStyle", "title", "onCleanup", "numTextureUnits", "unit", "isFirstFrame", "updateViewport", "rg", "sw", "sh", "kaboom_default", "dt"]
}
